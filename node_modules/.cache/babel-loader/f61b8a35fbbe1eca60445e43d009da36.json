{"ast":null,"code":"import _regeneratorRuntime from \"/home/shivanee/Downloads/ETM-project/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/shivanee/Downloads/ETM-project/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nexport var SHOW_TRAINING_URL = \"\".concat(process.env.REACT_APP_API_URL, \"dashbaord/getTraningName\");\nexport var VIEW_TRAINING_PROGRESS_URL = \"\".concat(process.env.REACT_APP_API_URL, \"progress/viewprogress\");\nexport var VIEW_TRAINING_BY_UD_URL = \"\".concat(process.env.REACT_APP_API_URL, \"progress/trainingdetails\");\nexport var ADD_PROGRESS_URL = \"\".concat(process.env.REACT_APP_API_URL, \"progress/addprogress\");\nexport var ADD_PROGRESS_COMPLETED_URL = \"\".concat(process.env.REACT_APP_API_URL, \"dashbaord/videos\");\n\n//const user = JSON.parse(localStorage.getItem('user'));\n\nexport var showTraining = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(eId) {\n    var user;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            user = JSON.parse(localStorage.getItem(\"user\"));\n            return _context.abrupt(\"return\", fetch(SHOW_TRAINING_URL + \"/\" + eId, {\n              method: \"GET\",\n              headers: {\n                \"Content-type\": \"application/json\",\n                Authorization: user.accessToken // notice the Bearer before your token\n              }\n            }));\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return function showTraining(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var viewTrainingProgress = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(training_id, user) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", fetch(VIEW_TRAINING_PROGRESS_URL, {\n              method: \"POST\",\n              headers: {\n                \"Content-type\": \"application/json\",\n                Authorization: user.accessToken // notice the Bearer before your token\n              },\n\n              body: JSON.stringify({\n                \"training_id\": training_id,\n                \"emp_id\": user.user._id\n              })\n            }));\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return function viewTrainingProgress(_x2, _x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var viewTrainingById = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(training_id, user) {\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            return _context3.abrupt(\"return\", fetch(VIEW_TRAINING_BY_UD_URL + \"/\" + training_id, {\n              method: \"PATCH\",\n              headers: {\n                \"Content-type\": \"application/json\",\n                Authorization: user.accessToken // notice the Bearer before your token\n              }\n            }));\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return function viewTrainingById(_x4, _x5) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var addTrainingProgress = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(training_id, edata, user) {\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            console.log(training_id.id);\n            return _context4.abrupt(\"return\", fetch(ADD_PROGRESS_URL, {\n              method: \"POST\",\n              headers: {\n                \"Content-type\": \"application/json\",\n                Authorization: user.accessToken // notice the Bearer before your token\n              },\n\n              body: JSON.stringify({\n                \"training_id\": training_id.id,\n                \"emp_id\": user.user._id,\n                \"start_week\": edata.start_week,\n                \"end_week\": edata.end_week,\n                \"completed_videos\": edata.completedvideo\n              })\n            }));\n          case 2:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return function addTrainingProgress(_x6, _x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nexport var getEmployeeDash = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(id, user) {\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            return _context5.abrupt(\"return\", fetch('http://localhost:5001/api/v1/dashbaord/getTraningName/' + id, {\n              method: 'GET',\n              headers: {\n                'Content-type': 'application/json',\n                'Authorization': user.accessToken // notice the Bearer before your token\n              }\n            }));\n          case 1:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return function getEmployeeDash(_x9, _x10) {\n    return _ref5.apply(this, arguments);\n  };\n}();\nexport var showTrainingCompletedVideos = /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(trngid, user) {\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            return _context6.abrupt(\"return\", fetch(ADD_PROGRESS_COMPLETED_URL, {\n              method: \"POST\",\n              headers: {\n                \"Content-type\": \"application/json\",\n                Authorization: user.accessToken // notice the Bearer before your token\n              },\n\n              body: JSON.stringify({\n                \"training_id\": trngid,\n                \"emp_id\": user.user._id\n              })\n            }));\n          case 1:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n  return function showTrainingCompletedVideos(_x11, _x12) {\n    return _ref6.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["SHOW_TRAINING_URL","concat","process","env","REACT_APP_API_URL","VIEW_TRAINING_PROGRESS_URL","VIEW_TRAINING_BY_UD_URL","ADD_PROGRESS_URL","ADD_PROGRESS_COMPLETED_URL","showTraining","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","eId","user","wrap","_callee$","_context","prev","next","JSON","parse","localStorage","getItem","abrupt","fetch","method","headers","Authorization","accessToken","stop","_x","apply","arguments","viewTrainingProgress","_ref2","_callee2","training_id","_callee2$","_context2","body","stringify","_id","_x2","_x3","viewTrainingById","_ref3","_callee3","_callee3$","_context3","_x4","_x5","addTrainingProgress","_ref4","_callee4","edata","_callee4$","_context4","console","log","id","start_week","end_week","completedvideo","_x6","_x7","_x8","getEmployeeDash","_ref5","_callee5","_callee5$","_context5","_x9","_x10","showTrainingCompletedVideos","_ref6","_callee6","trngid","_callee6$","_context6","_x11","_x12"],"sources":["/home/shivanee/Downloads/ETM-project/react/src/app/modules/Employee/redux/function.js"],"sourcesContent":["export const SHOW_TRAINING_URL = `${process.env.REACT_APP_API_URL}dashbaord/getTraningName`;\r\nexport const VIEW_TRAINING_PROGRESS_URL = `${process.env.REACT_APP_API_URL}progress/viewprogress`;\r\nexport const VIEW_TRAINING_BY_UD_URL = `${process.env.REACT_APP_API_URL}progress/trainingdetails`;\r\nexport const ADD_PROGRESS_URL = `${process.env.REACT_APP_API_URL}progress/addprogress`;\r\nexport const ADD_PROGRESS_COMPLETED_URL = `${process.env.REACT_APP_API_URL}dashbaord/videos`;\r\n\r\n//const user = JSON.parse(localStorage.getItem('user'));\r\n\r\nexport const showTraining = async (eId) => {\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n  return fetch(SHOW_TRAINING_URL + \"/\" + eId, {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n      Authorization: user.accessToken, // notice the Bearer before your token\r\n    },\r\n  });\r\n};\r\n\r\nexport const viewTrainingProgress = async (training_id, user) => {\r\n  return fetch(VIEW_TRAINING_PROGRESS_URL, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n      Authorization: user.accessToken, // notice the Bearer before your token\r\n    },\r\n    body: JSON.stringify({\r\n      \"training_id\": training_id,\r\n      \"emp_id\": user.user._id,\r\n\r\n    })\r\n  });\r\n};\r\n\r\nexport const viewTrainingById = async (training_id, user) => {\r\n  // console.log(training_id, user, \"id\");\r\n\r\n  return fetch(VIEW_TRAINING_BY_UD_URL + \"/\" + training_id, {\r\n    method: \"PATCH\",\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n      Authorization: user.accessToken, // notice the Bearer before your token\r\n    },\r\n\r\n  });\r\n};\r\n\r\nexport const addTrainingProgress = async (training_id, edata, user) => {\r\n  console.log(training_id.id);\r\n\r\n  return fetch(ADD_PROGRESS_URL, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n      Authorization: user.accessToken, // notice the Bearer before your token\r\n    },\r\n    body: JSON.stringify({\r\n      \"training_id\": training_id.id,\r\n      \"emp_id\": user.user._id,\r\n      \"start_week\": edata.start_week,\r\n      \"end_week\": edata.end_week,\r\n      \"completed_videos\": edata.completedvideo\r\n\r\n    })\r\n  });\r\n};\r\nexport const getEmployeeDash = async (id, user) => {\r\n  return fetch('http://localhost:5001/api/v1/dashbaord/getTraningName/' + id, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-type': 'application/json',\r\n      'Authorization': user.accessToken, // notice the Bearer before your token\r\n    },\r\n  })\r\n};\r\n\r\nexport const showTrainingCompletedVideos = async (trngid, user) => {\r\n  //console.log(trngid,user);\r\n  return fetch(ADD_PROGRESS_COMPLETED_URL, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n      Authorization: user.accessToken, // notice the Bearer before your token\r\n    },\r\n    body: JSON.stringify({\r\n      \"training_id\": trngid,\r\n      \"emp_id\": user.user._id\r\n\r\n    })\r\n  });\r\n};\r\n\r\n\r\n"],"mappings":";;AAAA,OAAO,IAAMA,iBAAiB,MAAAC,MAAA,CAAMC,OAAO,CAACC,GAAG,CAACC,iBAAiB,6BAA0B;AAC3F,OAAO,IAAMC,0BAA0B,MAAAJ,MAAA,CAAMC,OAAO,CAACC,GAAG,CAACC,iBAAiB,0BAAuB;AACjG,OAAO,IAAME,uBAAuB,MAAAL,MAAA,CAAMC,OAAO,CAACC,GAAG,CAACC,iBAAiB,6BAA0B;AACjG,OAAO,IAAMG,gBAAgB,MAAAN,MAAA,CAAMC,OAAO,CAACC,GAAG,CAACC,iBAAiB,yBAAsB;AACtF,OAAO,IAAMI,0BAA0B,MAAAP,MAAA,CAAMC,OAAO,CAACC,GAAG,CAACC,iBAAiB,qBAAkB;;AAE5F;;AAEA,OAAO,IAAMK,YAAY;EAAA,IAAAC,IAAA,GAAAC,iBAAA,eAAAC,mBAAA,CAAAC,IAAA,CAAG,SAAAC,QAAOC,GAAG;IAAA,IAAAC,IAAA;IAAA,OAAAJ,mBAAA,CAAAK,IAAA,UAAAC,SAAAC,QAAA;MAAA;QAAA,QAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YAC9BL,IAAI,GAAGM,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;YAAA,OAAAN,QAAA,CAAAO,MAAA,WAE9CC,KAAK,CAAC3B,iBAAiB,GAAG,GAAG,GAAGe,GAAG,EAAE;cAC1Ca,MAAM,EAAE,KAAK;cACbC,OAAO,EAAE;gBACP,cAAc,EAAE,kBAAkB;gBAClCC,aAAa,EAAEd,IAAI,CAACe,WAAW,CAAE;cACnC;YACF,CAAC,CAAC;UAAA;UAAA;YAAA,OAAAZ,QAAA,CAAAa,IAAA;QAAA;MAAA;IAAA,GAAAlB,OAAA;EAAA,CACH;EAAA,gBAVYL,YAAYA,CAAAwB,EAAA;IAAA,OAAAvB,IAAA,CAAAwB,KAAA,OAAAC,SAAA;EAAA;AAAA,GAUxB;AAED,OAAO,IAAMC,oBAAoB;EAAA,IAAAC,KAAA,GAAA1B,iBAAA,eAAAC,mBAAA,CAAAC,IAAA,CAAG,SAAAyB,SAAOC,WAAW,EAAEvB,IAAI;IAAA,OAAAJ,mBAAA,CAAAK,IAAA,UAAAuB,UAAAC,SAAA;MAAA;QAAA,QAAAA,SAAA,CAAArB,IAAA,GAAAqB,SAAA,CAAApB,IAAA;UAAA;YAAA,OAAAoB,SAAA,CAAAf,MAAA,WACnDC,KAAK,CAACtB,0BAA0B,EAAE;cACvCuB,MAAM,EAAE,MAAM;cACdC,OAAO,EAAE;gBACP,cAAc,EAAE,kBAAkB;gBAClCC,aAAa,EAAEd,IAAI,CAACe,WAAW,CAAE;cACnC,CAAC;;cACDW,IAAI,EAAEpB,IAAI,CAACqB,SAAS,CAAC;gBACnB,aAAa,EAAEJ,WAAW;gBAC1B,QAAQ,EAAEvB,IAAI,CAACA,IAAI,CAAC4B;cAEtB,CAAC;YACH,CAAC,CAAC;UAAA;UAAA;YAAA,OAAAH,SAAA,CAAAT,IAAA;QAAA;MAAA;IAAA,GAAAM,QAAA;EAAA,CACH;EAAA,gBAbYF,oBAAoBA,CAAAS,GAAA,EAAAC,GAAA;IAAA,OAAAT,KAAA,CAAAH,KAAA,OAAAC,SAAA;EAAA;AAAA,GAahC;AAED,OAAO,IAAMY,gBAAgB;EAAA,IAAAC,KAAA,GAAArC,iBAAA,eAAAC,mBAAA,CAAAC,IAAA,CAAG,SAAAoC,SAAOV,WAAW,EAAEvB,IAAI;IAAA,OAAAJ,mBAAA,CAAAK,IAAA,UAAAiC,UAAAC,SAAA;MAAA;QAAA,QAAAA,SAAA,CAAA/B,IAAA,GAAA+B,SAAA,CAAA9B,IAAA;UAAA;YAAA,OAAA8B,SAAA,CAAAzB,MAAA,WAG/CC,KAAK,CAACrB,uBAAuB,GAAG,GAAG,GAAGiC,WAAW,EAAE;cACxDX,MAAM,EAAE,OAAO;cACfC,OAAO,EAAE;gBACP,cAAc,EAAE,kBAAkB;gBAClCC,aAAa,EAAEd,IAAI,CAACe,WAAW,CAAE;cACnC;YAEF,CAAC,CAAC;UAAA;UAAA;YAAA,OAAAoB,SAAA,CAAAnB,IAAA;QAAA;MAAA;IAAA,GAAAiB,QAAA;EAAA,CACH;EAAA,gBAXYF,gBAAgBA,CAAAK,GAAA,EAAAC,GAAA;IAAA,OAAAL,KAAA,CAAAd,KAAA,OAAAC,SAAA;EAAA;AAAA,GAW5B;AAED,OAAO,IAAMmB,mBAAmB;EAAA,IAAAC,KAAA,GAAA5C,iBAAA,eAAAC,mBAAA,CAAAC,IAAA,CAAG,SAAA2C,SAAOjB,WAAW,EAAEkB,KAAK,EAAEzC,IAAI;IAAA,OAAAJ,mBAAA,CAAAK,IAAA,UAAAyC,UAAAC,SAAA;MAAA;QAAA,QAAAA,SAAA,CAAAvC,IAAA,GAAAuC,SAAA,CAAAtC,IAAA;UAAA;YAChEuC,OAAO,CAACC,GAAG,CAACtB,WAAW,CAACuB,EAAE,CAAC;YAAC,OAAAH,SAAA,CAAAjC,MAAA,WAErBC,KAAK,CAACpB,gBAAgB,EAAE;cAC7BqB,MAAM,EAAE,MAAM;cACdC,OAAO,EAAE;gBACP,cAAc,EAAE,kBAAkB;gBAClCC,aAAa,EAAEd,IAAI,CAACe,WAAW,CAAE;cACnC,CAAC;;cACDW,IAAI,EAAEpB,IAAI,CAACqB,SAAS,CAAC;gBACnB,aAAa,EAAEJ,WAAW,CAACuB,EAAE;gBAC7B,QAAQ,EAAE9C,IAAI,CAACA,IAAI,CAAC4B,GAAG;gBACvB,YAAY,EAAEa,KAAK,CAACM,UAAU;gBAC9B,UAAU,EAAEN,KAAK,CAACO,QAAQ;gBAC1B,kBAAkB,EAAEP,KAAK,CAACQ;cAE5B,CAAC;YACH,CAAC,CAAC;UAAA;UAAA;YAAA,OAAAN,SAAA,CAAA3B,IAAA;QAAA;MAAA;IAAA,GAAAwB,QAAA;EAAA,CACH;EAAA,gBAlBYF,mBAAmBA,CAAAY,GAAA,EAAAC,GAAA,EAAAC,GAAA;IAAA,OAAAb,KAAA,CAAArB,KAAA,OAAAC,SAAA;EAAA;AAAA,GAkB/B;AACD,OAAO,IAAMkC,eAAe;EAAA,IAAAC,KAAA,GAAA3D,iBAAA,eAAAC,mBAAA,CAAAC,IAAA,CAAG,SAAA0D,SAAOT,EAAE,EAAE9C,IAAI;IAAA,OAAAJ,mBAAA,CAAAK,IAAA,UAAAuD,UAAAC,SAAA;MAAA;QAAA,QAAAA,SAAA,CAAArD,IAAA,GAAAqD,SAAA,CAAApD,IAAA;UAAA;YAAA,OAAAoD,SAAA,CAAA/C,MAAA,WACrCC,KAAK,CAAC,wDAAwD,GAAGmC,EAAE,EAAE;cAC1ElC,MAAM,EAAE,KAAK;cACbC,OAAO,EAAE;gBACP,cAAc,EAAE,kBAAkB;gBAClC,eAAe,EAAEb,IAAI,CAACe,WAAW,CAAE;cACrC;YACF,CAAC,CAAC;UAAA;UAAA;YAAA,OAAA0C,SAAA,CAAAzC,IAAA;QAAA;MAAA;IAAA,GAAAuC,QAAA;EAAA,CACH;EAAA,gBARYF,eAAeA,CAAAK,GAAA,EAAAC,IAAA;IAAA,OAAAL,KAAA,CAAApC,KAAA,OAAAC,SAAA;EAAA;AAAA,GAQ3B;AAED,OAAO,IAAMyC,2BAA2B;EAAA,IAAAC,KAAA,GAAAlE,iBAAA,eAAAC,mBAAA,CAAAC,IAAA,CAAG,SAAAiE,SAAOC,MAAM,EAAE/D,IAAI;IAAA,OAAAJ,mBAAA,CAAAK,IAAA,UAAA+D,UAAAC,SAAA;MAAA;QAAA,QAAAA,SAAA,CAAA7D,IAAA,GAAA6D,SAAA,CAAA5D,IAAA;UAAA;YAAA,OAAA4D,SAAA,CAAAvD,MAAA,WAErDC,KAAK,CAACnB,0BAA0B,EAAE;cACvCoB,MAAM,EAAE,MAAM;cACdC,OAAO,EAAE;gBACP,cAAc,EAAE,kBAAkB;gBAClCC,aAAa,EAAEd,IAAI,CAACe,WAAW,CAAE;cACnC,CAAC;;cACDW,IAAI,EAAEpB,IAAI,CAACqB,SAAS,CAAC;gBACnB,aAAa,EAAEoC,MAAM;gBACrB,QAAQ,EAAE/D,IAAI,CAACA,IAAI,CAAC4B;cAEtB,CAAC;YACH,CAAC,CAAC;UAAA;UAAA;YAAA,OAAAqC,SAAA,CAAAjD,IAAA;QAAA;MAAA;IAAA,GAAA8C,QAAA;EAAA,CACH;EAAA,gBAdYF,2BAA2BA,CAAAM,IAAA,EAAAC,IAAA;IAAA,OAAAN,KAAA,CAAA3C,KAAA,OAAAC,SAAA;EAAA;AAAA,GAcvC"},"metadata":{},"sourceType":"module"}