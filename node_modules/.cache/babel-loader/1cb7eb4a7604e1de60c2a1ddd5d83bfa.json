{"ast":null,"code":"var _jsxFileName = \"/home/shivanee/Downloads/ETM-project/react/src/_metronic/layout/components/header/header-menu/HeaderMenuWrapper.js\";\nimport React, { useMemo } from \"react\";\nimport objectPath from \"object-path\";\nimport { Link } from \"react-router-dom\";\nimport { toAbsoluteUrl } from \"../../../../_helpers\";\nimport { useHtmlClassService } from \"../../../_core/MetronicLayout\";\nimport { HeaderMenu } from \"./HeaderMenu\";\nexport function HeaderMenuWrapper() {\n  var uiService = useHtmlClassService();\n  var layoutProps = useMemo(function () {\n    return {\n      config: uiService.config,\n      ktMenuClasses: uiService.getClasses(\"header_menu\", true),\n      rootArrowEnabled: objectPath.get(uiService.config, \"header.menu.self.root-arrow\"),\n      menuDesktopToggle: objectPath.get(uiService.config, \"header.menu.desktop.toggle\"),\n      headerMenuAttributes: uiService.getAttributes(\"header_menu\"),\n      headerSelfTheme: objectPath.get(uiService.config, \"header.self.theme\"),\n      ulClasses: uiService.getClasses(\"header_menu_nav\", true),\n      disabledAsideSelfDisplay: objectPath.get(uiService.config, \"aside.self.display\") === false\n    };\n  }, [uiService]);\n  var getHeaderLogo = function getHeaderLogo() {\n    var result = \"logo-light.png\";\n    if (layoutProps.headerSelfTheme && layoutProps.headerSelfTheme !== \"dark\") {\n      result = \"logo-dark.png\";\n    }\n    return toAbsoluteUrl(\"/media/logos/\".concat(result));\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-menu-wrapper header-menu-wrapper-left\",\n    id: \"kt_header_menu_wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, layoutProps.disabledAsideSelfDisplay && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"logo\",\n    src: getHeaderLogo(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(HeaderMenu, {\n    layoutProps: layoutProps,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  })));\n}","map":{"version":3,"names":["React","useMemo","objectPath","Link","toAbsoluteUrl","useHtmlClassService","HeaderMenu","HeaderMenuWrapper","uiService","layoutProps","config","ktMenuClasses","getClasses","rootArrowEnabled","get","menuDesktopToggle","headerMenuAttributes","getAttributes","headerSelfTheme","ulClasses","disabledAsideSelfDisplay","getHeaderLogo","result","concat","createElement","Fragment","className","id","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","to","alt","src"],"sources":["/home/shivanee/Downloads/ETM-project/react/src/_metronic/layout/components/header/header-menu/HeaderMenuWrapper.js"],"sourcesContent":["import React, {useMemo} from \"react\";\r\nimport objectPath from \"object-path\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {toAbsoluteUrl} from \"../../../../_helpers\";\r\nimport {useHtmlClassService} from \"../../../_core/MetronicLayout\";\r\nimport {HeaderMenu} from \"./HeaderMenu\";\r\n\r\nexport function HeaderMenuWrapper() {\r\n    const uiService = useHtmlClassService();\r\n    const layoutProps = useMemo(() => {\r\n        return {\r\n            config: uiService.config,\r\n            ktMenuClasses: uiService.getClasses(\"header_menu\", true),\r\n            rootArrowEnabled: objectPath.get(\r\n                uiService.config,\r\n                \"header.menu.self.root-arrow\"\r\n            ),\r\n            menuDesktopToggle: objectPath.get(uiService.config, \"header.menu.desktop.toggle\"),\r\n            headerMenuAttributes: uiService.getAttributes(\"header_menu\"),\r\n            headerSelfTheme: objectPath.get(uiService.config, \"header.self.theme\"),\r\n            ulClasses: uiService.getClasses(\"header_menu_nav\", true),\r\n            disabledAsideSelfDisplay:\r\n                objectPath.get(uiService.config, \"aside.self.display\") === false\r\n        };\r\n    }, [uiService]);\r\n    const getHeaderLogo = () => {\r\n        let result = \"logo-light.png\";\r\n        if (layoutProps.headerSelfTheme && layoutProps.headerSelfTheme !== \"dark\") {\r\n            result = \"logo-dark.png\";\r\n        }\r\n        return toAbsoluteUrl(`/media/logos/${result}`);\r\n    };\r\n\r\n    return <>\r\n        {/*begin::Header Menu Wrapper*/}\r\n        <div className=\"header-menu-wrapper header-menu-wrapper-left\" id=\"kt_header_menu_wrapper\">\r\n            {layoutProps.disabledAsideSelfDisplay && (\r\n                <>\r\n                    {/*begin::Header Logo*/}\r\n                    <div className=\"header-logo\">\r\n                        <Link to=\"/\">\r\n                            <img alt=\"logo\" src={getHeaderLogo()}/>\r\n                        </Link>\r\n                    </div>\r\n                    {/*end::Header Logo*/}\r\n                </>\r\n            )}\r\n            {/*begin::Header Menu*/}\r\n            <HeaderMenu layoutProps={layoutProps} />\r\n            {/*end::Header Menu*/}\r\n        </div>\r\n        {/*Header Menu Wrapper*/}\r\n    </>\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,OAAO,QAAO,OAAO;AACpC,OAAOC,UAAU,MAAM,aAAa;AACpC,SAAQC,IAAI,QAAO,kBAAkB;AACrC,SAAQC,aAAa,QAAO,sBAAsB;AAClD,SAAQC,mBAAmB,QAAO,+BAA+B;AACjE,SAAQC,UAAU,QAAO,cAAc;AAEvC,OAAO,SAASC,iBAAiBA,CAAA,EAAG;EAChC,IAAMC,SAAS,GAAGH,mBAAmB,EAAE;EACvC,IAAMI,WAAW,GAAGR,OAAO,CAAC,YAAM;IAC9B,OAAO;MACHS,MAAM,EAAEF,SAAS,CAACE,MAAM;MACxBC,aAAa,EAAEH,SAAS,CAACI,UAAU,CAAC,aAAa,EAAE,IAAI,CAAC;MACxDC,gBAAgB,EAAEX,UAAU,CAACY,GAAG,CAC5BN,SAAS,CAACE,MAAM,EAChB,6BAA6B,CAChC;MACDK,iBAAiB,EAAEb,UAAU,CAACY,GAAG,CAACN,SAAS,CAACE,MAAM,EAAE,4BAA4B,CAAC;MACjFM,oBAAoB,EAAER,SAAS,CAACS,aAAa,CAAC,aAAa,CAAC;MAC5DC,eAAe,EAAEhB,UAAU,CAACY,GAAG,CAACN,SAAS,CAACE,MAAM,EAAE,mBAAmB,CAAC;MACtES,SAAS,EAAEX,SAAS,CAACI,UAAU,CAAC,iBAAiB,EAAE,IAAI,CAAC;MACxDQ,wBAAwB,EACpBlB,UAAU,CAACY,GAAG,CAACN,SAAS,CAACE,MAAM,EAAE,oBAAoB,CAAC,KAAK;IACnE,CAAC;EACL,CAAC,EAAE,CAACF,SAAS,CAAC,CAAC;EACf,IAAMa,aAAa,GAAG,SAAhBA,aAAaA,CAAA,EAAS;IACxB,IAAIC,MAAM,GAAG,gBAAgB;IAC7B,IAAIb,WAAW,CAACS,eAAe,IAAIT,WAAW,CAACS,eAAe,KAAK,MAAM,EAAE;MACvEI,MAAM,GAAG,eAAe;IAC5B;IACA,OAAOlB,aAAa,iBAAAmB,MAAA,CAAiBD,MAAM,EAAG;EAClD,CAAC;EAED,oBAAOtB,KAAA,CAAAwB,aAAA,CAAAxB,KAAA,CAAAyB,QAAA,qBAEHzB,KAAA,CAAAwB,aAAA;IAAKE,SAAS,EAAC,8CAA8C;IAACC,EAAE,EAAC,wBAAwB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACpFxB,WAAW,CAACW,wBAAwB,iBACjCpB,KAAA,CAAAwB,aAAA,CAAAxB,KAAA,CAAAyB,QAAA,qBAEIzB,KAAA,CAAAwB,aAAA;IAAKE,SAAS,EAAC,aAAa;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACxBjC,KAAA,CAAAwB,aAAA,CAACrB,IAAI;IAAC+B,EAAE,EAAC,GAAG;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACRjC,KAAA,CAAAwB,aAAA;IAAKW,GAAG,EAAC,MAAM;IAACC,GAAG,EAAEf,aAAa,EAAG;IAAAO,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAE,CACpC,CACL,CAGb,eAEDjC,KAAA,CAAAwB,aAAA,CAAClB,UAAU;IAACG,WAAW,EAAEA,WAAY;IAAAmB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAG,CAEtC,CAEP;AACP"},"metadata":{},"sourceType":"module"}