{"ast":null,"code":"import _regeneratorRuntime from \"/home/shivanee/Downloads/ETM-project/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/shivanee/Downloads/ETM-project/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/shivanee/Downloads/ETM-project/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/shivanee/Downloads/ETM-project/react/src/app/modules/Auth/_redux/AuthInit.js\";\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { shallowEqual, useSelector, connect, useDispatch } from \"react-redux\";\nimport { LayoutSplashScreen } from \"../../../../_metronic/layout\";\nimport * as auth from \"./authRedux\";\nimport { getUserByToken } from \"./authCrud\";\nfunction AuthInit(props) {\n  var didRequest = useRef(false);\n  var dispatch = useDispatch();\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    showSplashScreen = _useState2[0],\n    setShowSplashScreen = _useState2[1];\n  var _useSelector = useSelector(function (_ref) {\n      var auth = _ref.auth;\n      return {\n        authToken: auth.authToken\n      };\n    }, shallowEqual),\n    authToken = _useSelector.authToken;\n\n  // We should request user by authToken before rendering the application\n  useEffect(function () {\n    var requestUser = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var chekUser, token, userval;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                try {\n                  if (!didRequest.current) {\n                    //console.log(token);\n                    //const { data: user } = await getUserByToken();\n                    chekUser = localStorage.getItem(\"user\");\n                    token = JSON.parse(chekUser).accessToken;\n                    userval = JSON.parse(chekUser).user;\n                    dispatch(props.fulfillUser(userval));\n                  }\n                } catch (error) {\n                  //console.error(error);\n                  if (!didRequest.current) {\n                    dispatch(props.logout());\n                  }\n                } finally {\n                  setShowSplashScreen(false);\n                }\n                return _context.abrupt(\"return\", function () {\n                  return didRequest.current = true;\n                });\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return function requestUser() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    if (authToken) {\n      requestUser();\n    } else {\n      dispatch(props.fulfillUser(undefined));\n      setShowSplashScreen(false);\n    }\n    // eslint-disable-next-line\n  }, []);\n  return showSplashScreen ? /*#__PURE__*/React.createElement(LayoutSplashScreen, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 29\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, props.children);\n}\nexport default connect(null, auth.actions)(AuthInit);","map":{"version":3,"names":["React","useRef","useEffect","useState","shallowEqual","useSelector","connect","useDispatch","LayoutSplashScreen","auth","getUserByToken","AuthInit","props","didRequest","dispatch","_useState","_useState2","_slicedToArray","showSplashScreen","setShowSplashScreen","_useSelector","_ref","authToken","requestUser","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","chekUser","token","userval","wrap","_callee$","_context","prev","next","current","localStorage","getItem","JSON","parse","accessToken","user","fulfillUser","error","logout","abrupt","stop","apply","arguments","undefined","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","children","actions"],"sources":["/home/shivanee/Downloads/ETM-project/react/src/app/modules/Auth/_redux/AuthInit.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\r\nimport { shallowEqual, useSelector, connect, useDispatch } from \"react-redux\";\r\nimport { LayoutSplashScreen } from \"../../../../_metronic/layout\";\r\nimport * as auth from \"./authRedux\";\r\nimport { getUserByToken } from \"./authCrud\";\r\n\r\nfunction AuthInit(props) {\r\n  const didRequest = useRef(false);\r\n  const dispatch = useDispatch();\r\n  const [showSplashScreen, setShowSplashScreen] = useState(true);\r\n  const { authToken } = useSelector(\r\n    ({ auth }) => ({\r\n      authToken: auth.authToken,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n\r\n\r\n  // We should request user by authToken before rendering the application\r\n  useEffect(() => {\r\n    const requestUser = async () => {\r\n      try {\r\n        if (!didRequest.current) {\r\n          //console.log(token);\r\n          //const { data: user } = await getUserByToken();\r\n          const chekUser = localStorage.getItem(\"user\");\r\n          const token = JSON.parse(chekUser).accessToken;\r\n          const userval = JSON.parse(chekUser).user;\r\n          dispatch(props.fulfillUser(userval));\r\n        }\r\n      } catch (error) {\r\n        //console.error(error);\r\n        if (!didRequest.current) {\r\n          dispatch(props.logout());\r\n        }\r\n      } finally {\r\n        setShowSplashScreen(false);\r\n      }\r\n\r\n      return () => (didRequest.current = true);\r\n    };\r\n\r\n    if (authToken) {\r\n      requestUser();\r\n    } else {\r\n      dispatch(props.fulfillUser(undefined));\r\n      setShowSplashScreen(false);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return showSplashScreen ? <LayoutSplashScreen /> : <>{props.children}</>;\r\n}\r\n\r\nexport default connect(null, auth.actions)(AuthInit);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}