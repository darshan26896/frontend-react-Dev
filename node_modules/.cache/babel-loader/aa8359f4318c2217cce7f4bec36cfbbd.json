{"ast":null,"code":"import _objectSpread from \"/home/shivanee/Downloads/ETM-project/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/shivanee/Downloads/ETM-project/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n/**\r\n * @function: getSelectedRights\r\n * @author: DEVIT\r\n * @description: this method used for extract rights as per selected roles\r\n * @params: userRights: array, filterKeys: array\r\n */\nvar getSelectedRights = function getSelectedRights(userRights, filterKeys) {\n  if (userRights && userRights.length > 0) {\n    return userRights.filter(function (item) {\n      return filterKeys.indexOf(item.id) !== -1;\n    });\n  } else {\n    return [];\n  }\n};\n\n/**\r\n * @function: checkInternalModule\r\n * @author: DEVIT\r\n * @description: this method used for check and add new rights if not found\r\n * @params: oldPermission: array, internalArray: array\r\n */\nexport var checkInternalModule = function checkInternalModule(oldPermission, internalArray) {\n  internalArray.forEach(function (item) {\n    if (oldPermission.indexOf(item) == -1) {\n      oldPermission.push(item);\n    }\n  });\n  return oldPermission;\n};\n\n/**\r\n * @function: generateUniquePermission\r\n * @author: DEVIT\r\n * @description: this method used for check and update the permission array from previous array\r\n * @params: oldPermission: array, newRights: array\r\n */\nvar generateUniquePermission = function generateUniquePermission(oldPermission, newRights) {\n  var extactNewRights = JSON.parse(newRights);\n  if (extactNewRights.length > 0) {\n    Object.entries(extactNewRights[0]).forEach(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n        key = _ref2[0],\n        value = _ref2[1];\n      if (!oldPermission.hasOwnProperty(key)) {\n        oldPermission[key] = [];\n      }\n      oldPermission[key] = checkInternalModule(oldPermission[key], value);\n    });\n  }\n  return oldPermission;\n};\n\n/**\r\n * @function: createPermissionObject\r\n * @author: DEVIT\r\n * @description: this method used for extract roles array and generate a \r\n * new array with uniques modules and rights\r\n * @params: selectedRolesObj: array\r\n */\nvar createPermissionObject = function createPermissionObject(selectedRolesObj) {\n  return selectedRolesObj.reduce(function (prevVal, iterateVal) {\n    if (iterateVal && iterateVal.rights && iterateVal.rights != '') {\n      prevVal.push(_objectSpread({}, generateUniquePermission(prevVal, iterateVal.rights)));\n    }\n    return prevVal;\n  }, []);\n};\n\n/**\r\n * @function: createCommonRights\r\n * @author: DEVIT\r\n * @description: this method used to create a permission array for user module\r\n * @params: fnParams: array\r\n */\nexport var createCommonRights = function createCommonRights() {\n  var selectedRoleIds = arguments.length <= 0 ? undefined : arguments[0];\n  var userRights = arguments.length <= 1 ? undefined : arguments[1];\n  var getSelectedKeys = selectedRoleIds.map(function (item) {\n    return Number(item.value);\n  });\n  var getSelectedRightsArray = getSelectedRights(userRights, getSelectedKeys);\n  if (getSelectedRightsArray.length > 0) {\n    return createPermissionObject(getSelectedRightsArray);\n  } else {\n    return [];\n  }\n};\n\n/**\r\n * @function: checkNewCheckBox\r\n * @author: DEVIT\r\n * @description: this method used to check/uncheck checkbox for right module\r\n * @params: fnParams: array\r\n */\nexport var checkNewCheckBox = function checkNewCheckBox(checked, permission, module_slug, key) {\n  if (checked) {\n    if (!permission) {\n      permission = {};\n    }\n    if (!permission[module_slug]) {\n      permission[module_slug] = [];\n    }\n    permission[module_slug].push(key);\n  } else {\n    if (permission[module_slug] && permission[module_slug].indexOf(key) !== -1) {\n      permission[module_slug].splice(permission[module_slug].indexOf(key), 1);\n    }\n    if (permission[module_slug] && permission[module_slug].length == 0) {\n      delete permission[module_slug];\n    }\n  }\n  return permission;\n};","map":{"version":3,"names":["getSelectedRights","userRights","filterKeys","length","filter","item","indexOf","id","checkInternalModule","oldPermission","internalArray","forEach","push","generateUniquePermission","newRights","extactNewRights","JSON","parse","Object","entries","_ref","_ref2","_slicedToArray","key","value","hasOwnProperty","createPermissionObject","selectedRolesObj","reduce","prevVal","iterateVal","rights","_objectSpread","createCommonRights","selectedRoleIds","arguments","undefined","getSelectedKeys","map","Number","getSelectedRightsArray","checkNewCheckBox","checked","permission","module_slug","splice"],"sources":["/home/shivanee/Downloads/ETM-project/react/src/app/modules/roles/userCommon.js"],"sourcesContent":["/**\r\n * @function: getSelectedRights\r\n * @author: DEVIT\r\n * @description: this method used for extract rights as per selected roles\r\n * @params: userRights: array, filterKeys: array\r\n */\r\nconst getSelectedRights = (userRights, filterKeys) => {\r\n    if (userRights && userRights.length > 0) {\r\n        return userRights.filter(item => filterKeys.indexOf(item.id) !== -1);\r\n    } else {\r\n        return [];\r\n    }\r\n}\r\n\r\n/**\r\n * @function: checkInternalModule\r\n * @author: DEVIT\r\n * @description: this method used for check and add new rights if not found\r\n * @params: oldPermission: array, internalArray: array\r\n */\r\nexport const checkInternalModule = (oldPermission, internalArray) => {\r\n    internalArray.forEach(item => {\r\n        if (oldPermission.indexOf(item) == -1) {\r\n            oldPermission.push(item);\r\n        }\r\n    })\r\n\r\n    return oldPermission;\r\n}\r\n\r\n/**\r\n * @function: generateUniquePermission\r\n * @author: DEVIT\r\n * @description: this method used for check and update the permission array from previous array\r\n * @params: oldPermission: array, newRights: array\r\n */\r\nconst generateUniquePermission = (oldPermission, newRights) => {\r\n    let extactNewRights = JSON.parse(newRights);\r\n    if (extactNewRights.length > 0) {\r\n        Object.entries(extactNewRights[0]).forEach(([key, value]) => {\r\n            if (!oldPermission.hasOwnProperty(key)) {\r\n                oldPermission[key] = [];\r\n            }\r\n\r\n            oldPermission[key] = checkInternalModule(oldPermission[key], value)\r\n        });\r\n    }\r\n\r\n    return oldPermission;\r\n}\r\n\r\n/**\r\n * @function: createPermissionObject\r\n * @author: DEVIT\r\n * @description: this method used for extract roles array and generate a \r\n * new array with uniques modules and rights\r\n * @params: selectedRolesObj: array\r\n */\r\nconst createPermissionObject = (selectedRolesObj) => {\r\n    return selectedRolesObj.reduce((prevVal, iterateVal) => {\r\n        if (iterateVal && iterateVal.rights && iterateVal.rights != '') {\r\n            prevVal.push({ ...generateUniquePermission(prevVal, iterateVal.rights) });\r\n        }\r\n        return prevVal;\r\n    }, []);\r\n}\r\n\r\n/**\r\n * @function: createCommonRights\r\n * @author: DEVIT\r\n * @description: this method used to create a permission array for user module\r\n * @params: fnParams: array\r\n */\r\nexport const createCommonRights = (...fnParams) => {\r\n    const selectedRoleIds = fnParams[0];\r\n    const userRights = fnParams[1];\r\n    const getSelectedKeys = selectedRoleIds.map(item => Number(item.value));\r\n    const getSelectedRightsArray = getSelectedRights(userRights, getSelectedKeys);\r\n\r\n    if (getSelectedRightsArray.length > 0) {\r\n        return createPermissionObject(getSelectedRightsArray);\r\n\r\n    } else {\r\n        return [];\r\n    }\r\n}\r\n\r\n/**\r\n * @function: checkNewCheckBox\r\n * @author: DEVIT\r\n * @description: this method used to check/uncheck checkbox for right module\r\n * @params: fnParams: array\r\n */\r\nexport const checkNewCheckBox = (checked, permission, module_slug, key) => {\r\n    if (checked) {\r\n        if (!permission) {\r\n            permission = {};\r\n        }\r\n        if (!permission[module_slug]) {\r\n            permission[module_slug] = [];\r\n        }\r\n        permission[module_slug].push(key);\r\n    } else {\r\n        if (permission[module_slug] && permission[module_slug].indexOf(key) !== -1) {\r\n            permission[module_slug].splice(permission[module_slug].indexOf(key), 1)\r\n        }\r\n\r\n        if (permission[module_slug] && permission[module_slug].length == 0) {\r\n            delete permission[module_slug];\r\n        }\r\n\r\n    }\r\n\r\n    return permission;\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}