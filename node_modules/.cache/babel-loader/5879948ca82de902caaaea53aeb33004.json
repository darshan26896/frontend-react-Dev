{"ast":null,"code":"import _slicedToArray from \"/home/shivanee/Downloads/ETM-project/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/shivanee/Downloads/ETM-project/react/src/_metronic/_partials/widgets/stats/StatsWidget11.js\";\n/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\nimport React, { useMemo, useEffect, useState } from \"react\";\nimport objectPath from \"object-path\";\nimport ApexCharts from \"apexcharts\";\nimport SVG from \"react-inlinesvg\";\nimport { toAbsoluteUrl } from \"../../../_helpers\";\nimport { useHtmlClassService } from \"../../../layout\";\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport { getDashboardGraph } from \"../../../../app/modules/Dashboard/redux/function\";\n//import {SelectGroup} from \"react-bootstrap4-form-validation\";\n\nexport function StatsWidget11(_ref) {\n  var className = _ref.className,\n    symbolShape = _ref.symbolShape,\n    baseColor = _ref.baseColor;\n  var user = JSON.parse(localStorage.getItem(\"user\"));\n  var _useState = useState({}),\n    _useState2 = _slicedToArray(_useState, 2),\n    EmployeeGraphDashboardData = _useState2[0],\n    setEmployeeGraphDashboardData = _useState2[1];\n  useEffect(function () {\n    getDashboardGraph(user).then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      // console.log(responseJson);\n      // console.log(Array.isArray(responseJson.items.x_axes) ? responseJson.items.x_axes.map(x => x) : [], \"dddd\")\n      // setEmployeeGraphDashboardData(Array.isArray(responseJson.items.y_axes) ? responseJson.items.y_axes.map(x => x) : []);\n      setEmployeeGraphDashboardData(responseJson.items);\n\n      // props.MangerDashboardData(responseJson.items);\n    });\n  }, []);\n  console.log(EmployeeGraphDashboardData);\n  var options = {\n    title: {\n      text: 'Monthly Completed Videos Counts'\n    },\n    xAxis: {\n      categories: EmployeeGraphDashboardData.x\n    },\n    yAxis: [{\n      allowDecimals: false,\n      title: {\n        text: 'Hours'\n      }\n    }],\n    credits: {\n      enabled: false\n    },\n    series: [{\n      type: 'column',\n      data: EmployeeGraphDashboardData.y,\n      name: 'Videos Completed'\n    }]\n  };\n\n  // const options = {\n  //   title: {\n  //     text: 'Trainings Chart'\n  //   },\n  //   labels: {\n  //     enabled: false\n  // },\n  //   // The types are 'linear', 'logarithmic' and 'datetime'\n  //   yAxis: {\n  //     type: 'linear',\n  //   },\n  //   // Categories are set by using an array\n  //   xAxis: {\n  //     // categories: ['Apples', 'Bananas', 'Oranges', 'Grapes']\n  //     categories: EmployeeGraphDashboardData.y_axes,\n  //     labels: {\n  //       autoRotation: [-10, -20, -30, -40, -50, -60, -70, -80, -90]\n  //   }\n\n  //   },\n  //   credits: {\n  //     enabled: false\n  // },\n  //   series: [{\n  //     type: 'bar',\n  //     name: 'Trainings',\n  //     // data: [''],\n  //     data: EmployeeGraphDashboardData.x_axes\n  //     // data: [1, 2, 3]\n  //   }]\n  // }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card card-custom \".concat(className),\n    style: {\n      height: \"600px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body p-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center justify-content-between card-spacer flex-grow-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"symbol \".concat(symbolShape, \" symbol-50 symbol-light-\").concat(baseColor, \" mr-2\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"kt_stats_widget_11_chart\",\n    className: \"card-rounded-bottom\",\n    style: {\n      height: \"350px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(HighchartsReact, {\n    highcharts: Highcharts,\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"names":["React","useMemo","useEffect","useState","objectPath","ApexCharts","SVG","toAbsoluteUrl","useHtmlClassService","Highcharts","HighchartsReact","getDashboardGraph","StatsWidget11","_ref","className","symbolShape","baseColor","user","JSON","parse","localStorage","getItem","_useState","_useState2","_slicedToArray","EmployeeGraphDashboardData","setEmployeeGraphDashboardData","then","response","json","responseJson","items","console","log","options","title","text","xAxis","categories","x","yAxis","allowDecimals","credits","enabled","series","type","data","y","name","createElement","concat","style","height","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","id","highcharts"],"sources":["/home/shivanee/Downloads/ETM-project/react/src/_metronic/_partials/widgets/stats/StatsWidget11.js"],"sourcesContent":["/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\r\nimport React, { useMemo, useEffect, useState } from \"react\";\r\nimport objectPath from \"object-path\";\r\nimport ApexCharts from \"apexcharts\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport { toAbsoluteUrl } from \"../../../_helpers\";\r\nimport { useHtmlClassService } from \"../../../layout\";\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\n\r\nimport { getDashboardGraph } from \"../../../../app/modules/Dashboard/redux/function\";\r\n//import {SelectGroup} from \"react-bootstrap4-form-validation\";\r\n\r\nexport function StatsWidget11({ className, symbolShape, baseColor }) {\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  const [EmployeeGraphDashboardData, setEmployeeGraphDashboardData] = useState({});\r\n  useEffect(() => {\r\n    getDashboardGraph(user)\r\n      .then((response) => response.json()).then((responseJson) => {\r\n        // console.log(responseJson);\r\n        // console.log(Array.isArray(responseJson.items.x_axes) ? responseJson.items.x_axes.map(x => x) : [], \"dddd\")\r\n        // setEmployeeGraphDashboardData(Array.isArray(responseJson.items.y_axes) ? responseJson.items.y_axes.map(x => x) : []);\r\n        setEmployeeGraphDashboardData(responseJson.items);\r\n\r\n        // props.MangerDashboardData(responseJson.items);\r\n\r\n      })\r\n  }, []);\r\n  console.log(EmployeeGraphDashboardData)\r\n  const options = {\r\n    title: {\r\n      text: 'Monthly Completed Videos Counts'\r\n    },\r\n\r\n    xAxis: {\r\n      categories: EmployeeGraphDashboardData.x\r\n    },\r\n    yAxis: [{\r\n      allowDecimals: false,\r\n      title: {\r\n        text: 'Hours'\r\n      }\r\n    }],\r\n\r\n    credits: {\r\n      enabled: false\r\n    },\r\n\r\n    series: [{\r\n      type: 'column',\r\n      data: EmployeeGraphDashboardData.y,\r\n      name: 'Videos Completed'\r\n    }]\r\n  }\r\n\r\n  // const options = {\r\n  //   title: {\r\n  //     text: 'Trainings Chart'\r\n  //   },\r\n  //   labels: {\r\n  //     enabled: false\r\n  // },\r\n  //   // The types are 'linear', 'logarithmic' and 'datetime'\r\n  //   yAxis: {\r\n  //     type: 'linear',\r\n  //   },\r\n  //   // Categories are set by using an array\r\n  //   xAxis: {\r\n  //     // categories: ['Apples', 'Bananas', 'Oranges', 'Grapes']\r\n  //     categories: EmployeeGraphDashboardData.y_axes,\r\n  //     labels: {\r\n  //       autoRotation: [-10, -20, -30, -40, -50, -60, -70, -80, -90]\r\n  //   }\r\n\r\n  //   },\r\n  //   credits: {\r\n  //     enabled: false\r\n  // },\r\n  //   series: [{\r\n  //     type: 'bar',\r\n  //     name: 'Trainings',\r\n  //     // data: [''],\r\n  //     data: EmployeeGraphDashboardData.x_axes\r\n  //     // data: [1, 2, 3]\r\n  //   }]\r\n  // }\r\n  return (\r\n    <div className={`card card-custom ${className}`} style={{ height: \"600px\" }}>\r\n      <div className=\"card-body p-0\">\r\n        <div className=\"d-flex align-items-center justify-content-between card-spacer flex-grow-1\">\r\n          <span\r\n            className={`symbol ${symbolShape} symbol-50 symbol-light-${baseColor} mr-2`}\r\n          >\r\n            {/* <span className=\"symbol-label\">\r\n              <span className={`svg-icon svg-icon-xl svg-icon-${baseColor}`}>\r\n                <SVG\r\n                  src={toAbsoluteUrl(\r\n                    \"/media/svg/icons/Layout/Layout-4-blocks.svg\"\r\n                  )}\r\n                ></SVG>\r\n              </span>\r\n            </span> */}\r\n          </span>\r\n          {/* <div className=\"d-flex flex-column text-right\">\r\n            <span className=\"text-dark-75 font-weight-bolder font-size-h3\">\r\n              750$\r\n            </span>\r\n            <span className=\"text-muted font-weight-bold mt-2\">\r\n              Weekly Income\r\n            </span>\r\n          </div> */}\r\n        </div>\r\n        <div\r\n          id=\"kt_stats_widget_11_chart\"\r\n          className=\"card-rounded-bottom\"\r\n          style={{ height: \"350px\" }}\r\n        >\r\n          <HighchartsReact\r\n            highcharts={Highcharts}\r\n            options={options}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}