{"ast":null,"code":"import _regeneratorRuntime from \"/home/shivanee/Downloads/ETM-project/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/home/shivanee/Downloads/ETM-project/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"/home/shivanee/Downloads/ETM-project/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nexport var SHOW_TRAINING_URL = \"\".concat(process.env.REACT_APP_API_URL, \"dashbaord/getTraningName\");\nexport var ADD_PROGRESS_URL = \"\".concat(process.env.REACT_APP_API_URL, \"progress/addprogress\");\nexport var VIEW_TRAININGS_URL = \"\".concat(process.env.REACT_APP_API_URL, \"progress/viewprogress\");\nexport function showTrainings(_x) {\n  return _showTrainings.apply(this, arguments);\n}\nfunction _showTrainings() {\n  _showTrainings = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(eId) {\n    var user, response, data, transformedTraining, key, trainingObj;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            user = JSON.parse(localStorage.getItem(\"user\")); // const response = await fetch(SHOW_TRAINING_URL +\"/\" + eId);\n            // const accessToken  = user.accessToken;\n            _context.next = 3;\n            return fetch(SHOW_TRAINING_URL + \"/\" + eId, {\n              method: \"GET\",\n              headers: {\n                \"Content-type\": \"application/json\",\n                \"Authorization\": user.accessToken\n              }\n            });\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return response.json();\n          case 6:\n            data = _context.sent;\n            if (response.ok) {\n              _context.next = 9;\n              break;\n            }\n            throw new Error(data.message || 'Could not fetch training.');\n          case 9:\n            transformedTraining = [];\n            _context.t0 = _regeneratorRuntime.keys(data);\n          case 11:\n            if ((_context.t1 = _context.t0()).done) {\n              _context.next = 18;\n              break;\n            }\n            key = _context.t1.value;\n            trainingObj = _objectSpread({\n              id: key\n            }, data[key]);\n            transformedTraining.push(trainingObj);\n            return _context.abrupt(\"return\", transformedTraining);\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _showTrainings.apply(this, arguments);\n}\n;\nexport function addTrainings(_x2) {\n  return _addTrainings.apply(this, arguments);\n}\nfunction _addTrainings() {\n  _addTrainings = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(edata) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            console.log(edata, \"value\");\n            _context2.next = 3;\n            return fetch(ADD_PROGRESS_URL, {\n              method: \"POST\",\n              headers: {\n                \"Content-type\": \"application/json\",\n                \"Authorization\": edata.userToken.accessToken\n              },\n              body: JSON.stringify({\n                \"training_id\": edata.progressId,\n                \"emp_id\": edata.userToken.user._id,\n                \"week\": edata.progressData.week,\n                \"completed_videos\": edata.progressData.completedVideo\n              })\n            });\n          case 3:\n            response = _context2.sent;\n            return _context2.abrupt(\"return\", response);\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _addTrainings.apply(this, arguments);\n}\n;\nexport function viewProgress(_x3) {\n  return _viewProgress.apply(this, arguments);\n}\nfunction _viewProgress() {\n  _viewProgress = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(trainingid) {\n    var user;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            user = JSON.parse(localStorage.getItem(\"user\"));\n            console.log(trainingid, user, \"8888\");\n\n            //  const response = await fetch(VIEW_TRAININGS_URL, {\n            //    method: \"POST\",\n            //    headers: {\n            //      \"Content-type\": \"application/json\",\n            //      \"Authorization\": edata.userToken.accessToken,\n            //    },\n            //    body: JSON.stringify({\n            //      \"training_id\": \"6257f818c25bc13228d1e2aa\",\n            //      \"emp_id\": edata.userToken.user._id\n\n            //    })\n            //  });\n\n            //  return response;\n          case 2:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _viewProgress.apply(this, arguments);\n}\n;","map":{"version":3,"names":["SHOW_TRAINING_URL","concat","process","env","REACT_APP_API_URL","ADD_PROGRESS_URL","VIEW_TRAININGS_URL","showTrainings","_x","_showTrainings","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","eId","user","response","data","transformedTraining","key","trainingObj","wrap","_callee$","_context","prev","next","JSON","parse","localStorage","getItem","fetch","method","headers","accessToken","sent","json","ok","Error","message","t0","keys","t1","done","value","_objectSpread","id","push","abrupt","stop","addTrainings","_x2","_addTrainings","_callee2","edata","_callee2$","_context2","console","log","userToken","body","stringify","progressId","_id","progressData","week","completedVideo","viewProgress","_x3","_viewProgress","_callee3","trainingid","_callee3$","_context3"],"sources":["/home/shivanee/Downloads/ETM-project/react/src/app/modules/Employee/api/api.js"],"sourcesContent":["export const SHOW_TRAINING_URL = `${process.env.REACT_APP_API_URL}dashbaord/getTraningName`;\r\nexport const ADD_PROGRESS_URL = `${process.env.REACT_APP_API_URL}progress/addprogress`;\r\nexport const VIEW_TRAININGS_URL = `${process.env.REACT_APP_API_URL}progress/viewprogress`;\r\nexport async function showTrainings(eId) {\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n  // const response = await fetch(SHOW_TRAINING_URL +\"/\" + eId);\r\n  // const accessToken  = user.accessToken;\r\n  const response = await fetch(SHOW_TRAINING_URL + \"/\" + eId, {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n      \"Authorization\": user.accessToken,\r\n    },\r\n  });\r\n\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || 'Could not fetch training.');\r\n  }\r\n\r\n  const transformedTraining = [];\r\n  for (const key in data) {\r\n    const trainingObj = {\r\n      id: key,\r\n      ...data[key],\r\n    };\r\n    transformedTraining.push(trainingObj);\r\n    return transformedTraining;\r\n  }\r\n};\r\n\r\nexport async function addTrainings(edata) {\r\n\r\n  console.log(edata, \"value\");\r\n\r\n\r\n\r\n  const response = await fetch(ADD_PROGRESS_URL, {\r\n\r\n    method: \"POST\",\r\n\r\n    headers: {\r\n\r\n      \"Content-type\": \"application/json\",\r\n\r\n      \"Authorization\": edata.userToken.accessToken,\r\n\r\n    },\r\n\r\n    body: JSON.stringify({\r\n\r\n      \"training_id\": edata.progressId,\r\n\r\n      \"emp_id\": edata.userToken.user._id,\r\n\r\n      \"week\": edata.progressData.week,\r\n\r\n      \"completed_videos\": edata.progressData.completedVideo\r\n\r\n\r\n\r\n    })\r\n\r\n  });\r\n\r\n\r\n\r\n  return response;\r\n\r\n};\r\n\r\nexport async function viewProgress(trainingid) {\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  console.log(trainingid, user, \"8888\");\r\n\r\n  //  const response = await fetch(VIEW_TRAININGS_URL, {\r\n  //    method: \"POST\",\r\n  //    headers: {\r\n  //      \"Content-type\": \"application/json\",\r\n  //      \"Authorization\": edata.userToken.accessToken,\r\n  //    },\r\n  //    body: JSON.stringify({\r\n  //      \"training_id\": \"6257f818c25bc13228d1e2aa\",\r\n  //      \"emp_id\": edata.userToken.user._id\r\n\r\n  //    })\r\n  //  });\r\n\r\n  //  return response;\r\n};\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}