{"version":3,"sources":["app/modules/ECommerce/pages/customers/customers-loading-dialog/CustomersLoadingDialog.js","app/modules/ECommerce/_redux/customers/customersActions.js","app/modules/ECommerce/_redux/customers/customersCrud.js","app/modules/ECommerce/pages/customers/customer-edit-dialog/CustomerEditDialogHeader.js","app/modules/ECommerce/pages/customers/customer-edit-dialog/CustomerEditForm.js","app/modules/ECommerce/pages/customers/CustomersUIHelpers.js","app/modules/ECommerce/pages/customers/CustomersUIContext.js","app/modules/ECommerce/pages/customers/customer-edit-dialog/CustomerEditDialog.js","app/modules/ECommerce/pages/customers/customer-delete-dialog/CustomerDeleteDialog.js","app/modules/ECommerce/pages/customers/customers-delete-dialog/CustomersDeleteDialog.js","app/modules/ECommerce/pages/customers/customers-fetch-dialog/CustomersFetchDialog.js","app/modules/ECommerce/pages/customers/customers-update-status-dialog/CustomersUpdateStateDialog.js","app/modules/ECommerce/pages/customers/customers-filter/CustomersFilter.js","app/modules/ECommerce/pages/customers/customers-table/column-formatters/StatusColumnFormatter.js","app/modules/ECommerce/pages/customers/customers-table/column-formatters/TypeColumnFormatter.js","app/modules/ECommerce/pages/customers/customers-table/column-formatters/ActionsColumnFormatter.js","app/modules/ECommerce/pages/customers/customers-table/CustomersTable.js","app/modules/ECommerce/pages/customers/customers-grouping/CustomersGrouping.js","app/modules/ECommerce/pages/customers/CustomersCard.js","app/modules/ECommerce/pages/customers/CustomersPage.js","app/modules/ECommerce/pages/products/products-loading-dialog/ProductsLoadingDialog.js","app/modules/ECommerce/_redux/products/productsActions.js","app/modules/ECommerce/_redux/products/productsCrud.js","app/modules/ECommerce/pages/products/ProductsUIHelpers.js","app/modules/ECommerce/pages/products/ProductsUIContext.js","app/modules/ECommerce/pages/products/product-delete-dialog/ProductDeleteDialog.js","app/modules/ECommerce/pages/products/products-delete-dialog/ProductsDeleteDialog.js","app/modules/ECommerce/pages/products/products-fetch-dialog/ProductsFetchDialog.js","app/modules/ECommerce/pages/products/products-update-status-dialog/ProductsUpdateStatusDialog.js","app/modules/ECommerce/pages/products/products-filter/ProductsFilter.js","app/modules/ECommerce/pages/products/products-table/column-formatters/StatusColumnFormatter.js","app/modules/ECommerce/pages/products/products-table/column-formatters/ConditionColumnFormatter.js","app/modules/ECommerce/pages/products/products-table/column-formatters/ColorColumnFormatter.js","app/modules/ECommerce/pages/products/products-table/column-formatters/PriceColumnFormatter.js","app/modules/ECommerce/pages/products/products-table/column-formatters/ActionsColumnFormatter.js","app/modules/ECommerce/pages/products/products-table/ProductsTable.js","app/modules/ECommerce/pages/products/products-grouping/ProductsGrouping.js","app/modules/ECommerce/pages/products/ProductsCard.js","app/modules/ECommerce/pages/products/ProductsPage.js","app/modules/ECommerce/pages/products/product-edit/ProductEditForm.js","app/modules/ECommerce/pages/products/product-specifications/SpecificationsUIHelper.js","app/modules/ECommerce/pages/products/product-specifications/SpecificationsUIContext.js","app/modules/ECommerce/pages/products/product-specifications/SpecificationsFilter.js","app/modules/ECommerce/_redux/specifications/specificationsActions.js","app/modules/ECommerce/_redux/specifications/specificationsCrud.js","app/modules/ECommerce/pages/products/product-specifications/column-formatters/ActionsColumnFormatter.js","app/modules/ECommerce/pages/products/product-specifications/SpecificationsTable.js","app/modules/ECommerce/pages/products/product-specifications/SpecificationsLoadingDialog.js","app/modules/ECommerce/pages/products/product-specifications/SpecificationsDeleteDialog.js","app/modules/ECommerce/pages/products/product-specifications/SpecificationDeleteDialog.js","app/modules/ECommerce/pages/products/product-specifications/SpecificationsFetchDialog.js","app/modules/ECommerce/pages/products/product-specifications/SpecificationsGrouping.js","app/modules/ECommerce/pages/products/product-specifications/specification-edit-dialog/SpecificationEditDialogHeader.js","app/modules/ECommerce/pages/products/product-specifications/specification-edit-dialog/SpecificationEditForm.js","app/modules/ECommerce/pages/products/product-specifications/specification-edit-dialog/SpecificationEditDialog.js","app/modules/ECommerce/pages/products/product-specifications/Specifications.js","app/modules/ECommerce/pages/products/product-remarks/RemarksUIHelper.js","app/modules/ECommerce/pages/products/product-remarks/RemarksUIContext.js","app/modules/ECommerce/pages/products/product-remarks/RemarksFilter.js","app/modules/ECommerce/_redux/remarks/remarksActions.js","app/modules/ECommerce/_redux/remarks/remarksCrud.js","app/modules/ECommerce/pages/products/product-remarks/column-formatters/ActionsColumnFormatter.js","app/modules/ECommerce/pages/products/product-remarks/RemarksTable.js","app/modules/ECommerce/pages/products/product-remarks/RemarksLoadingDialog.js","app/modules/ECommerce/pages/products/product-remarks/RemarksDeleteDialog.js","app/modules/ECommerce/pages/products/product-remarks/RemarkDeleteDialog.js","app/modules/ECommerce/pages/products/product-remarks/RemarksFetchDialog.js","app/modules/ECommerce/pages/products/product-remarks/RemarksGrouping.js","app/modules/ECommerce/pages/products/product-remarks/remark-edit-dialog/RemarkEditDialogHeader.js","app/modules/ECommerce/pages/products/product-remarks/remark-edit-dialog/RemarkEditForm.js","app/modules/ECommerce/pages/products/product-remarks/remark-edit-dialog/RemarkEditDialog.js","app/modules/ECommerce/pages/products/product-remarks/Remarks.js","app/modules/ECommerce/pages/products/product-edit/ProductEdit.js","app/modules/ECommerce/pages/eCommercePage.js"],"names":["CustomersLoadingDialog","isLoading","useSelector","state","customers","listLoading","shallowEqual","useEffect","React","createElement","LoadingDialog","text","actions","customersSlice","fetchCustomers","queryParams","dispatch","startCall","callType","callTypes","list","axios","post","concat","requestFromServer","then","response","_response$data","data","totalCount","entities","customersFetched","catch","error","clientMessage","catchError","fetchCustomer","id","action","customerId","get","customer","customerFetched","customerForEdit","undefined","deleteCustomer","delete","customerDeleted","createCustomer","customerForCreation","customerCreated","updateCustomer","put","customerUpdated","updateCustomersStatus","ids","status","customersStatusUpdated","deleteCustomers","customersDeleted","CustomerEditDialogHeader","_ref","_useSelector","actionsLoading","_useState","useState","_useState2","_slicedToArray","title","setTitle","_title","firstName","lastName","Fragment","ModalProgressBar","Modal","Header","closeButton","Title","CustomerEditSchema","Yup","shape","min","max","required","email","userName","dateOfBbirth","nullable","ipAddress","CustomerEditForm","saveCustomer","onHide","Formik","enableReinitialize","initialValues","validationSchema","onSubmit","values","_ref2","handleSubmit","Body","className","Form","Field","name","component","Input","placeholder","label","type","DatePickerField","customFeedbackLabel","Select","value","Footer","onClick","CustomerStatusCssClasses","CustomerStatusTitles","CustomerTypeCssClasses","CustomerTypeTitles","defaultSorted","dataField","order","sizePerPageList","initialFilter","filter","sortOrder","sortField","pageNumber","pageSize","CustomersUIContext","createContext","useCustomersUIContext","useContext","Consumer","CustomersUIProvider","customersUIEvents","children","setQueryParamsBase","_useState3","_useState4","setIds","setQueryParams","useCallback","nextQueryParams","prevQueryParams","isFunction","isEqual","initCustomer","gender","newCustomerButtonClick","openEditCustomerDialog","openDeleteCustomerDialog","openDeleteCustomersDialog","openFetchCustomersDialog","openUpdateCustomersStatusDialog","Provider","CustomerEditDialog","show","customersUIContext","customersUIProps","useMemo","useDispatch","size","aria-labelledby","CustomerDeleteDialog","CustomersDeleteDialog","length","selectedCustomers","_customers","forEach","find","el","push","CustomersFetchDialog","map","key","CustomersUpdateStateDialog","setStatus","onChange","e","target","CustomersFilter","applyFilter","newQueryParams","searchText","_objectSpread","prepareFilter","handleBlur","setFieldValue","handleChange","onBlur","StatusColumnFormatter","cellContent","row","TypeColumnFormatter","ActionsColumnFormatter","rowIndex","SVG","src","toAbsoluteUrl","CustomersTable","currentState","columns","sort","sortCaret","headerSortingClasses","formatter","columnFormatters","formatExtraData","classes","headerClasses","style","minWidth","paginationOptions","custom","totalSize","uiHelpers","sizePerPage","page","PaginationProvider","pagination","paginationFactory","paginationProps","paginationTableProps","Pagination","BootstrapTable","Object","assign","wrapperClasses","bordered","bootstrap4","remote","keyField","onTableChange","getHandlerTableChange","selectRow","getSelectRow","PleaseWaitMessage","NoRecordsFoundMessage","CustomersGrouping","CustomersCard","Card","CardHeader","CardHeaderToolbar","CardBody","CustomersPage","history","Route","path","match","_ref3","params","_ref4","_ref5","_ref6","_ref7","ProductsLoadingDialog","products","productsSlice","fetchProducts","productsFetched","fetchProduct","productId","product","productFetched","productForEdit","deleteProduct","productDeleted","createProduct","productForCreation","productCreated","updateProduct","productUpdated","updateProductsStatus","productsStatusUpdated","deleteProducts","productsDeleted","ProductStatusCssClasses","ProductStatusTitles","ProductConditionCssClasses","ProductConditionTitles","model","manufacture","VINCode","AVAILABLE_COLORS","AVAILABLE_MANUFACTURES","ProductsUIContext","useProductsUIContext","ProductsUIProvider","productsUIEvents","newProductButtonClick","openEditProductPage","openDeleteProductDialog","openDeleteProductsDialog","openFetchProductsDialog","openUpdateProductsStatusDialog","ProductDeleteDialog","productsUIContext","productsUIProps","variant","ProductsDeleteDialog","selectedProducts","_products","ProductsFetchDialog","width","ProductsUpdateStatusDialog","ProductsFilter","condition","ConditionColumnFormatter","ColorColumnFormatter","color","PriceColumnFormatter","price","OverlayTrigger","overlay","Tooltip","ProductsTable","ProductsGrouping","ProductsCard","ProductsPage","ProductEditSchema","modelYear","mileage","ProductEditForm","btnRef","saveProduct","index","as","display","ref","SPECIFICATIONS_DICTIONARY","SpecificationsUIContext","useSpecificationsUIContext","SpecificationsUIProvider","currentProductId","setProductId","_useState5","_useState6","_useState7","_useState8","selectedId","setSelectedId","initSpecification","specId","carId","_useState9","_useState10","showEditSpecificationDialog","setShowEditSpecificationDialog","_useState11","_useState12","showDeleteSpecificationDialog","setShowDeleteSpecificationDialog","_useState13","_useState14","showDeleteSpecificationsDialog","setShowDeleteSpecificationsDialog","_useState15","_useState16","showFetchSpecificationsDialog","setShowFetchSpecificationsDialog","openEditSpecificationDialog","openNewSpecificationDialog","closeEditSpecificationDialog","openDeleteSpecificationDialog","closeDeleteSpecificationDialog","openDeleteSpecificationsDialog","closeDeleteSpecificationsDialog","openFetchSpecificationsDialog","closeFetchSpecificationsDialog","SpecificationsFilter","specsUIContext","specsUIProps","specificationsSlice","fetchSpecifications","specificationsFetched","fetchSpecification","specificationId","specification","specificationFetched","specificationForEdit","deleteSpecification","specificationDeleted","createSpecification","specificationForCreation","specificationCreated","updateSpecification","specificationUpdated","deleteSpecifications","specificationsDeleted","SpecificationsTable","specifications","SpecificationsLoadingDialog","SpecificationsDeleteDialog","SpecificationDeleteDialog","selectedSpecifications","_specifications","SpecificationsFetchDialog","SpecificationsGrouping","SpecificationEditDialogHeader","SpecificationEditSchema","SpecificationEditForm","saveSpecification","spec","SpecificationEditDialog","Specifications","RemarksUIContext","useRemarksUIContext","RemarksUIProvider","showEditRemarkDialog","setShowEditRemarkDialog","initRemark","dueDate","showDeleteRemarkDialog","setShowDeleteRemarkDialog","showDeleteRemarksDialog","setShowDeleteRemarksDialog","showFetchRemarksDialog","setShowFetchRemarksDialog","openNewRemarkDialog","openEditRemarkDialog","closeEditRemarkDialog","openDeleteRemarkDialog","closeDeleteRemarkDialog","openDeleteRemarksDialog","closeDeleteRemarksDialog","openFetchRemarksDialog","closeFetchRemarksDialog","RemarksFilter","remarksUIContext","remarksUIProps","remarksSlice","fetchRemarks","remarksFetched","fetchRemark","remarkId","remark","remarkFetched","remarkForEdit","deleteRemark","remarkDeleted","createRemark","remarkForCreation","remarkCreated","updateRemark","remarkUpdated","deleteRemarks","console","log","remarksDeleted","RemarksTable","remarks","RemarksLoadingDialog","RemarksDeleteDialog","RemarkDeleteDialog","selectedRemarks","_remarks","RemarksFetchDialog","RemarksGrouping","RemarkEditDialogHeader","RemarkEditSchema","RemarkEditForm","saveRemark","RemarkEditDialog","date","year","getFullYear","month","getMonth","toString","day","getDate","getFormattedDate","Remarks","initProduct","description","ProductEdit","suhbeader","useSubheader","tab","setTab","useRef","backToProductsList","current","click","role","data-toggle","aria-selected","eCommercePage","Suspense","fallback","LayoutSplashScreen","Switch","Redirect","exact","from","to","ContentRoute"],"mappings":"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","file":"static/js/7.26d1a033.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport { LoadingDialog } from \"../../../../../../_metronic/_partials/controls\";\r\n\r\nexport function CustomersLoadingDialog() {\r\n  // Customers Redux state\r\n  const { isLoading } = useSelector(\r\n    (state) => ({ isLoading: state.customers.listLoading }),\r\n    shallowEqual\r\n  );\r\n  // looking for loading/dispatch\r\n  useEffect(() => {}, [isLoading]);\r\n  return <LoadingDialog isLoading={isLoading} text=\"Loading ...\" />;\r\n}\r\n","import * as requestFromServer from \"./customersCrud\";\r\nimport {customersSlice, callTypes} from \"./customersSlice\";\r\n\r\nconst {actions} = customersSlice;\r\n\r\nexport const fetchCustomers = queryParams => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.list }));\r\n  return requestFromServer\r\n    .findCustomers(queryParams)\r\n    .then(response => {\r\n      const { totalCount, entities } = response.data;\r\n      dispatch(actions.customersFetched({ totalCount, entities }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find customers\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.list }));\r\n    });\r\n};\r\n\r\nexport const fetchCustomer = id => dispatch => {\r\n  if (!id) {\r\n    return dispatch(actions.customerFetched({ customerForEdit: undefined }));\r\n  }\r\n\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .getCustomerById(id)\r\n    .then(response => {\r\n      const customer = response.data;\r\n      dispatch(actions.customerFetched({ customerForEdit: customer }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find customer\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteCustomer = id => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteCustomer(id)\r\n    .then(response => {\r\n      dispatch(actions.customerDeleted({ id }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete customer\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const createCustomer = customerForCreation => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .createCustomer(customerForCreation)\r\n    .then(response => {\r\n      const { customer } = response.data;\r\n      dispatch(actions.customerCreated({ customer }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't create customer\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const updateCustomer = customer => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .updateCustomer(customer)\r\n    .then(() => {\r\n      dispatch(actions.customerUpdated({ customer }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't update customer\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const updateCustomersStatus = (ids, status) => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .updateStatusForCustomers(ids, status)\r\n    .then(() => {\r\n      dispatch(actions.customersStatusUpdated({ ids, status }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't update customers status\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteCustomers = ids => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteCustomers(ids)\r\n    .then(() => {\r\n      dispatch(actions.customersDeleted({ ids }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete customers\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const CUSTOMERS_URL = \"api/customers\";\r\n\r\n// CREATE =>  POST: add a new customer to the server\r\nexport function createCustomer(customer) {\r\n  return axios.post(CUSTOMERS_URL, { customer });\r\n}\r\n\r\n// READ\r\nexport function getAllCustomers() {\r\n  return axios.get(CUSTOMERS_URL);\r\n}\r\n\r\nexport function getCustomerById(customerId) {\r\n  return axios.get(`${CUSTOMERS_URL}/${customerId}`);\r\n}\r\n\r\n// Method from server should return QueryResultsModel(items: any[], totalsCount: number)\r\n// items => filtered/sorted result\r\nexport function findCustomers(queryParams) {\r\n  return axios.post(`${CUSTOMERS_URL}/find`, { queryParams });\r\n}\r\n\r\n// UPDATE => PUT: update the customer on the server\r\nexport function updateCustomer(customer) {\r\n  return axios.put(`${CUSTOMERS_URL}/${customer.id}`, { customer });\r\n}\r\n\r\n// UPDATE Status\r\nexport function updateStatusForCustomers(ids, status) {\r\n  return axios.post(`${CUSTOMERS_URL}/updateStatusForCustomers`, {\r\n    ids,\r\n    status\r\n  });\r\n}\r\n\r\n// DELETE => delete the customer from the server\r\nexport function deleteCustomer(customerId) {\r\n  return axios.delete(`${CUSTOMERS_URL}/${customerId}`);\r\n}\r\n\r\n// DELETE Customers by ids\r\nexport function deleteCustomers(ids) {\r\n  return axios.post(`${CUSTOMERS_URL}/deleteCustomers`, { ids });\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport {ModalProgressBar} from \"../../../../../../_metronic/_partials/controls\";\r\n\r\nexport function CustomerEditDialogHeader({ id }) {\r\n  // Customers Redux state\r\n  const { customerForEdit, actionsLoading } = useSelector(\r\n    (state) => ({\r\n      customerForEdit: state.customers.customerForEdit,\r\n      actionsLoading: state.customers.actionsLoading,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  const [title, setTitle] = useState(\"\");\r\n  // Title couting\r\n  useEffect(() => {\r\n    let _title = id ? \"\" : \"New Customer\";\r\n    if (customerForEdit && id) {\r\n      _title = `Edit customer '${customerForEdit.firstName} ${customerForEdit.lastName}'`;\r\n    }\r\n\r\n    setTitle(_title);\r\n    // eslint-disable-next-line\r\n  }, [customerForEdit, actionsLoading]);\r\n\r\n  return (\r\n    <>\r\n      {actionsLoading && <ModalProgressBar />}\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">{title}</Modal.Title>\r\n      </Modal.Header>\r\n    </>\r\n  );\r\n}\r\n","// Form is based on Formik\r\n// Data validation is based on Yup\r\n// Please, be familiar with article first:\r\n// https://hackernoon.com/react-form-validation-with-formik-and-yup-8b76bda62e10\r\nimport React from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n  Input,\r\n  Select,\r\n  DatePickerField,\r\n} from \"../../../../../../_metronic/_partials/controls\";\r\n\r\n// Validation schema\r\nconst CustomerEditSchema = Yup.object().shape({\r\n  firstName: Yup.string()\r\n    .min(3, \"Minimum 3 symbols\")\r\n    .max(50, \"Maximum 50 symbols\")\r\n    .required(\"Firstname is required\"),\r\n  lastName: Yup.string()\r\n    .min(3, \"Minimum 3 symbols\")\r\n    .max(50, \"Maximum 50 symbols\")\r\n    .required(\"Lastname is required\"),\r\n  email: Yup.string()\r\n    .email(\"Invalid email\")\r\n    .required(\"Email is required\"),\r\n  userName: Yup.string().required(\"Username is required\"),\r\n  dateOfBbirth: Yup.mixed()\r\n    .nullable(false)\r\n    .required(\"Date of Birth is required\"),\r\n  ipAddress: Yup.string().required(\"IP Address is required\"),\r\n});\r\n\r\nexport function CustomerEditForm({\r\n  saveCustomer,\r\n  customer,\r\n  actionsLoading,\r\n  onHide,\r\n}) {\r\n  return (\r\n    <>\r\n      <Formik\r\n        enableReinitialize={true}\r\n        initialValues={customer}\r\n        validationSchema={CustomerEditSchema}\r\n        onSubmit={(values) => {\r\n          saveCustomer(values);\r\n        }}\r\n      >\r\n        {({ handleSubmit }) => (\r\n          <>\r\n            <Modal.Body className=\"overlay overlay-block cursor-default\">\r\n              {actionsLoading && (\r\n                <div className=\"overlay-layer bg-transparent\">\r\n                  <div className=\"spinner spinner-lg spinner-success\" />\r\n                </div>\r\n              )}\r\n              <Form className=\"form form-label-right\">\r\n                <div className=\"form-group row\">\r\n                  {/* First Name */}\r\n                  <div className=\"col-lg-4\">\r\n                    <Field\r\n                      name=\"firstName\"\r\n                      component={Input}\r\n                      placeholder=\"First Name\"\r\n                      label=\"First Name\"\r\n                    />\r\n                  </div>\r\n                  {/* Last Name */}\r\n                  <div className=\"col-lg-4\">\r\n                    <Field\r\n                      name=\"lastName\"\r\n                      component={Input}\r\n                      placeholder=\"Last Name\"\r\n                      label=\"Last Name\"\r\n                    />\r\n                  </div>\r\n                  {/* Login */}\r\n                  <div className=\"col-lg-4\">\r\n                    <Field\r\n                      name=\"userName\"\r\n                      component={Input}\r\n                      placeholder=\"Login\"\r\n                      label=\"Login\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                {/* Email */}\r\n                <div className=\"form-group row\">\r\n                  <div className=\"col-lg-4\">\r\n                    <Field\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      component={Input}\r\n                      placeholder=\"Email\"\r\n                      label=\"Email\"\r\n                    />\r\n                  </div>\r\n                  {/* Date of birth */}\r\n                  <div className=\"col-lg-4\">\r\n                    <DatePickerField\r\n                      name=\"dateOfBbirth\"\r\n                      label=\"Date of Birth\"\r\n                    />\r\n                  </div>\r\n                  {/* IP Address */}\r\n                  <div className=\"col-lg-4\">\r\n                    <Field\r\n                      name=\"ipAddress\"\r\n                      component={Input}\r\n                      placeholder=\"IP Address\"\r\n                      label=\"IP Address\"\r\n                      customFeedbackLabel=\"We'll never share customer IP Address with anyone else\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                  {/* Gender */}\r\n                  <div className=\"col-lg-4\">\r\n                    <Select name=\"Gender\" label=\"Gender\">\r\n                      <option value=\"Female\">Female</option>\r\n                      <option value=\"Male\">Male</option>\r\n                    </Select>\r\n                  </div>\r\n                  {/* Type */}\r\n                  <div className=\"col-lg-4\">\r\n                    <Select name=\"type\" label=\"Type\">\r\n                      <option value=\"0\">Business</option>\r\n                      <option value=\"1\">Individual</option>\r\n                    </Select>\r\n                  </div>\r\n                </div>\r\n              </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <button\r\n                type=\"button\"\r\n                onClick={onHide}\r\n                className=\"btn btn-light btn-elevate\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <> </>\r\n              <button\r\n                type=\"submit\"\r\n                onClick={() => handleSubmit()}\r\n                className=\"btn btn-primary btn-elevate\"\r\n              >\r\n                Save\r\n              </button>\r\n            </Modal.Footer>\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n","export const CustomerStatusCssClasses = [\"danger\", \"success\", \"info\", \"\"];\r\nexport const CustomerStatusTitles = [\"Suspended\", \"Active\", \"Pending\", \"\"];\r\nexport const CustomerTypeCssClasses = [\"success\", \"primary\", \"\"];\r\nexport const CustomerTypeTitles = [\"Business\", \"Individual\", \"\"];\r\nexport const defaultSorted = [{ dataField: \"id\", order: \"asc\" }];\r\nexport const sizePerPageList = [\r\n  { text: \"3\", value: 3 },\r\n  { text: \"5\", value: 5 },\r\n  { text: \"10\", value: 10 }\r\n];\r\nexport const initialFilter = {\r\n  filter: {\r\n    lastName: \"\",\r\n    firstName: \"\",\r\n    email: \"\",\r\n    ipAddress: \"\"\r\n  },\r\n  sortOrder: \"asc\", // asc||desc\r\n  sortField: \"id\",\r\n  pageNumber: 1,\r\n  pageSize: 10\r\n};\r\n","import React, {createContext, useContext, useState, useCallback} from \"react\";\r\nimport {isEqual, isFunction} from \"lodash\";\r\nimport {initialFilter} from \"./CustomersUIHelpers\";\r\n\r\nconst CustomersUIContext = createContext();\r\n\r\nexport function useCustomersUIContext() {\r\n  return useContext(CustomersUIContext);\r\n}\r\n\r\nexport const CustomersUIConsumer = CustomersUIContext.Consumer;\r\n\r\nexport function CustomersUIProvider({customersUIEvents, children}) {\r\n  const [queryParams, setQueryParamsBase] = useState(initialFilter);\r\n  const [ids, setIds] = useState([]);\r\n  const setQueryParams = useCallback(nextQueryParams => {\r\n    setQueryParamsBase(prevQueryParams => {\r\n      if (isFunction(nextQueryParams)) {\r\n        nextQueryParams = nextQueryParams(prevQueryParams);\r\n      }\r\n\r\n      if (isEqual(prevQueryParams, nextQueryParams)) {\r\n        return prevQueryParams;\r\n      }\r\n\r\n      return nextQueryParams;\r\n    });\r\n  }, []);\r\n\r\n  const initCustomer = {\r\n    id: undefined,\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    userName: \"\",\r\n    gender: \"Female\",\r\n    status: 0,\r\n    dateOfBbirth: \"\",\r\n    ipAddress: \"\",\r\n    type: 1\r\n  };\r\n\r\n  const value = {\r\n    queryParams,\r\n    setQueryParamsBase,\r\n    ids,\r\n    setIds,\r\n    setQueryParams,\r\n    initCustomer,\r\n    newCustomerButtonClick: customersUIEvents.newCustomerButtonClick,\r\n    openEditCustomerDialog: customersUIEvents.openEditCustomerDialog,\r\n    openDeleteCustomerDialog: customersUIEvents.openDeleteCustomerDialog,\r\n    openDeleteCustomersDialog: customersUIEvents.openDeleteCustomersDialog,\r\n    openFetchCustomersDialog: customersUIEvents.openFetchCustomersDialog,\r\n    openUpdateCustomersStatusDialog: customersUIEvents.openUpdateCustomersStatusDialog\r\n  };\r\n\r\n  return <CustomersUIContext.Provider value={value}>{children}</CustomersUIContext.Provider>;\r\n}","import React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../../_redux/customers/customersActions\";\r\nimport { CustomerEditDialogHeader } from \"./CustomerEditDialogHeader\";\r\nimport { CustomerEditForm } from \"./CustomerEditForm\";\r\nimport { useCustomersUIContext } from \"../CustomersUIContext\";\r\n\r\nexport function CustomerEditDialog({ id, show, onHide }) {\r\n  // Customers UI Context\r\n  const customersUIContext = useCustomersUIContext();\r\n  const customersUIProps = useMemo(() => {\r\n    return {\r\n      initCustomer: customersUIContext.initCustomer,\r\n    };\r\n  }, [customersUIContext]);\r\n\r\n  // Customers Redux state\r\n  const dispatch = useDispatch();\r\n  const { actionsLoading, customerForEdit } = useSelector(\r\n    (state) => ({\r\n      actionsLoading: state.customers.actionsLoading,\r\n      customerForEdit: state.customers.customerForEdit,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  useEffect(() => {\r\n    // server call for getting Customer by id\r\n    dispatch(actions.fetchCustomer(id));\r\n  }, [id, dispatch]);\r\n\r\n  // server request for saving customer\r\n  const saveCustomer = (customer) => {\r\n    if (!id) {\r\n      // server request for creating customer\r\n      dispatch(actions.createCustomer(customer)).then(() => onHide());\r\n    } else {\r\n      // server request for updating customer\r\n      dispatch(actions.updateCustomer(customer)).then(() => onHide());\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      size=\"lg\"\r\n      show={show}\r\n      onHide={onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      <CustomerEditDialogHeader id={id} />\r\n      <CustomerEditForm\r\n        saveCustomer={saveCustomer}\r\n        actionsLoading={actionsLoading}\r\n        customer={customerForEdit || customersUIProps.initCustomer}\r\n        onHide={onHide}\r\n      />\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport {ModalProgressBar} from \"../../../../../../_metronic/_partials/controls\";\r\nimport * as actions from \"../../../_redux/customers/customersActions\";\r\nimport {useCustomersUIContext} from \"../CustomersUIContext\";\r\n\r\nexport function CustomerDeleteDialog({ id, show, onHide }) {\r\n  // Customers UI Context\r\n  const customersUIContext = useCustomersUIContext();\r\n  const customersUIProps = useMemo(() => {\r\n    return {\r\n      setIds: customersUIContext.setIds,\r\n      queryParams: customersUIContext.queryParams\r\n    };\r\n  }, [customersUIContext]);\r\n\r\n  // Customers Redux state\r\n  const dispatch = useDispatch();\r\n  const { isLoading } = useSelector(\r\n    (state) => ({ isLoading: state.customers.actionsLoading }),\r\n    shallowEqual\r\n  );\r\n\r\n  // if !id we should close modal\r\n  useEffect(() => {\r\n    if (!id) {\r\n      onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [id]);\r\n\r\n  // looking for loading/dispatch\r\n  useEffect(() => {}, [isLoading, dispatch]);\r\n\r\n  const deleteCustomer = () => {\r\n    // server request for deleting customer by id\r\n    dispatch(actions.deleteCustomer(id)).then(() => {\r\n      // refresh list after deletion\r\n      dispatch(actions.fetchCustomers(customersUIProps.queryParams));\r\n      // clear selections list\r\n      customersUIProps.setIds([]);\r\n      // closing delete modal\r\n      onHide();\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      {/*begin::Loading*/}\r\n      {isLoading && <ModalProgressBar />}\r\n      {/*end::Loading*/}\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Customer Delete\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {!isLoading && (\r\n          <span>Are you sure to permanently delete this customer?</span>\r\n        )}\r\n        {isLoading && <span>Customer is deleting...</span>}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={deleteCustomer}\r\n            className=\"btn btn-primary btn-elevate\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../../_redux/customers/customersActions\";\r\nimport { useCustomersUIContext } from \"../CustomersUIContext\";\r\nimport {ModalProgressBar} from \"../../../../../../_metronic/_partials/controls\";\r\n\r\nexport function CustomersDeleteDialog({ show, onHide }) {\r\n  // Customers UI Context\r\n  const customersUIContext = useCustomersUIContext();\r\n  const customersUIProps = useMemo(() => {\r\n    return {\r\n      ids: customersUIContext.ids,\r\n      setIds: customersUIContext.setIds,\r\n      queryParams: customersUIContext.queryParams,\r\n    };\r\n  }, [customersUIContext]);\r\n\r\n  // Customers Redux state\r\n  const dispatch = useDispatch();\r\n  const { isLoading } = useSelector(\r\n    (state) => ({ isLoading: state.customers.actionsLoading }),\r\n    shallowEqual\r\n  );\r\n\r\n  // if customers weren't selected we should close modal\r\n  useEffect(() => {\r\n    if (!customersUIProps.ids || customersUIProps.ids.length === 0) {\r\n      onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [customersUIProps.ids]);\r\n\r\n  // looking for loading/dispatch\r\n  useEffect(() => {}, [isLoading, dispatch]);\r\n\r\n  const deleteCustomers = () => {\r\n    // server request for deleting customer by selected ids\r\n    dispatch(actions.deleteCustomers(customersUIProps.ids)).then(() => {\r\n      // refresh list after deletion\r\n      dispatch(actions.fetchCustomers(customersUIProps.queryParams)).then(\r\n        () => {\r\n          // clear selections list\r\n          customersUIProps.setIds([]);\r\n          // closing delete modal\r\n          onHide();\r\n        }\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      {/*begin::Loading*/}\r\n      {isLoading && <ModalProgressBar />}\r\n      {/*end::Loading*/}\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Customers Delete\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {!isLoading && (\r\n          <span>Are you sure to permanently delete selected customers?</span>\r\n        )}\r\n        {isLoading && <span>Customer are deleting...</span>}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={deleteCustomers}\r\n            className=\"btn btn-primary btn-elevate\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport {\r\n  CustomerStatusCssClasses,\r\n  CustomerStatusTitles,\r\n} from \"../CustomersUIHelpers\";\r\nimport { useCustomersUIContext } from \"../CustomersUIContext\";\r\n\r\nconst selectedCustomers = (entities, ids) => {\r\n  const _customers = [];\r\n  ids.forEach((id) => {\r\n    const customer = entities.find((el) => el.id === id);\r\n    if (customer) {\r\n      _customers.push(customer);\r\n    }\r\n  });\r\n  return _customers;\r\n};\r\n\r\nexport function CustomersFetchDialog({ show, onHide }) {\r\n  // Customers UI Context\r\n  const customersUIContext = useCustomersUIContext();\r\n  const customersUIProps = useMemo(() => {\r\n    return {\r\n      ids: customersUIContext.ids,\r\n    };\r\n  }, [customersUIContext]);\r\n\r\n  // Customers Redux state\r\n  const { customers } = useSelector(\r\n    (state) => ({\r\n      customers: selectedCustomers(\r\n        state.customers.entities,\r\n        customersUIProps.ids\r\n      ),\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  // if customers weren't selected we should close modal\r\n  useEffect(() => {\r\n    if (!customersUIProps.ids || customersUIProps.ids.length === 0) {\r\n      onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [customersUIProps.ids]);\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Fetch selected elements\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <table className=\"table table table-head-custom table-vertical-center overflow-hidden\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>STATUS</th>\r\n              <th>CUSTOMER</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {customers.map((customer) => (\r\n              <tr key={`id${customer.id}`}>\r\n                <td>{customer.id}</td>\r\n                <td>\r\n                  <span\r\n                    className={`label label-lg label-light-${\r\n                      CustomerStatusCssClasses[customer.status]\r\n                    } label-inline`}\r\n                  >\r\n                    {\" \"}\r\n                    {CustomerStatusTitles[customer.status]}\r\n                  </span>\r\n                </td>\r\n                <td>\r\n                  <span className=\"ml-3\">\r\n                    {customer.lastName}, {customer.firstName}\r\n                  </span>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-primary btn-elevate\"\r\n          >\r\n            Ok\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useEffect, useState, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  CustomerStatusCssClasses,\r\n  CustomerStatusTitles,\r\n} from \"../CustomersUIHelpers\";\r\nimport * as actions from \"../../../_redux/customers/customersActions\";\r\nimport { useCustomersUIContext } from \"../CustomersUIContext\";\r\n\r\nconst selectedCustomers = (entities, ids) => {\r\n  const _customers = [];\r\n  ids.forEach((id) => {\r\n    const customer = entities.find((el) => el.id === id);\r\n    if (customer) {\r\n      _customers.push(customer);\r\n    }\r\n  });\r\n  return _customers;\r\n};\r\n\r\nexport function CustomersUpdateStateDialog({ show, onHide }) {\r\n  // Customers UI Context\r\n  const customersUIContext = useCustomersUIContext();\r\n  const customersUIProps = useMemo(() => {\r\n    return {\r\n      ids: customersUIContext.ids,\r\n      setIds: customersUIContext.setIds,\r\n      queryParams: customersUIContext.queryParams,\r\n    };\r\n  }, [customersUIContext]);\r\n\r\n  // Customers Redux state\r\n  const { customers, isLoading } = useSelector(\r\n    (state) => ({\r\n      customers: selectedCustomers(\r\n        state.customers.entities,\r\n        customersUIProps.ids\r\n      ),\r\n      isLoading: state.customers.actionsLoading,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  // if !id we should close modal\r\n  useEffect(() => {\r\n    if (!customersUIProps.ids || customersUIProps.ids.length === 0) {\r\n      onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [customersUIProps.ids]);\r\n\r\n  const [status, setStatus] = useState(0);\r\n\r\n  const dispatch = useDispatch();\r\n  const updateStatus = () => {\r\n    // server request for update customers status by selected ids\r\n    dispatch(actions.updateCustomersStatus(customersUIProps.ids, status)).then(\r\n      () => {\r\n        // refresh list after deletion\r\n        dispatch(actions.fetchCustomers(customersUIProps.queryParams)).then(\r\n          () => {\r\n            // clear selections list\r\n            customersUIProps.setIds([]);\r\n            // closing delete modal\r\n            onHide();\r\n          }\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Status has been updated for selected customers\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body className=\"overlay overlay-block cursor-default\">\r\n        {/*begin::Loading*/}\r\n        {isLoading && (\r\n          <div className=\"overlay-layer\">\r\n            <div className=\"spinner spinner-lg spinner-primary\" />\r\n          </div>\r\n        )}\r\n        {/*end::Loading*/}\r\n        <table className=\"table table table-head-custom table-vertical-center overflow-hidden\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>STATUS</th>\r\n              <th>CUSTOMER</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {customers.map((customer) => (\r\n              <tr key={`id${customer.id}`}>\r\n                <td>{customer.id}</td>\r\n                <td>\r\n                  <span\r\n                    className={`label label-lg label-light-${\r\n                      CustomerStatusCssClasses[customer.status]\r\n                    } label-inline`}\r\n                  >\r\n                    {\" \"}\r\n                    {CustomerStatusTitles[customer.status]}\r\n                  </span>\r\n                </td>\r\n                <td>\r\n                  <span className=\"ml-3\">\r\n                    {customer.lastName}, {customer.firstName}\r\n                  </span>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </Modal.Body>\r\n      <Modal.Footer className=\"form\">\r\n        <div className=\"form-group\">\r\n          <select\r\n            className=\"form-control\"\r\n            value={status}\r\n            onChange={(e) => setStatus(+e.target.value)}\r\n          >\r\n            <option value=\"0\">Suspended</option>\r\n            <option value=\"1\">Active</option>\r\n            <option value=\"2\">Pending</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-light btn-elevate mr-3\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={updateStatus}\r\n            className=\"btn btn-primary btn-elevate\"\r\n          >\r\n            Update Status\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport { isEqual } from \"lodash\";\r\nimport { useCustomersUIContext } from \"../CustomersUIContext\";\r\n\r\nconst prepareFilter = (queryParams, values) => {\r\n  const { status, type, searchText } = values;\r\n  const newQueryParams = { ...queryParams };\r\n  const filter = {};\r\n  // Filter by status\r\n  filter.status = status !== \"\" ? +status : undefined;\r\n  // Filter by type\r\n  filter.type = type !== \"\" ? +type : undefined;\r\n  // Filter by all fields\r\n  filter.lastName = searchText;\r\n  if (searchText) {\r\n    filter.firstName = searchText;\r\n    filter.email = searchText;\r\n    filter.ipAddress = searchText;\r\n  }\r\n  newQueryParams.filter = filter;\r\n  return newQueryParams;\r\n};\r\n\r\nexport function CustomersFilter({ listLoading }) {\r\n  // Customers UI Context\r\n  const customersUIContext = useCustomersUIContext();\r\n  const customersUIProps = useMemo(() => {\r\n    return {\r\n      queryParams: customersUIContext.queryParams,\r\n      setQueryParams: customersUIContext.setQueryParams,\r\n    };\r\n  }, [customersUIContext]);\r\n\r\n  // queryParams, setQueryParams,\r\n  const applyFilter = (values) => {\r\n    const newQueryParams = prepareFilter(customersUIProps.queryParams, values);\r\n    if (!isEqual(newQueryParams, customersUIProps.queryParams)) {\r\n      newQueryParams.pageNumber = 1;\r\n      // update list by queryParams\r\n      customersUIProps.setQueryParams(newQueryParams);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={{\r\n          status: \"\", // values => All=\"\"/Susspended=0/Active=1/Pending=2\r\n          type: \"\", // values => All=\"\"/Business=0/Individual=1\r\n          searchText: \"\",\r\n        }}\r\n        onSubmit={(values) => {\r\n          applyFilter(values);\r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          handleSubmit,\r\n          handleBlur,\r\n          handleChange,\r\n          setFieldValue,\r\n        }) => (\r\n          <form onSubmit={handleSubmit} className=\"form form-label-right\">\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-lg-2\">\r\n                <select\r\n                  className=\"form-control\"\r\n                  name=\"status\"\r\n                  placeholder=\"Filter by Status\"\r\n                  // TODO: Change this code\r\n                  onChange={(e) => {\r\n                    setFieldValue(\"status\", e.target.value);\r\n                    handleSubmit();\r\n                  }}\r\n                  onBlur={handleBlur}\r\n                  value={values.status}\r\n                >\r\n                  <option value=\"\">All</option>\r\n                  <option value=\"0\">Susspended</option>\r\n                  <option value=\"1\">Active</option>\r\n                  <option value=\"2\">Pending</option>\r\n                </select>\r\n                <small className=\"form-text text-muted\">\r\n                  <b>Filter</b> by Status\r\n                </small>\r\n              </div>\r\n              <div className=\"col-lg-2\">\r\n                <select\r\n                  className=\"form-control\"\r\n                  placeholder=\"Filter by Type\"\r\n                  name=\"type\"\r\n                  onBlur={handleBlur}\r\n                  onChange={(e) => {\r\n                    setFieldValue(\"type\", e.target.value);\r\n                    handleSubmit();\r\n                  }}\r\n                  value={values.type}\r\n                >\r\n                  <option value=\"\">All</option>\r\n                  <option value=\"0\">Business</option>\r\n                  <option value=\"1\">Individual</option>\r\n                </select>\r\n                <small className=\"form-text text-muted\">\r\n                  <b>Filter</b> by Type\r\n                </small>\r\n              </div>\r\n              <div className=\"col-lg-2\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"searchText\"\r\n                  placeholder=\"Search\"\r\n                  onBlur={handleBlur}\r\n                  value={values.searchText}\r\n                  onChange={(e) => {\r\n                    setFieldValue(\"searchText\", e.target.value);\r\n                    handleSubmit();\r\n                  }}\r\n                />\r\n                <small className=\"form-text text-muted\">\r\n                  <b>Search</b> in all fields\r\n                </small>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n","// please be familiar with react-bootstrap-table-next column formaters\r\n// https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html?selectedKind=Work%20on%20Columns&selectedStory=Column%20Formatter&full=0&addons=1&stories=1&panelRight=0&addonPanel=storybook%2Factions%2Factions-panel\r\nimport React from \"react\";\r\nimport {\r\n  CustomerStatusCssClasses,\r\n  CustomerStatusTitles,\r\n} from \"../../CustomersUIHelpers\";\r\n\r\nexport function StatusColumnFormatter(cellContent, row) {\r\n  const getLabelCssClasses = () => {\r\n    return `label label-lg label-light-${\r\n      CustomerStatusCssClasses[row.status]\r\n    } label-inline`;\r\n  };\r\n  return (\r\n    <span className={getLabelCssClasses()}>\r\n      {CustomerStatusTitles[row.status]}\r\n    </span>\r\n  );\r\n}\r\n","// please be familiar with react-bootstrap-table-next column formaters\r\n// https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html?selectedKind=Work%20on%20Columns&selectedStory=Column%20Formatter&full=0&addons=1&stories=1&panelRight=0&addonPanel=storybook%2Factions%2Factions-panel\r\nimport React from \"react\";\r\nimport {\r\n  CustomerTypeCssClasses,\r\n  CustomerTypeTitles,\r\n} from \"../../CustomersUIHelpers\";\r\n\r\nexport function TypeColumnFormatter(cellContent, row) {\r\n  return (\r\n    <>\r\n      <span\r\n        className={`label label-dot label-${\r\n          CustomerTypeCssClasses[row.type]\r\n        } mr-2`}\r\n      ></span>\r\n      &nbsp;\r\n      <span className={`font-bold font-${CustomerTypeCssClasses[row.type]}`}>\r\n        {CustomerTypeTitles[row.type]}\r\n      </span>\r\n    </>\r\n  );\r\n}\r\n","// please be familiar with react-bootstrap-table-next column formaters\r\n// https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html?selectedKind=Work%20on%20Columns&selectedStory=Column%20Formatter&full=0&addons=1&stories=1&panelRight=0&addonPanel=storybook%2Factions%2Factions-panel\r\n/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport { toAbsoluteUrl } from \"../../../../../../../_metronic/_helpers\";\r\n\r\nexport function ActionsColumnFormatter(\r\n  cellContent,\r\n  row,\r\n  rowIndex,\r\n  { openEditCustomerDialog, openDeleteCustomerDialog }\r\n) {\r\n  return (\r\n    <>\r\n      <a\r\n        title=\"Edit customer\"\r\n        className=\"btn btn-icon btn-light btn-hover-primary btn-sm mx-3\"\r\n        onClick={() => openEditCustomerDialog(row.id)}\r\n      >\r\n        <span className=\"svg-icon svg-icon-md svg-icon-primary\">\r\n          <SVG\r\n            src={toAbsoluteUrl(\"/media/svg/icons/Communication/Write.svg\")}\r\n          />\r\n        </span>\r\n      </a>\r\n      <> </>\r\n\r\n      <a\r\n        title=\"Delete customer\"\r\n        className=\"btn btn-icon btn-light btn-hover-danger btn-sm\"\r\n        onClick={() => openDeleteCustomerDialog(row.id)}\r\n      >\r\n        <span className=\"svg-icon svg-icon-md svg-icon-danger\">\r\n          <SVG src={toAbsoluteUrl(\"/media/svg/icons/General/Trash.svg\")} />\r\n        </span>\r\n      </a>\r\n    </>\r\n  );\r\n}\r\n","// React bootstrap table next =>\r\n// DOCS: https://react-bootstrap-table.github.io/react-bootstrap-table2/docs/\r\n// STORYBOOK: https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory, {\r\n  PaginationProvider,\r\n} from \"react-bootstrap-table2-paginator\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../../_redux/customers/customersActions\";\r\nimport {\r\n  getSelectRow,\r\n  getHandlerTableChange,\r\n  NoRecordsFoundMessage,\r\n  PleaseWaitMessage,\r\n  sortCaret,\r\n  headerSortingClasses,\r\n} from \"../../../../../../_metronic/_helpers\";\r\nimport * as uiHelpers from \"../CustomersUIHelpers\";\r\nimport * as columnFormatters from \"./column-formatters\";\r\nimport { Pagination } from \"../../../../../../_metronic/_partials/controls\";\r\nimport { useCustomersUIContext } from \"../CustomersUIContext\";\r\n\r\nexport function CustomersTable() {\r\n  // Customers UI Context\r\n  const customersUIContext = useCustomersUIContext();\r\n  const customersUIProps = useMemo(() => {\r\n    return {\r\n      ids: customersUIContext.ids,\r\n      setIds: customersUIContext.setIds,\r\n      queryParams: customersUIContext.queryParams,\r\n      setQueryParams: customersUIContext.setQueryParams,\r\n      openEditCustomerDialog: customersUIContext.openEditCustomerDialog,\r\n      openDeleteCustomerDialog: customersUIContext.openDeleteCustomerDialog,\r\n    };\r\n  }, [customersUIContext]);\r\n\r\n  // Getting curret state of customers list from store (Redux)\r\n  const { currentState } = useSelector(\r\n    (state) => ({ currentState: state.customers }),\r\n    shallowEqual\r\n  );\r\n  const { totalCount, entities, listLoading } = currentState;\r\n\r\n  // Customers Redux state\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    // clear selections list\r\n    customersUIProps.setIds([]);\r\n    // server call by queryParams\r\n    dispatch(actions.fetchCustomers(customersUIProps.queryParams));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [customersUIProps.queryParams, dispatch]);\r\n  // Table columns\r\n  const columns = [\r\n    {\r\n      dataField: \"id\",\r\n      text: \"ID\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses,\r\n    },\r\n    {\r\n      dataField: \"firstName\",\r\n      text: \"Firstname\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses,\r\n    },\r\n    {\r\n      dataField: \"lastName\",\r\n      text: \"Lastname\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses,\r\n    },\r\n    {\r\n      dataField: \"email\",\r\n      text: \"Email\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses,\r\n    },\r\n    {\r\n      dataField: \"gender\",\r\n      text: \"Gender\",\r\n      sort: false,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"status\",\r\n      text: \"Status\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      formatter: columnFormatters.StatusColumnFormatter,\r\n      headerSortingClasses,\r\n    },\r\n    {\r\n      dataField: \"type\",\r\n      text: \"Type\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      formatter: columnFormatters.TypeColumnFormatter,\r\n    },\r\n    {\r\n      dataField: \"action\",\r\n      text: \"Actions\",\r\n      formatter: columnFormatters.ActionsColumnFormatter,\r\n      formatExtraData: {\r\n        openEditCustomerDialog: customersUIProps.openEditCustomerDialog,\r\n        openDeleteCustomerDialog: customersUIProps.openDeleteCustomerDialog,\r\n      },\r\n      classes: \"text-right pr-0\",\r\n      headerClasses: \"text-right pr-3\",\r\n      style: {\r\n        minWidth: \"100px\",\r\n      },\r\n    },\r\n  ];\r\n  // Table pagination properties\r\n  const paginationOptions = {\r\n    custom: true,\r\n    totalSize: totalCount,\r\n    sizePerPageList: uiHelpers.sizePerPageList,\r\n    sizePerPage: customersUIProps.queryParams.pageSize,\r\n    page: customersUIProps.queryParams.pageNumber,\r\n  };\r\n  return (\r\n    <>\r\n      <PaginationProvider pagination={paginationFactory(paginationOptions)}>\r\n        {({ paginationProps, paginationTableProps }) => {\r\n          return (\r\n            <Pagination\r\n              isLoading={listLoading}\r\n              paginationProps={paginationProps}\r\n            >\r\n              <BootstrapTable\r\n                wrapperClasses=\"table-responsive\"\r\n                bordered={false}\r\n                classes=\"table table-head-custom table-vertical-center overflow-hidden\"\r\n                bootstrap4\r\n                remote\r\n                keyField=\"id\"\r\n                data={entities === null ? [] : entities}\r\n                columns={columns}\r\n                defaultSorted={uiHelpers.defaultSorted}\r\n                onTableChange={getHandlerTableChange(\r\n                  customersUIProps.setQueryParams\r\n                )}\r\n                selectRow={getSelectRow({\r\n                  entities,\r\n                  ids: customersUIProps.ids,\r\n                  setIds: customersUIProps.setIds,\r\n                })}\r\n                {...paginationTableProps}\r\n              >\r\n                <PleaseWaitMessage entities={entities} />\r\n                <NoRecordsFoundMessage entities={entities} />\r\n              </BootstrapTable>\r\n            </Pagination>\r\n          );\r\n        }}\r\n      </PaginationProvider>\r\n    </>\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { useCustomersUIContext } from \"../CustomersUIContext\";\r\n\r\nexport function CustomersGrouping() {\r\n  // Customers UI Context\r\n  const customersUIContext = useCustomersUIContext();\r\n  const customersUIProps = useMemo(() => {\r\n    return {\r\n      ids: customersUIContext.ids,\r\n      setIds: customersUIContext.setIds,\r\n      openDeleteCustomersDialog: customersUIContext.openDeleteCustomersDialog,\r\n      openFetchCustomersDialog: customersUIContext.openFetchCustomersDialog,\r\n      openUpdateCustomersStatusDialog:\r\n        customersUIContext.openUpdateCustomersStatusDialog,\r\n    };\r\n  }, [customersUIContext]);\r\n\r\n  return (\r\n    <div className=\"form\">\r\n      <div className=\"row align-items-center form-group-actions margin-top-20 margin-bottom-20\">\r\n        <div className=\"col-xl-12\">\r\n          <div className=\"form-group form-group-inline\">\r\n            <div className=\"form-label form-label-no-wrap\">\r\n              <label className=\"font-bold font-danger\">\r\n                <span>\r\n                  Selected records count: <b>{customersUIProps.ids.length}</b>\r\n                </span>\r\n              </label>\r\n            </div>\r\n            <div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-danger font-weight-bolder font-size-sm\"\r\n                onClick={customersUIProps.openDeleteCustomersDialog}\r\n              >\r\n                <i className=\"fa fa-trash\"></i> Delete All\r\n              </button>\r\n              &nbsp;\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-light-primary font-weight-bolder font-size-sm\"\r\n                onClick={customersUIProps.openFetchCustomersDialog}\r\n              >\r\n                <i className=\"fa fa-stream\"></i> Fetch Selected\r\n              </button>\r\n              &nbsp;\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-light-primary font-weight-bolder font-size-sm\"\r\n                onClick={customersUIProps.openUpdateCustomersStatusDialog}\r\n              >\r\n                <i className=\"fa fa-sync-alt\"></i> Update Status\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../../../_metronic/_partials/controls\";\r\nimport { CustomersFilter } from \"./customers-filter/CustomersFilter\";\r\nimport { CustomersTable } from \"./customers-table/CustomersTable\";\r\nimport { CustomersGrouping } from \"./customers-grouping/CustomersGrouping\";\r\nimport { useCustomersUIContext } from \"./CustomersUIContext\";\r\n\r\nexport function CustomersCard() {\r\n  const customersUIContext = useCustomersUIContext();\r\n  const customersUIProps = useMemo(() => {\r\n    return {\r\n      ids: customersUIContext.ids,\r\n      newCustomerButtonClick: customersUIContext.newCustomerButtonClick,\r\n    };\r\n  }, [customersUIContext]);\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader title=\"Customers list\">\r\n        <CardHeaderToolbar>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary\"\r\n            onClick={customersUIProps.newCustomerButtonClick}\r\n          >\r\n            New Customer\r\n          </button>\r\n        </CardHeaderToolbar>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <CustomersFilter />\r\n        {customersUIProps.ids.length > 0 && <CustomersGrouping />}\r\n        <CustomersTable />\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { CustomersLoadingDialog } from \"./customers-loading-dialog/CustomersLoadingDialog\";\r\nimport { CustomerEditDialog } from \"./customer-edit-dialog/CustomerEditDialog\";\r\nimport { CustomerDeleteDialog } from \"./customer-delete-dialog/CustomerDeleteDialog\";\r\nimport { CustomersDeleteDialog } from \"./customers-delete-dialog/CustomersDeleteDialog\";\r\nimport { CustomersFetchDialog } from \"./customers-fetch-dialog/CustomersFetchDialog\";\r\nimport { CustomersUpdateStateDialog } from \"./customers-update-status-dialog/CustomersUpdateStateDialog\";\r\nimport { CustomersUIProvider } from \"./CustomersUIContext\";\r\nimport { CustomersCard } from \"./CustomersCard\";\r\n\r\nexport function CustomersPage({ history }) {\r\n  const customersUIEvents = {\r\n    newCustomerButtonClick: () => {\r\n      history.push(\"/e-commerce/customers/new\");\r\n    },\r\n    openEditCustomerDialog: (id) => {\r\n      history.push(`/e-commerce/customers/${id}/edit`);\r\n    },\r\n    openDeleteCustomerDialog: (id) => {\r\n      history.push(`/e-commerce/customers/${id}/delete`);\r\n    },\r\n    openDeleteCustomersDialog: () => {\r\n      history.push(`/e-commerce/customers/deleteCustomers`);\r\n    },\r\n    openFetchCustomersDialog: () => {\r\n      history.push(`/e-commerce/customers/fetch`);\r\n    },\r\n    openUpdateCustomersStatusDialog: () => {\r\n      history.push(\"/e-commerce/customers/updateStatus\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <CustomersUIProvider customersUIEvents={customersUIEvents}>\r\n      <CustomersLoadingDialog />\r\n      <Route path=\"/e-commerce/customers/new\">\r\n        {({ history, match }) => (\r\n          <CustomerEditDialog\r\n            show={match != null}\r\n            onHide={() => {\r\n              history.push(\"/e-commerce/customers\");\r\n            }}\r\n          />\r\n        )}\r\n      </Route>\r\n      <Route path=\"/e-commerce/customers/:id/edit\">\r\n        {({ history, match }) => (\r\n          <CustomerEditDialog\r\n            show={match != null}\r\n            id={match && match.params.id}\r\n            onHide={() => {\r\n              history.push(\"/e-commerce/customers\");\r\n            }}\r\n          />\r\n        )}\r\n      </Route>\r\n      <Route path=\"/e-commerce/customers/deleteCustomers\">\r\n        {({ history, match }) => (\r\n          <CustomersDeleteDialog\r\n            show={match != null}\r\n            onHide={() => {\r\n              history.push(\"/e-commerce/customers\");\r\n            }}\r\n          />\r\n        )}\r\n      </Route>\r\n      <Route path=\"/e-commerce/customers/:id/delete\">\r\n        {({ history, match }) => (\r\n          <CustomerDeleteDialog\r\n            show={match != null}\r\n            id={match && match.params.id}\r\n            onHide={() => {\r\n              history.push(\"/e-commerce/customers\");\r\n            }}\r\n          />\r\n        )}\r\n      </Route>\r\n      <Route path=\"/e-commerce/customers/fetch\">\r\n        {({ history, match }) => (\r\n          <CustomersFetchDialog\r\n            show={match != null}\r\n            onHide={() => {\r\n              history.push(\"/e-commerce/customers\");\r\n            }}\r\n          />\r\n        )}\r\n      </Route>\r\n      <Route path=\"/e-commerce/customers/updateStatus\">\r\n        {({ history, match }) => (\r\n          <CustomersUpdateStateDialog\r\n            show={match != null}\r\n            onHide={() => {\r\n              history.push(\"/e-commerce/customers\");\r\n            }}\r\n          />\r\n        )}\r\n      </Route>\r\n      <CustomersCard />\r\n    </CustomersUIProvider>\r\n  );\r\n}\r\n","import React, {useEffect} from \"react\";\r\nimport {shallowEqual, useSelector} from \"react-redux\";\r\nimport {LoadingDialog} from \"../../../../../../_metronic/_partials/controls\";\r\n\r\nexport function ProductsLoadingDialog() {\r\n  const { isLoading } = useSelector(\r\n    state => ({ isLoading: state.products.listLoading }),\r\n    shallowEqual\r\n  );\r\n  useEffect(() => {}, [isLoading]);\r\n  return <LoadingDialog isLoading={isLoading} text=\"Loading ...\" />;\r\n}\r\n","import * as requestFromServer from \"./productsCrud\";\r\nimport {productsSlice, callTypes} from \"./productsSlice\";\r\n\r\nconst {actions} = productsSlice;\r\n\r\nexport const fetchProducts = queryParams => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.list }));\r\n  return requestFromServer\r\n    .findProducts(queryParams)\r\n    .then(response => {\r\n      const { totalCount, entities } = response.data;\r\n      dispatch(actions.productsFetched({ totalCount, entities }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find products\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.list }));\r\n    });\r\n};\r\n\r\nexport const fetchProduct = id => dispatch => {\r\n  if (!id) {\r\n    return dispatch(actions.productFetched({ productForEdit: undefined }));\r\n  }\r\n\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .getProductById(id)\r\n    .then(response => {\r\n      const product = response.data;\r\n      dispatch(actions.productFetched({ productForEdit: product }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find product\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteProduct = id => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteProduct(id)\r\n    .then(response => {\r\n      dispatch(actions.productDeleted({ id }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete product\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const createProduct = productForCreation => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .createProduct(productForCreation)\r\n    .then(response => {\r\n      const { product } = response.data;\r\n      dispatch(actions.productCreated({ product }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't create product\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const updateProduct = product => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .updateProduct(product)\r\n    .then(() => {\r\n      dispatch(actions.productUpdated({ product }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't update product\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const updateProductsStatus = (ids, status) => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .updateStatusForProducts(ids, status)\r\n    .then(() => {\r\n      dispatch(actions.productsStatusUpdated({ ids, status }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't update products status\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteProducts = ids => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteProducts(ids)\r\n    .then(() => {\r\n      dispatch(actions.productsDeleted({ ids }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete products\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const PRODUCTS_URL = \"api/products\";\r\n\r\n// CREATE =>  POST: add a new product to the server\r\nexport function createProduct(product) {\r\n  return axios.post(PRODUCTS_URL, { product });\r\n}\r\n\r\n// READ\r\nexport function getAllProducts() {\r\n  return axios.get(PRODUCTS_URL);\r\n}\r\n\r\nexport function getProductById(productId) {\r\n  return axios.get(`${PRODUCTS_URL}/${productId}`);\r\n}\r\n\r\n// Method from server should return QueryResultsModel(items: any[], totalsCount: number)\r\n// items => filtered/sorted result\r\nexport function findProducts(queryParams) {\r\n  return axios.post(`${PRODUCTS_URL}/find`, { queryParams });\r\n}\r\n\r\n// UPDATE => PUT: update the procuct on the server\r\nexport function updateProduct(product) {\r\n  return axios.put(`${PRODUCTS_URL}/${product.id}`, { product });\r\n}\r\n\r\n// UPDATE Status\r\nexport function updateStatusForProducts(ids, status) {\r\n  return axios.post(`${PRODUCTS_URL}/updateStatusForProducts`, {\r\n    ids,\r\n    status\r\n  });\r\n}\r\n\r\n// DELETE => delete the product from the server\r\nexport function deleteProduct(productId) {\r\n  return axios.delete(`${PRODUCTS_URL}/${productId}`);\r\n}\r\n\r\n// DELETE Products by ids\r\nexport function deleteProducts(ids) {\r\n  return axios.post(`${PRODUCTS_URL}/deleteProducts`, { ids });\r\n}\r\n","export const ProductStatusCssClasses = [\"success\", \"info\", \"\"];\r\nexport const ProductStatusTitles = [\"Selling\", \"Sold\"];\r\nexport const ProductConditionCssClasses = [\"success\", \"danger\", \"\"];\r\nexport const ProductConditionTitles = [\"New\", \"Used\"];\r\nexport const defaultSorted = [{ dataField: \"id\", order: \"asc\" }];\r\nexport const sizePerPageList = [\r\n  { text: \"3\", value: 3 },\r\n  { text: \"5\", value: 5 },\r\n  { text: \"10\", value: 10 }\r\n];\r\nexport const initialFilter = {\r\n  filter: {\r\n    model: \"\",\r\n    manufacture: \"\",\r\n    VINCode: \"\"\r\n  },\r\n  sortOrder: \"asc\", // asc||desc\r\n  sortField: \"VINCode\",\r\n  pageNumber: 1,\r\n  pageSize: 10\r\n};\r\nexport const AVAILABLE_COLORS = [\r\n  \"Red\",\r\n  \"CadetBlue\",\r\n  \"Eagle\",\r\n  \"Gold\",\r\n  \"LightSlateGrey\",\r\n  \"RoyalBlue\",\r\n  \"Crimson\",\r\n  \"Blue\",\r\n  \"Sienna\",\r\n  \"Indigo\",\r\n  \"Green\",\r\n  \"Violet\",\r\n  \"GoldenRod\",\r\n  \"OrangeRed\",\r\n  \"Khaki\",\r\n  \"Teal\",\r\n  \"Purple\",\r\n  \"Orange\",\r\n  \"Pink\",\r\n  \"Black\",\r\n  \"DarkTurquoise\"\r\n];\r\n\r\nexport const AVAILABLE_MANUFACTURES = [\r\n  \"Pontiac\",\r\n  \"Kia\",\r\n  \"Lotus\",\r\n  \"Subaru\",\r\n  \"Jeep\",\r\n  \"Isuzu\",\r\n  \"Mitsubishi\",\r\n  \"Oldsmobile\",\r\n  \"Chevrolet\",\r\n  \"Chrysler\",\r\n  \"Audi\",\r\n  \"Suzuki\",\r\n  \"GMC\",\r\n  \"Cadillac\",\r\n  \"Infinity\",\r\n  \"Mercury\",\r\n  \"Dodge\",\r\n  \"Ram\",\r\n  \"Lexus\",\r\n  \"Lamborghini\",\r\n  \"Honda\",\r\n  \"Nissan\",\r\n  \"Ford\",\r\n  \"Hyundai\",\r\n  \"Saab\",\r\n  \"Toyota\"\r\n];\r\n","import React, { createContext, useContext, useState, useCallback } from \"react\";\r\nimport { isEqual, isFunction } from \"lodash\";\r\nimport { initialFilter } from \"./ProductsUIHelpers\";\r\n\r\nconst ProductsUIContext = createContext();\r\n\r\nexport function useProductsUIContext() {\r\n  return useContext(ProductsUIContext);\r\n}\r\n\r\nexport const ProductsUIConsumer = ProductsUIContext.Consumer;\r\n\r\nexport function ProductsUIProvider({ productsUIEvents, children }) {\r\n  const [queryParams, setQueryParamsBase] = useState(initialFilter);\r\n  const [ids, setIds] = useState([]);\r\n  const setQueryParams = useCallback((nextQueryParams) => {\r\n    setQueryParamsBase((prevQueryParams) => {\r\n      if (isFunction(nextQueryParams)) {\r\n        nextQueryParams = nextQueryParams(prevQueryParams);\r\n      }\r\n\r\n      if (isEqual(prevQueryParams, nextQueryParams)) {\r\n        return prevQueryParams;\r\n      }\r\n\r\n      return nextQueryParams;\r\n    });\r\n  }, []);\r\n\r\n  const value = {\r\n    queryParams,\r\n    setQueryParamsBase,\r\n    ids,\r\n    setIds,\r\n    setQueryParams,\r\n    newProductButtonClick: productsUIEvents.newProductButtonClick,\r\n    openEditProductPage: productsUIEvents.openEditProductPage,\r\n    openDeleteProductDialog: productsUIEvents.openDeleteProductDialog,\r\n    openDeleteProductsDialog: productsUIEvents.openDeleteProductsDialog,\r\n    openFetchProductsDialog: productsUIEvents.openFetchProductsDialog,\r\n    openUpdateProductsStatusDialog:\r\n      productsUIEvents.openUpdateProductsStatusDialog,\r\n  };\r\n\r\n  return (\r\n    <ProductsUIContext.Provider value={value}>\r\n      {children}\r\n    </ProductsUIContext.Provider>\r\n  );\r\n}\r\n","/* eslint-disable no-restricted-imports */\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { ModalProgressBar } from \"../../../../../../_metronic/_partials/controls\";\r\nimport * as actions from \"../../../_redux/products/productsActions\";\r\nimport { useProductsUIContext } from \"../ProductsUIContext\";\r\n\r\nexport function ProductDeleteDialog({ id, show, onHide }) {\r\n  // Products UI Context\r\n  const productsUIContext = useProductsUIContext();\r\n  const productsUIProps = useMemo(() => {\r\n    return {\r\n      setIds: productsUIContext.setIds,\r\n      queryParams: productsUIContext.queryParams,\r\n    };\r\n  }, [productsUIContext]);\r\n\r\n  // Products Redux state\r\n  const dispatch = useDispatch();\r\n  const { isLoading } = useSelector(\r\n    (state) => ({ isLoading: state.products.actionsLoading }),\r\n    shallowEqual\r\n  );\r\n\r\n  // if !id we should close modal\r\n  useEffect(() => {\r\n    if (!id) {\r\n      onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [id]);\r\n\r\n  // looking for loading/dispatch\r\n  useEffect(() => {}, [isLoading, dispatch]);\r\n\r\n  const deleteProduct = () => {\r\n    // server request for deleting product by id\r\n    dispatch(actions.deleteProduct(id)).then(() => {\r\n      // refresh list after deletion\r\n      dispatch(actions.fetchProducts(productsUIProps.queryParams));\r\n      // clear selections list\r\n      productsUIProps.setIds([]);\r\n      // closing delete modal\r\n      onHide();\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      {isLoading && <ModalProgressBar variant=\"query\" />}\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Product Delete\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {!isLoading && (\r\n          <span>Are you sure to permanently delete this product?</span>\r\n        )}\r\n        {isLoading && <span>Product is deleting...</span>}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={deleteProduct}\r\n            className=\"btn btn-delete btn-elevate\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","/* eslint-disable no-restricted-imports */\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { ModalProgressBar } from \"../../../../../../_metronic/_partials/controls\";\r\nimport * as actions from \"../../../_redux/products/productsActions\";\r\nimport { useProductsUIContext } from \"../ProductsUIContext\";\r\n\r\nexport function ProductsDeleteDialog({ show, onHide }) {\r\n  // Products UI Context\r\n  const productsUIContext = useProductsUIContext();\r\n  const productsUIProps = useMemo(() => {\r\n    return {\r\n      ids: productsUIContext.ids,\r\n      setIds: productsUIContext.setIds,\r\n      queryParams: productsUIContext.queryParams,\r\n    };\r\n  }, [productsUIContext]);\r\n\r\n  // Products Redux state\r\n  const dispatch = useDispatch();\r\n  const { isLoading } = useSelector(\r\n    (state) => ({ isLoading: state.products.actionsLoading }),\r\n    shallowEqual\r\n  );\r\n\r\n  // looking for loading/dispatch\r\n  useEffect(() => {}, [isLoading, dispatch]);\r\n\r\n  // if there weren't selected products we should close modal\r\n  useEffect(() => {\r\n    if (!productsUIProps.ids || productsUIProps.ids.length === 0) {\r\n      onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [productsUIProps.ids]);\r\n\r\n  const deleteProducts = () => {\r\n    // server request for deleting product by seleted ids\r\n    dispatch(actions.deleteProducts(productsUIProps.ids)).then(() => {\r\n      // refresh list after deletion\r\n      dispatch(actions.fetchProducts(productsUIProps.queryParams)).then(() => {\r\n        // clear selections list\r\n        productsUIProps.setIds([]);\r\n        // closing delete modal\r\n        onHide();\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      {isLoading && <ModalProgressBar />}\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Products Delete\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {!isLoading && (\r\n          <span>Are you sure to permanently delete selected products?</span>\r\n        )}\r\n        {isLoading && <span>Products are deleting...</span>}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={deleteProducts}\r\n            className=\"btn btn-primary btn-elevate\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport { ProductStatusCssClasses } from \"../ProductsUIHelpers\";\r\nimport { useProductsUIContext } from \"../ProductsUIContext\";\r\n\r\nconst selectedProducts = (entities, ids) => {\r\n  const _products = [];\r\n  ids.forEach((id) => {\r\n    const product = entities.find((el) => el.id === id);\r\n    if (product) {\r\n      _products.push(product);\r\n    }\r\n  });\r\n  return _products;\r\n};\r\n\r\nexport function ProductsFetchDialog({ show, onHide }) {\r\n  // Products UI Context\r\n  const productsUIContext = useProductsUIContext();\r\n  const productsUIProps = useMemo(() => {\r\n    return {\r\n      ids: productsUIContext.ids,\r\n      queryParams: productsUIContext.queryParams,\r\n    };\r\n  }, [productsUIContext]);\r\n\r\n  // Products Redux state\r\n  const { products } = useSelector(\r\n    (state) => ({\r\n      products: selectedProducts(state.products.entities, productsUIProps.ids),\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  // if there weren't selected ids we should close modal\r\n  useEffect(() => {\r\n    if (!productsUIProps.ids || productsUIProps.ids.length === 0) {\r\n      onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [productsUIProps.ids]);\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Fetch selected elements\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <div className=\"list-timeline list-timeline-skin-light padding-30\">\r\n          <div className=\"list-timeline-items\">\r\n            {products.map((product) => (\r\n              <div className=\"list-timeline-item mb-3\" key={product.id}>\r\n                <span className=\"list-timeline-text\">\r\n                  <span\r\n                    className={`label label-lg label-light-${\r\n                      ProductStatusCssClasses[product.status]\r\n                    } label-inline`}\r\n                    style={{ width: \"60px\" }}\r\n                  >\r\n                    ID: {product.id}\r\n                  </span>{\" \"}\r\n                  <span className=\"ml-5\">\r\n                    {product.manufacture}, {product.model}\r\n                  </span>\r\n                </span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-primary btn-elevate\"\r\n          >\r\n            Ok\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useEffect, useState, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { ProductStatusCssClasses } from \"../ProductsUIHelpers\";\r\nimport * as actions from \"../../../_redux/products/productsActions\";\r\nimport { useProductsUIContext } from \"../ProductsUIContext\";\r\n\r\nconst selectedProducts = (entities, ids) => {\r\n  const _products = [];\r\n  ids.forEach((id) => {\r\n    const product = entities.find((el) => el.id === id);\r\n    if (product) {\r\n      _products.push(product);\r\n    }\r\n  });\r\n  return _products;\r\n};\r\n\r\nexport function ProductsUpdateStatusDialog({ show, onHide }) {\r\n  // Products UI Context\r\n  const productsUIContext = useProductsUIContext();\r\n  const productsUIProps = useMemo(() => {\r\n    return {\r\n      ids: productsUIContext.ids,\r\n      setIds: productsUIContext.setIds,\r\n      queryParams: productsUIContext.queryParams,\r\n    };\r\n  }, [productsUIContext]);\r\n\r\n  // Products Redux state\r\n  const { products, isLoading } = useSelector(\r\n    (state) => ({\r\n      products: selectedProducts(state.products.entities, productsUIProps.ids),\r\n      isLoading: state.products.actionsLoading,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  // if there weren't selected products we should close modal\r\n  useEffect(() => {\r\n    if (productsUIProps.ids || productsUIProps.ids.length === 0) {\r\n      onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [productsUIProps.ids]);\r\n\r\n  const [status, setStatus] = useState(0);\r\n\r\n  const dispatch = useDispatch();\r\n  const updateStatus = () => {\r\n    // server request for updateing product by ids\r\n    dispatch(actions.updateProductsStatus(productsUIProps.ids, status)).then(\r\n      () => {\r\n        // refresh list after deletion\r\n        dispatch(actions.fetchProducts(productsUIProps.queryParams)).then(\r\n          () => {\r\n            // clear selections list\r\n            productsUIProps.setIds([]);\r\n            // closing delete modal\r\n            onHide();\r\n          }\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Status has been updated for selected products\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body className=\"overlay overlay-block cursor-default\">\r\n        {isLoading && (\r\n          <div className=\"overlay-layer bg-transparent\">\r\n            <div className=\"spinner spinner-lg spinner-warning\" />\r\n          </div>\r\n        )}\r\n        <div className=\"list-timeline list-timeline-skin-light padding-30\">\r\n          <div className=\"list-timeline-items\">\r\n            {products.map((product) => (\r\n              <div className=\"list-timeline-item mb-3\" key={product.id}>\r\n                <span className=\"list-timeline-text\">\r\n                  <span\r\n                    className={`label label-lg label-light-${\r\n                      ProductStatusCssClasses[product.status]\r\n                    } label-inline`}\r\n                    style={{ width: \"60px\" }}\r\n                  >\r\n                    ID: {product.id}\r\n                  </span>{\" \"}\r\n                  <span className=\"ml-5\">\r\n                    {product.manufacture}, {product.model}\r\n                  </span>\r\n                </span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </Modal.Body>\r\n      <Modal.Footer className=\"form\">\r\n        <div className=\"form-group\">\r\n          <select\r\n            className={`form-control ${ProductStatusCssClasses[status]}`}\r\n            value={status}\r\n            onChange={(e) => setStatus(+e.target.value)}\r\n          >\r\n            <option value=\"0\">Selling</option>\r\n            <option value=\"1\">Sold</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={updateStatus}\r\n            className=\"btn btn-primary btn-elevate\"\r\n          >\r\n            Update Status\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport { isEqual } from \"lodash\";\r\nimport { useProductsUIContext } from \"../ProductsUIContext\";\r\n\r\nconst prepareFilter = (queryParams, values) => {\r\n  const { status, condition, searchText } = values;\r\n  const newQueryParams = { ...queryParams };\r\n  const filter = {};\r\n  // Filter by status\r\n  filter.status = status !== \"\" ? +status : undefined;\r\n  // Filter by condition\r\n  filter.condition = condition !== \"\" ? +condition : undefined;\r\n  // Filter by all fields\r\n  filter.model = searchText;\r\n  if (searchText) {\r\n    filter.manufacture = searchText;\r\n    filter.VINCode = searchText;\r\n  }\r\n  newQueryParams.filter = filter;\r\n  return newQueryParams;\r\n};\r\n\r\nexport function ProductsFilter({ listLoading }) {\r\n  // Products UI Context\r\n  const productsUIContext = useProductsUIContext();\r\n  const productsUIProps = useMemo(() => {\r\n    return {\r\n      setQueryParams: productsUIContext.setQueryParams,\r\n      queryParams: productsUIContext.queryParams,\r\n    };\r\n  }, [productsUIContext]);\r\n\r\n  const applyFilter = (values) => {\r\n    const newQueryParams = prepareFilter(productsUIProps.queryParams, values);\r\n    if (!isEqual(newQueryParams, productsUIProps.queryParams)) {\r\n      newQueryParams.pageNumber = 1;\r\n      productsUIProps.setQueryParams(newQueryParams);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={{\r\n          status: \"\", // values => All=\"\"/Selling=0/Sold=1\r\n          condition: \"\", // values => All=\"\"/New=0/Used=1\r\n          searchText: \"\",\r\n        }}\r\n        onSubmit={(values) => {\r\n          applyFilter(values);\r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          handleSubmit,\r\n          handleBlur,\r\n          handleChange,\r\n          setFieldValue,\r\n        }) => (\r\n          <form onSubmit={handleSubmit} className=\"form form-label-right\">\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-lg-2\">\r\n                <select\r\n                  className=\"form-control\"\r\n                  name=\"status\"\r\n                  placeholder=\"Filter by Status\"\r\n                  onChange={(e) => {\r\n                    setFieldValue(\"status\", e.target.value);\r\n                    handleSubmit();\r\n                  }}\r\n                  onBlur={handleBlur}\r\n                  value={values.status}\r\n                >\r\n                  <option value=\"\">All</option>\r\n                  <option value=\"0\">Selling</option>\r\n                  <option value=\"1\">Sold</option>\r\n                </select>\r\n                <small className=\"form-text text-muted\">\r\n                  <b>Filter</b> by Status\r\n                </small>\r\n              </div>\r\n              <div className=\"col-lg-2\">\r\n                <select\r\n                  className=\"form-control\"\r\n                  placeholder=\"Filter by Type\"\r\n                  name=\"condition\"\r\n                  onBlur={handleBlur}\r\n                  onChange={(e) => {\r\n                    setFieldValue(\"condition\", e.target.value);\r\n                    handleSubmit();\r\n                  }}\r\n                  value={values.condition}\r\n                >\r\n                  <option value=\"\">All</option>\r\n                  <option value=\"0\">New</option>\r\n                  <option value=\"1\">Used</option>\r\n                </select>\r\n                <small className=\"form-text text-muted\">\r\n                  <b>Filter</b> by Condition\r\n                </small>\r\n              </div>\r\n              <div className=\"col-lg-2\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"searchText\"\r\n                  placeholder=\"Search\"\r\n                  onBlur={handleBlur}\r\n                  value={values.searchText}\r\n                  onChange={(e) => {\r\n                    setFieldValue(\"searchText\", e.target.value);\r\n                    handleSubmit();\r\n                  }}\r\n                />\r\n                <small className=\"form-text text-muted\">\r\n                  <b>Search</b> in all fields\r\n                </small>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  ProductStatusCssClasses,\r\n  ProductStatusTitles\r\n} from \"../../ProductsUIHelpers\";\r\n\r\nexport const StatusColumnFormatter = (cellContent, row) => (\r\n  <span\r\n    className={`label label-lg label-light-${\r\n      ProductStatusCssClasses[row.status]\r\n    } label-inline`}\r\n  >\r\n    {ProductStatusTitles[row.status]}\r\n  </span>\r\n);\r\n","import React from \"react\";\r\nimport {\r\n  ProductConditionCssClasses,\r\n  ProductConditionTitles\r\n} from \"../../ProductsUIHelpers\";\r\n\r\nexport const ConditionColumnFormatter = (cellContent, row) => (\r\n  <>\r\n    <span\r\n      className={`badge badge-${\r\n        ProductConditionCssClasses[row.condition]\r\n      } badge-dot`}\r\n    ></span>\r\n    &nbsp;\r\n    <span\r\n      className={`font-bold font-${\r\n        ProductConditionCssClasses[row.condition]\r\n      }`}\r\n    >\r\n      {ProductConditionTitles[row.condition]}\r\n    </span>\r\n  </>\r\n);\r\n","import React from \"react\";\r\n\r\nexport const ColorColumnFormatter = (cellContent, row) => (\r\n  <span style={{ color: row.color }}>{row.color}</span>\r\n);\r\n","import React from \"react\";\r\n\r\nexport const PriceColumnFormatter = (cellContent, row) => <>${row.price}</>;\r\n","/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport { toAbsoluteUrl } from \"../../../../../../../_metronic/_helpers\";\r\n\r\nexport const ActionsColumnFormatter = (\r\n  cellContent,\r\n  row,\r\n  rowIndex,\r\n  { openEditProductPage, openDeleteProductDialog }\r\n) => (\r\n  <>\r\n    <OverlayTrigger\r\n      overlay={<Tooltip id=\"products-edit-tooltip\">Edit product</Tooltip>}\r\n    >\r\n      <a\r\n        className=\"btn btn-icon btn-light btn-hover-primary btn-sm mx-3\"\r\n        onClick={() => openEditProductPage(row.id)}\r\n      >\r\n        <span className=\"svg-icon svg-icon-md svg-icon-primary\">\r\n          <SVG\r\n            src={toAbsoluteUrl(\"/media/svg/icons/Communication/Write.svg\")}\r\n          />\r\n        </span>\r\n      </a>\r\n    </OverlayTrigger>\r\n\r\n    <> </>\r\n    <OverlayTrigger\r\n      overlay={<Tooltip id=\"products-delete-tooltip\">Delete product</Tooltip>}\r\n    >\r\n      <a\r\n        className=\"btn btn-icon btn-light btn-hover-danger btn-sm\"\r\n        onClick={() => openDeleteProductDialog(row.id)}\r\n      >\r\n        <span className=\"svg-icon svg-icon-md svg-icon-danger\">\r\n          <SVG src={toAbsoluteUrl(\"/media/svg/icons/General/Trash.svg\")} />\r\n        </span>\r\n      </a>\r\n    </OverlayTrigger>\r\n  </>\r\n);\r\n","// React bootstrap table next =>\r\n// DOCS: https://react-bootstrap-table.github.io/react-bootstrap-table2/docs/\r\n// STORYBOOK: https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory, {\r\n  PaginationProvider,\r\n} from \"react-bootstrap-table2-paginator\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../../_redux/products/productsActions\";\r\nimport * as uiHelpers from \"../ProductsUIHelpers\";\r\nimport {\r\n  getSelectRow,\r\n  getHandlerTableChange,\r\n  NoRecordsFoundMessage,\r\n  PleaseWaitMessage,\r\n  sortCaret,\r\n} from \"../../../../../../_metronic/_helpers\";\r\nimport * as columnFormatters from \"./column-formatters\";\r\nimport { Pagination } from \"../../../../../../_metronic/_partials/controls\";\r\nimport { useProductsUIContext } from \"../ProductsUIContext\";\r\n\r\nexport function ProductsTable() {\r\n  // Products UI Context\r\n  const productsUIContext = useProductsUIContext();\r\n  const productsUIProps = useMemo(() => {\r\n    return {\r\n      ids: productsUIContext.ids,\r\n      setIds: productsUIContext.setIds,\r\n      queryParams: productsUIContext.queryParams,\r\n      setQueryParams: productsUIContext.setQueryParams,\r\n      openEditProductPage: productsUIContext.openEditProductPage,\r\n      openDeleteProductDialog: productsUIContext.openDeleteProductDialog,\r\n    };\r\n  }, [productsUIContext]);\r\n\r\n  // Getting curret state of products list from store (Redux)\r\n  const { currentState } = useSelector(\r\n    (state) => ({ currentState: state.products }),\r\n    shallowEqual\r\n  );\r\n  const { totalCount, entities, listLoading } = currentState;\r\n  // Products Redux state\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    // clear selections list\r\n    productsUIProps.setIds([]);\r\n    // server call by queryParams\r\n    dispatch(actions.fetchProducts(productsUIProps.queryParams));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [productsUIProps.queryParams, dispatch]);\r\n  // Table columns\r\n  const columns = [\r\n    {\r\n      dataField: \"VINCode\",\r\n      text: \"VIN Code (ID)\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"manufacture\",\r\n      text: \"Manufacture\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"model\",\r\n      text: \"Model\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"modelYear\",\r\n      text: \"Model Year\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"color\",\r\n      text: \"Color\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      formatter: columnFormatters.ColorColumnFormatter,\r\n    },\r\n    {\r\n      dataField: \"price\",\r\n      text: \"Price\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      formatter: columnFormatters.PriceColumnFormatter,\r\n    },\r\n    {\r\n      dataField: \"status\",\r\n      text: \"Status\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      formatter: columnFormatters.StatusColumnFormatter,\r\n    },\r\n    {\r\n      dataField: \"condition\",\r\n      text: \"Condition\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      formatter: columnFormatters.ConditionColumnFormatter,\r\n    },\r\n    {\r\n      dataField: \"action\",\r\n      text: \"Actions\",\r\n      formatter: columnFormatters.ActionsColumnFormatter,\r\n      formatExtraData: {\r\n        openEditProductPage: productsUIProps.openEditProductPage,\r\n        openDeleteProductDialog: productsUIProps.openDeleteProductDialog,\r\n      },\r\n      classes: \"text-right pr-0\",\r\n      headerClasses: \"text-right pr-3\",\r\n      style: {\r\n        minWidth: \"100px\",\r\n      },\r\n    },\r\n  ];\r\n  // Table pagination properties\r\n  const paginationOptions = {\r\n    custom: true,\r\n    totalSize: totalCount,\r\n    sizePerPageList: uiHelpers.sizePerPageList,\r\n    sizePerPage: productsUIProps.queryParams.pageSize,\r\n    page: productsUIProps.queryParams.pageNumber,\r\n  };\r\n  return (\r\n    <>\r\n      <PaginationProvider pagination={paginationFactory(paginationOptions)}>\r\n        {({ paginationProps, paginationTableProps }) => {\r\n          return (\r\n            <Pagination\r\n              isLoading={listLoading}\r\n              paginationProps={paginationProps}\r\n            >\r\n              <BootstrapTable\r\n                wrapperClasses=\"table-responsive\"\r\n                classes=\"table table-head-custom table-vertical-center overflow-hidden\"\r\n                bootstrap4\r\n                bordered={false}\r\n                remote\r\n                keyField=\"id\"\r\n                data={entities === null ? [] : entities}\r\n                columns={columns}\r\n                defaultSorted={uiHelpers.defaultSorted}\r\n                onTableChange={getHandlerTableChange(\r\n                  productsUIProps.setQueryParams\r\n                )}\r\n                selectRow={getSelectRow({\r\n                  entities,\r\n                  ids: productsUIProps.ids,\r\n                  setIds: productsUIProps.setIds,\r\n                })}\r\n                {...paginationTableProps}\r\n              >\r\n                <PleaseWaitMessage entities={entities} />\r\n                <NoRecordsFoundMessage entities={entities} />\r\n              </BootstrapTable>\r\n            </Pagination>\r\n          );\r\n        }}\r\n      </PaginationProvider>\r\n    </>\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { useProductsUIContext } from \"../ProductsUIContext\";\r\n\r\nexport function ProductsGrouping() {\r\n  // Products UI Context\r\n  const productsUIContext = useProductsUIContext();\r\n  const productsUIProps = useMemo(() => {\r\n    return {\r\n      ids: productsUIContext.ids,\r\n      setIds: productsUIContext.setIds,\r\n      openDeleteProductsDialog: productsUIContext.openDeleteProductsDialog,\r\n      openFetchProductsDialog: productsUIContext.openFetchProductsDialog,\r\n      openUpdateProductsStatusDialog:\r\n        productsUIContext.openUpdateProductsStatusDialog,\r\n    };\r\n  }, [productsUIContext]);\r\n\r\n  return (\r\n    <div className=\"form\">\r\n      <div className=\"row align-items-center form-group-actions margin-top-20 margin-bottom-20\">\r\n        <div className=\"col-xl-12\">\r\n          <div className=\"form-group form-group-inline\">\r\n            <div className=\"form-label form-label-no-wrap\">\r\n              <label className=\"-font-bold font-danger-\">\r\n                <span>\r\n                  Selected records count: <b>{productsUIProps.ids.length}</b>\r\n                </span>\r\n              </label>\r\n            </div>\r\n            <div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-danger font-weight-bolder font-size-sm\"\r\n                onClick={productsUIProps.openDeleteProductsDialog}\r\n              >\r\n                <i className=\"fa fa-trash\"></i> Delete All\r\n              </button>\r\n              &nbsp;\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-light-primary font-weight-bolder font-size-sm\"\r\n                onClick={productsUIProps.openFetchProductsDialog}\r\n              >\r\n                <i className=\"fa fa-stream\"></i> Fetch Selected\r\n              </button>\r\n              &nbsp;\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-light-primary font-weight-bolder font-size-sm\"\r\n                onClick={productsUIProps.openUpdateProductsStatusDialog}\r\n              >\r\n                <i className=\"fa fa-sync-alt\"></i> Update Status\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, {useMemo} from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../../../_metronic/_partials/controls\";\r\nimport { ProductsFilter } from \"./products-filter/ProductsFilter\";\r\nimport { ProductsTable } from \"./products-table/ProductsTable\";\r\nimport { ProductsGrouping } from \"./products-grouping/ProductsGrouping\";\r\nimport { useProductsUIContext } from \"./ProductsUIContext\";\r\n\r\nexport function ProductsCard() {\r\n  const productsUIContext = useProductsUIContext();\r\n  const productsUIProps = useMemo(() => {\r\n    return {\r\n      ids: productsUIContext.ids,\r\n      queryParams: productsUIContext.queryParams,\r\n      setQueryParams: productsUIContext.setQueryParams,\r\n      newProductButtonClick: productsUIContext.newProductButtonClick,\r\n      openDeleteProductsDialog: productsUIContext.openDeleteProductsDialog,\r\n      openEditProductPage: productsUIContext.openEditProductPage,\r\n      openUpdateProductsStatusDialog:\r\n        productsUIContext.openUpdateProductsStatusDialog,\r\n      openFetchProductsDialog: productsUIContext.openFetchProductsDialog,\r\n    };\r\n  }, [productsUIContext]);\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader title=\"Products list\">\r\n        <CardHeaderToolbar>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary\"\r\n            onClick={productsUIProps.newProductButtonClick}\r\n          >\r\n            New Product\r\n          </button>\r\n        </CardHeaderToolbar>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <ProductsFilter />\r\n        {productsUIProps.ids.length > 0 && (\r\n          <>\r\n            <ProductsGrouping />\r\n          </>\r\n        )}\r\n        <ProductsTable />\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { ProductsLoadingDialog } from \"./products-loading-dialog/ProductsLoadingDialog\";\r\nimport { ProductDeleteDialog } from \"./product-delete-dialog/ProductDeleteDialog\";\r\nimport { ProductsDeleteDialog } from \"./products-delete-dialog/ProductsDeleteDialog\";\r\nimport { ProductsFetchDialog } from \"./products-fetch-dialog/ProductsFetchDialog\";\r\nimport { ProductsUpdateStatusDialog } from \"./products-update-status-dialog/ProductsUpdateStatusDialog\";\r\nimport { ProductsCard } from \"./ProductsCard\";\r\nimport { ProductsUIProvider } from \"./ProductsUIContext\";\r\n\r\nexport function ProductsPage({ history }) {\r\n  const productsUIEvents = {\r\n    newProductButtonClick: () => {\r\n      history.push(\"/e-commerce/products/new\");\r\n    },\r\n    openEditProductPage: (id) => {\r\n      history.push(`/e-commerce/products/${id}/edit`);\r\n    },\r\n    openDeleteProductDialog: (id) => {\r\n      history.push(`/e-commerce/products/${id}/delete`);\r\n    },\r\n    openDeleteProductsDialog: () => {\r\n      history.push(`/e-commerce/products/deleteProducts`);\r\n    },\r\n    openFetchProductsDialog: () => {\r\n      history.push(`/e-commerce/products/fetch`);\r\n    },\r\n    openUpdateProductsStatusDialog: () => {\r\n      history.push(\"/e-commerce/products/updateStatus\");\r\n    },\r\n  };\r\n\r\n  return (\r\n    <ProductsUIProvider productsUIEvents={productsUIEvents}>\r\n      <ProductsLoadingDialog />\r\n      <Route path=\"/e-commerce/products/deleteProducts\">\r\n        {({ history, match }) => (\r\n          <ProductsDeleteDialog\r\n            show={match != null}\r\n            onHide={() => {\r\n              history.push(\"/e-commerce/products\");\r\n            }}\r\n          />\r\n        )}\r\n      </Route>\r\n      <Route path=\"/e-commerce/products/:id/delete\">\r\n        {({ history, match }) => (\r\n          <ProductDeleteDialog\r\n            show={match != null}\r\n            id={match && match.params.id}\r\n            onHide={() => {\r\n              history.push(\"/e-commerce/products\");\r\n            }}\r\n          />\r\n        )}\r\n      </Route>\r\n      <Route path=\"/e-commerce/products/fetch\">\r\n        {({ history, match }) => (\r\n          <ProductsFetchDialog\r\n            show={match != null}\r\n            onHide={() => {\r\n              history.push(\"/e-commerce/products\");\r\n            }}\r\n          />\r\n        )}\r\n      </Route>\r\n      <Route path=\"/e-commerce/products/updateStatus\">\r\n        {({ history, match }) => (\r\n          <ProductsUpdateStatusDialog\r\n            show={match != null}\r\n            onHide={() => {\r\n              history.push(\"/e-commerce/products\");\r\n            }}\r\n          />\r\n        )}\r\n      </Route>\r\n      <ProductsCard />\r\n    </ProductsUIProvider>\r\n  );\r\n}\r\n","// Form is based on Formik\r\n// Data validation is based on Yup\r\n// Please, be familiar with article first:\r\n// https://hackernoon.com/react-form-validation-with-formik-and-yup-8b76bda62e10\r\nimport React from \"react\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Input, Select } from \"../../../../../../_metronic/_partials/controls\";\r\nimport {\r\n  AVAILABLE_COLORS,\r\n  AVAILABLE_MANUFACTURES,\r\n  ProductStatusTitles,\r\n  ProductConditionTitles,\r\n} from \"../ProductsUIHelpers\";\r\n\r\n// Validation schema\r\nconst ProductEditSchema = Yup.object().shape({\r\n  model: Yup.string()\r\n    .min(2, \"Minimum 2 symbols\")\r\n    .max(50, \"Maximum 50 symbols\")\r\n    .required(\"Model is required\"),\r\n  manufacture: Yup.string()\r\n    .min(2, \"Minimum 2 symbols\")\r\n    .max(50, \"Maximum 50 symbols\")\r\n    .required(\"Manufacture is required\"),\r\n  modelYear: Yup.number()\r\n    .min(1950, \"1950 is minimum\")\r\n    .max(2020, \"2020 is maximum\")\r\n    .required(\"Model year is required\"),\r\n  mileage: Yup.number()\r\n    .min(0, \"0 is minimum\")\r\n    .max(1000000, \"1000000 is maximum\")\r\n    .required(\"Mileage is required\"),\r\n  color: Yup.string().required(\"Color is required\"),\r\n  price: Yup.number()\r\n    .min(1, \"$1 is minimum\")\r\n    .max(1000000, \"$1000000 is maximum\")\r\n    .required(\"Price is required\"),\r\n  VINCode: Yup.string().required(\"VINCode is required\"),\r\n});\r\n\r\nexport function ProductEditForm({\r\n  product,\r\n  btnRef,\r\n  saveProduct,\r\n}) {\r\n  return (\r\n    <>\r\n      <Formik\r\n        enableReinitialize={true}\r\n        initialValues={product}\r\n        validationSchema={ProductEditSchema}\r\n        onSubmit={(values) => {\r\n          saveProduct(values);\r\n        }}\r\n      >\r\n        {({ handleSubmit }) => (\r\n          <>\r\n            <Form className=\"form form-label-right\">\r\n              <div className=\"form-group row\">\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    name=\"model\"\r\n                    component={Input}\r\n                    placeholder=\"Model\"\r\n                    label=\"Model\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <Select name=\"manufacture\" label=\"Manufacture\">\r\n                    {AVAILABLE_MANUFACTURES.map((manufacture) => (\r\n                      <option key={manufacture} value={manufacture}>\r\n                        {manufacture}\r\n                      </option>\r\n                    ))}\r\n                  </Select>\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    type=\"number\"\r\n                    name=\"modelYear\"\r\n                    component={Input}\r\n                    placeholder=\"Model year\"\r\n                    label=\"Model year\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group row\">\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    type=\"number\"\r\n                    name=\"mileage\"\r\n                    component={Input}\r\n                    placeholder=\"Mileage\"\r\n                    label=\"Mileage\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <Select name=\"color\" label=\"Color\">\r\n                    {AVAILABLE_COLORS.map((color) => (\r\n                      <option key={color} value={color}>\r\n                        {color}\r\n                      </option>\r\n                    ))}\r\n                  </Select>\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    type=\"number\"\r\n                    name=\"price\"\r\n                    component={Input}\r\n                    placeholder=\"Price\"\r\n                    label=\"Price ($)\"\r\n                    customFeedbackLabel=\"Please enter Price\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group row\">\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    name=\"VINCode\"\r\n                    component={Input}\r\n                    placeholder=\"VIN code\"\r\n                    label=\"VIN code\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <Select name=\"status\" label=\"Status\">\r\n                    {ProductStatusTitles.map((status, index) => (\r\n                      <option key={status} value={index}>\r\n                        {status}\r\n                      </option>\r\n                    ))}\r\n                  </Select>\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <Select name=\"condition\" label=\"Condition\">\r\n                    {ProductConditionTitles.map((condition, index) => (\r\n                      <option key={condition} value={index}>\r\n                        {condition}\r\n                      </option>\r\n                    ))}\r\n                  </Select>\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Description</label>\r\n                <Field\r\n                  name=\"description\"\r\n                  as=\"textarea\"\r\n                  className=\"form-control\"\r\n                />\r\n              </div>\r\n              <button\r\n                type=\"submit\"\r\n                style={{ display: \"none\" }}\r\n                ref={btnRef}\r\n                onSubmit={() => handleSubmit()}\r\n              ></button>\r\n            </Form>\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n","export const defaultSorted = [{ dataField: \"id\", order: \"asc\" }];\r\nexport const sizePerPageList = [\r\n  { text: \"1\", value: 1 },\r\n  { text: \"3\", value: 3 },\r\n  { text: \"5\", value: 5 },\r\n];\r\nexport const initialFilter = {\r\n  filter: {\r\n    value: \"\",\r\n  },\r\n  sortOrder: \"asc\", // asc||desc\r\n  sortField: \"name\",\r\n  pageNumber: 1,\r\n  pageSize: 5,\r\n};\r\n\r\nexport const SPECIFICATIONS_DICTIONARY = [\r\n  { id: 0, name: \"Seats\" },\r\n  { id: 1, name: \"Fuel Type\" },\r\n  { id: 2, name: \"Stock\" },\r\n  { id: 3, name: \"Door count\" },\r\n  { id: 4, name: \"Engine\" },\r\n  { id: 5, name: \"Transmission\" },\r\n  { id: 6, name: \"Drivetrain\" },\r\n  { id: 7, name: \"Combined MPG\" },\r\n  { id: 8, name: \"Warranty\" },\r\n  { id: 9, name: \"Wheels\" },\r\n];\r\n","/* eslint-disable no-unused-vars */\r\nimport React, {\r\n  useEffect,\r\n  useContext,\r\n  createContext,\r\n  useState,\r\n  useCallback,\r\n} from \"react\";\r\nimport { isEqual, isFunction } from \"lodash\";\r\nimport { initialFilter } from \"./SpecificationsUIHelper\";\r\n\r\nconst SpecificationsUIContext = createContext();\r\n\r\nexport function useSpecificationsUIContext() {\r\n  return useContext(SpecificationsUIContext);\r\n}\r\n\r\nexport const SpecificationsUIConsumer = SpecificationsUIContext.Consumer;\r\n\r\nexport function SpecificationsUIProvider({ currentProductId, children }) {\r\n  const [productId, setProductId] = useState(currentProductId);\r\n  const [queryParams, setQueryParamsBase] = useState(initialFilter);\r\n  const [ids, setIds] = useState([]);\r\n  const setQueryParams = useCallback((nextQueryParams) => {\r\n    setQueryParamsBase((prevQueryParams) => {\r\n      if (isFunction(nextQueryParams)) {\r\n        nextQueryParams = nextQueryParams(prevQueryParams);\r\n      }\r\n\r\n      if (isEqual(prevQueryParams, nextQueryParams)) {\r\n        return prevQueryParams;\r\n      }\r\n\r\n      return nextQueryParams;\r\n    });\r\n  }, []);\r\n  const [selectedId, setSelectedId] = useState(null);\r\n  const initSpecification = {\r\n    id: undefined,\r\n    value: \"\",\r\n    specId: 0,\r\n    carId: productId,\r\n  };\r\n  useEffect(() => {\r\n    initSpecification.carId = currentProductId;\r\n    initSpecification.productId = currentProductId;\r\n    setProductId(currentProductId);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currentProductId]);\r\n  const [\r\n    showEditSpecificationDialog,\r\n    setShowEditSpecificationDialog,\r\n  ] = useState(false);\r\n  const openNewSpecificationDialog = () => {\r\n    setSelectedId(undefined);\r\n    setShowEditSpecificationDialog(true);\r\n  };\r\n  const openEditSpecificationDialog = (id) => {\r\n    setSelectedId(id);\r\n    setShowEditSpecificationDialog(true);\r\n  };\r\n  const closeEditSpecificationDialog = () => {\r\n    setSelectedId(undefined);\r\n    setShowEditSpecificationDialog(false);\r\n  };\r\n  const [\r\n    showDeleteSpecificationDialog,\r\n    setShowDeleteSpecificationDialog,\r\n  ] = useState(false);\r\n  const openDeleteSpecificationDialog = (id) => {\r\n    setSelectedId(id);\r\n    setShowDeleteSpecificationDialog(true);\r\n  };\r\n  const closeDeleteSpecificationDialog = () => {\r\n    setSelectedId(undefined);\r\n    setShowDeleteSpecificationDialog(false);\r\n  };\r\n  const [\r\n    showDeleteSpecificationsDialog,\r\n    setShowDeleteSpecificationsDialog,\r\n  ] = useState(false);\r\n  const openDeleteSpecificationsDialog = () => {\r\n    setShowDeleteSpecificationsDialog(true);\r\n  };\r\n  const closeDeleteSpecificationsDialog = () => {\r\n    setShowDeleteSpecificationsDialog(false);\r\n  };\r\n  const [\r\n    showFetchSpecificationsDialog,\r\n    setShowFetchSpecificationsDialog,\r\n  ] = useState(false);\r\n  const openFetchSpecificationsDialog = () => {\r\n    setShowFetchSpecificationsDialog(true);\r\n  };\r\n  const closeFetchSpecificationsDialog = () => {\r\n    setShowFetchSpecificationsDialog(false);\r\n  };\r\n  const value = {\r\n    ids,\r\n    setIds,\r\n    productId,\r\n    setProductId,\r\n    queryParams,\r\n    setQueryParams,\r\n    initSpecification,\r\n    selectedId,\r\n    showEditSpecificationDialog,\r\n    openEditSpecificationDialog,\r\n    openNewSpecificationDialog,\r\n    closeEditSpecificationDialog,\r\n    showDeleteSpecificationDialog,\r\n    openDeleteSpecificationDialog,\r\n    closeDeleteSpecificationDialog,\r\n    showDeleteSpecificationsDialog,\r\n    openDeleteSpecificationsDialog,\r\n    closeDeleteSpecificationsDialog,\r\n    showFetchSpecificationsDialog,\r\n    openFetchSpecificationsDialog,\r\n    closeFetchSpecificationsDialog,\r\n  };\r\n\r\n  return (\r\n    <SpecificationsUIContext.Provider value={value}>\r\n      {children}\r\n    </SpecificationsUIContext.Provider>\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport { isEqual } from \"lodash\";\r\nimport { useSpecificationsUIContext } from \"./SpecificationsUIContext\";\r\n\r\nconst prepareFilter = (queryParams, values) => {\r\n  const { searchText } = values;\r\n  const newQueryParams = { ...queryParams };\r\n  const filter = {};\r\n  filter.value = searchText;\r\n  if (searchText) {\r\n    filter.name = searchText;\r\n  }\r\n  newQueryParams.filter = filter;\r\n  return newQueryParams;\r\n};\r\n\r\nexport function SpecificationsFilter() {\r\n  // Specs UI Context\r\n  const specsUIContext = useSpecificationsUIContext();\r\n  const specsUIProps = useMemo(() => {\r\n    return {\r\n      openNewSpecificationDialog: specsUIContext.openNewSpecificationDialog,\r\n      setQueryParams: specsUIContext.setQueryParams,\r\n      queryParams: specsUIContext.queryParams,\r\n    };\r\n  }, [specsUIContext]);\r\n\r\n  const applyFilter = (values) => {\r\n    const newQueryParams = prepareFilter(specsUIProps.queryParams, values);\r\n    if (!isEqual(newQueryParams, specsUIProps.queryParams)) {\r\n      newQueryParams.pageNumber = 1;\r\n      specsUIProps.setQueryParams(newQueryParams);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"form-filtration\">\r\n        <div className=\"row align-items-center\">\r\n          <div className=\"col-md-2 margin-bottom-10-mobile\">\r\n            <Formik\r\n              initialValues={{\r\n                searchText: \"\",\r\n              }}\r\n              onSubmit={(values) => {\r\n                applyFilter(values);\r\n              }}\r\n            >\r\n              {({\r\n                values,\r\n                handleSubmit,\r\n                handleBlur,\r\n                handleChange,\r\n                setFieldValue,\r\n              }) => (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"searchText\"\r\n                      placeholder=\"Search\"\r\n                      onBlur={handleBlur}\r\n                      value={values.searchText}\r\n                      onChange={(e) => {\r\n                        setFieldValue(\"searchText\", e.target.value);\r\n                        handleSubmit();\r\n                      }}\r\n                    />\r\n                    <small className=\"form-text text-muted\">\r\n                      <b>Search</b> in all fields\r\n                    </small>\r\n                  </div>\r\n                </form>\r\n              )}\r\n            </Formik>\r\n          </div>\r\n          <div className=\"col-md-7 margin-bottom-10-mobile\"></div>\r\n          <div className=\"col-md-3 text-right margin-bottom-10-mobile\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary\"\r\n              onClick={() => specsUIProps.openNewSpecificationDialog()}\r\n            >\r\n              Create new specification\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import * as requestFromServer from \"./specificationsCrud\";\r\nimport {specificationsSlice, callTypes} from \"./specificationsSlice\";\r\n\r\nconst {actions} = specificationsSlice;\r\n\r\nexport const fetchSpecifications = (queryParams, productId) => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.list }));\r\n  if (!productId) {\r\n    return dispatch(\r\n      actions.specificationsFetched({ totalCount: 0, entities: null })\r\n    );\r\n  }\r\n\r\n  return requestFromServer\r\n    .findSpecifications(queryParams, productId)\r\n    .then(response => {\r\n      const { totalCount, entities } = response.data;\r\n      dispatch(actions.specificationsFetched({ totalCount, entities }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find specifications\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.list }));\r\n    });\r\n};\r\n\r\nexport const fetchSpecification = id => dispatch => {\r\n  if (!id) {\r\n    return dispatch(\r\n      actions.specificationFetched({ specificationForEdit: undefined })\r\n    );\r\n  }\r\n\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .getSpecificationById(id)\r\n    .then(response => {\r\n      const specification = response.data;\r\n      dispatch(\r\n        actions.specificationFetched({ specificationForEdit: specification })\r\n      );\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find specification\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteSpecification = id => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteSpecification(id)\r\n    .then(response => {\r\n      dispatch(actions.specificationDeleted({ id }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete specification\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const createSpecification = specificationForCreation => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .createSpecification(specificationForCreation)\r\n    .then(response => {\r\n      const { specification } = response.data;\r\n      dispatch(actions.specificationCreated({ specification }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't create specification\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const updateSpecification = specification => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .updateSpecification(specification)\r\n    .then(() => {\r\n      dispatch(actions.specificationUpdated({ specification }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't update specification\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteSpecifications = ids => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteSpecifications(ids)\r\n    .then(() => {\r\n      dispatch(actions.specificationsDeleted({ ids }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete specifications\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const SPECIFICATIONS_URL = \"api/specifications\";\r\n\r\n// CREATE =>  POST: add a new specifications to the server\r\nexport function createSpecification(specification) {\r\n  return axios.post(SPECIFICATIONS_URL, { specification });\r\n}\r\n\r\n// READ\r\n// Server should return filtered specifications by productId\r\nexport function getAllProductSpecificationsByProductId(productId) {\r\n  return axios.get(`${SPECIFICATIONS_URL}?productId=${productId}`);\r\n}\r\n\r\nexport function getSpecificationById(specificationId) {\r\n  return axios.get(`${SPECIFICATIONS_URL}/${specificationId}`);\r\n}\r\n\r\n// Server should return sorted/filtered specifications and merge with items from state\r\n// TODO: Change your URL to REAL API, right now URL is 'api/specificationsfind/{productId}'. Should be 'api/specifications/find/{productId}'!!!\r\nexport function findSpecifications(queryParams, productId) {\r\n  return axios.post(`${SPECIFICATIONS_URL}find/${productId}`, { queryParams });\r\n}\r\n\r\n// UPDATE => PUT: update the specification\r\nexport function updateSpecification(specification) {\r\n  return axios.put(`${SPECIFICATIONS_URL}/${specification.id}`, {\r\n    specification\r\n  });\r\n}\r\n\r\n// DELETE => delete the specification\r\nexport function deleteSpecification(specificationId) {\r\n  return axios.delete(`${SPECIFICATIONS_URL}/${specificationId}`);\r\n}\r\n\r\n// DELETE specifications by ids\r\nexport function deleteSpecifications(ids) {\r\n  return axios.post(`${SPECIFICATIONS_URL}/deleteSpecifications`, { ids });\r\n}\r\n","/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport { toAbsoluteUrl } from \"../../../../../../../_metronic/_helpers\";\r\n\r\nexport function ActionsColumnFormatter(\r\n  cellContent,\r\n  row,\r\n  rowIndex,\r\n  { openEditSpecificationDialog, openDeleteSpecificationDialog }\r\n) {\r\n  return (\r\n    <>\r\n      <OverlayTrigger\r\n        overlay={<Tooltip id=\"specs-edit-tooltip\">Edit specification</Tooltip>}\r\n      >\r\n        <a\r\n          className=\"btn btn-icon btn-light btn-hover-primary btn-sm mx-3\"\r\n          onClick={() => openEditSpecificationDialog(row.id)}\r\n        >\r\n          <span className=\"svg-icon svg-icon-md svg-icon-primary\">\r\n            <SVG\r\n              src={toAbsoluteUrl(\"/media/svg/icons/Communication/Write.svg\")}\r\n            />\r\n          </span>\r\n        </a>\r\n      </OverlayTrigger>\r\n\r\n      <> </>\r\n      <OverlayTrigger\r\n        overlay={\r\n          <Tooltip id=\"spec-delete-tooltip\">Delete specification</Tooltip>\r\n        }\r\n      >\r\n        <a\r\n          className=\"btn btn-icon btn-light btn-hover-danger btn-sm\"\r\n          onClick={() => openDeleteSpecificationDialog(row.id)}\r\n        >\r\n          <span className=\"svg-icon svg-icon-md svg-icon-danger\">\r\n            <SVG src={toAbsoluteUrl(\"/media/svg/icons/General/Trash.svg\")} />\r\n          </span>\r\n        </a>\r\n      </OverlayTrigger>\r\n    </>\r\n  );\r\n}\r\n","// React bootstrap table next =>\r\n// DOCS: https://react-bootstrap-table.github.io/react-bootstrap-table2/docs/\r\n// STORYBOOK: https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory, {\r\n  PaginationProvider,\r\n} from \"react-bootstrap-table2-paginator\";\r\nimport * as actions from \"../../../_redux/specifications/specificationsActions\";\r\nimport { ActionsColumnFormatter } from \"./column-formatters/ActionsColumnFormatter\";\r\nimport * as uiHelpers from \"./SpecificationsUIHelper\";\r\nimport { Pagination } from \"../../../../../../_metronic/_partials/controls\";\r\nimport {\r\n  getSelectRow,\r\n  getHandlerTableChange,\r\n  NoRecordsFoundMessage,\r\n  PleaseWaitMessage,\r\n  sortCaret,\r\n} from \"../../../../../../_metronic/_helpers\";\r\nimport { useSpecificationsUIContext } from \"./SpecificationsUIContext\";\r\n\r\nexport function SpecificationsTable() {\r\n  // Specs UI Context\r\n  const specsUIContext = useSpecificationsUIContext();\r\n  const specsUIProps = useMemo(() => {\r\n    return {\r\n      queryParams: specsUIContext.queryParams,\r\n      setQueryParams: specsUIContext.setQueryParams,\r\n      openEditSpecificationDialog: specsUIContext.openEditSpecificationDialog,\r\n      openDeleteSpecificationDialog:\r\n        specsUIContext.openDeleteSpecificationDialog,\r\n      ids: specsUIContext.ids,\r\n      setIds: specsUIContext.setIds,\r\n      productId: specsUIContext.productId,\r\n    };\r\n  }, [specsUIContext]);\r\n\r\n  // Specs Redux state\r\n  // Getting curret state of products list from store (Redux)\r\n  const { currentState } = useSelector(\r\n    (state) => ({ currentState: state.specifications }),\r\n    shallowEqual\r\n  );\r\n  const { totalCount, entities, listLoading } = currentState;\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    specsUIProps.setIds([]);\r\n    dispatch(\r\n      actions.fetchSpecifications(specsUIProps.queryParams,specsUIProps.productId)\r\n    );\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [specsUIProps.queryParams, dispatch, specsUIProps.productId]);\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"name\",\r\n      text: \"Specification Type\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"value\",\r\n      text: \"Value\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"action\",\r\n      text: \"Actions\",\r\n      formatter: ActionsColumnFormatter,\r\n      formatExtraData: {\r\n        openEditSpecificationDialog: specsUIProps.openEditSpecificationDialog,\r\n        openDeleteSpecificationDialog:\r\n          specsUIProps.openDeleteSpecificationDialog,\r\n      },\r\n      classes: \"text-right pr-0\",\r\n      headerClasses: \"text-right pr-3\",\r\n      style: {\r\n        minWidth: \"100px\",\r\n      },\r\n    },\r\n  ];\r\n  // Table pagination properties\r\n  const paginationOptions = {\r\n    custom: true,\r\n    totalSize: totalCount,\r\n    sizePerPageList: uiHelpers.sizePerPageList,\r\n    sizePerPage: specsUIProps.queryParams.pageSize,\r\n    page: specsUIProps.queryParams.pageNumber,\r\n  };\r\n  return (\r\n    <>\r\n      <PaginationProvider pagination={paginationFactory(paginationOptions)}>\r\n        {({ paginationProps, paginationTableProps }) => {\r\n          return (\r\n            <Pagination\r\n              isLoading={listLoading}\r\n              paginationProps={paginationProps}\r\n            >\r\n              <BootstrapTable\r\n                wrapperClasses=\"table-responsive\"\r\n                classes=\"table table-head-custom table-vertical-center overflow-hidden\"\r\n                bordered={false}\r\n                bootstrap4\r\n                remote\r\n                keyField=\"id\"\r\n                data={entities === null ? [] : entities}\r\n                columns={columns}\r\n                defaultSorted={uiHelpers.defaultSorted}\r\n                onTableChange={getHandlerTableChange(\r\n                  specsUIProps.setQueryParams\r\n                )}\r\n                selectRow={getSelectRow({\r\n                  entities,\r\n                  ids: specsUIProps.ids,\r\n                  setIds: specsUIProps.setIds,\r\n                })}\r\n                {...paginationTableProps}\r\n              >\r\n                <PleaseWaitMessage entities={entities} />\r\n                <NoRecordsFoundMessage entities={entities} />\r\n              </BootstrapTable>\r\n            </Pagination>\r\n          );\r\n        }}\r\n      </PaginationProvider>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport { LoadingDialog } from \"../../../../../../_metronic/_partials/controls\";\r\n\r\nexport function SpecificationsLoadingDialog() {\r\n  const { isLoading } = useSelector(\r\n    (state) => ({ isLoading: state.specifications.listLoading }),\r\n    shallowEqual\r\n  );\r\n  useEffect(() => {}, [isLoading]);\r\n  return <LoadingDialog isLoading={isLoading} text=\"Loading ...\" />;\r\n}\r\n","/* eslint-disable no-restricted-imports */\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { ModalProgressBar } from \"../../../../../../_metronic/_partials/controls\";\r\nimport * as actions from \"../../../_redux/specifications/specificationsActions\";\r\nimport { useSpecificationsUIContext } from \"./SpecificationsUIContext\";\r\n\r\nexport function SpecificationsDeleteDialog() {\r\n  // Specs UI Context\r\n  const specsUIContext = useSpecificationsUIContext();\r\n  const specsUIProps = useMemo(() => {\r\n    return {\r\n      productId: specsUIContext.productId,\r\n      ids: specsUIContext.ids,\r\n      show: specsUIContext.showDeleteSpecificationsDialog,\r\n      onHide: specsUIContext.closeDeleteSpecificationsDialog,\r\n      setIds: specsUIContext.setIds,\r\n      queryParams: specsUIContext.queryParams,\r\n    };\r\n  }, [specsUIContext]);\r\n\r\n  // Specs Redux state\r\n  const dispatch = useDispatch();\r\n  const { isLoading } = useSelector(\r\n    (state) => ({ isLoading: state.specifications.actionsLoading }),\r\n    shallowEqual\r\n  );\r\n\r\n  // looking for loading/dispatch\r\n  useEffect(() => {}, [isLoading, dispatch]);\r\n\r\n  // if there weren't selected specs we should close modal\r\n  useEffect(() => {\r\n    if (!specsUIProps.ids || specsUIProps.ids.length === 0) {\r\n      specsUIProps.onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [specsUIProps.ids]);\r\n\r\n  const deleteSpecifications = () => {\r\n    // server request for selected deleting specs\r\n    dispatch(actions.deleteSpecifications(specsUIProps.ids)).then(() => {\r\n      // refresh list after deletion\r\n      dispatch(\r\n        actions.fetchSpecifications(\r\n          specsUIProps.queryParams,\r\n          specsUIProps.productId\r\n        )\r\n      ).then(() => {\r\n        specsUIProps.setIds([]);\r\n        specsUIProps.onHide();\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={specsUIProps.show}\r\n      onHide={specsUIProps.onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      {isLoading && <ModalProgressBar variant=\"query\" />}\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Specifications Delete\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {!isLoading && (\r\n          <span>\r\n            Are you sure to permanently delete selected specifications?\r\n          </span>\r\n        )}\r\n        {isLoading && <span>Specifications are deleting...</span>}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={specsUIProps.onHide}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={deleteSpecifications}\r\n            className=\"btn btn-primary btn-elevate\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","/* eslint-disable no-restricted-imports */\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { ModalProgressBar } from \"../../../../../../_metronic/_partials/controls\";\r\nimport * as actions from \"../../../_redux/specifications/specificationsActions\";\r\nimport { useSpecificationsUIContext } from \"./SpecificationsUIContext\";\r\n\r\nexport function SpecificationDeleteDialog() {\r\n  // Specifications UI Context\r\n  const specsUIContext = useSpecificationsUIContext();\r\n  const specsUIProps = useMemo(() => {\r\n    return {\r\n      id: specsUIContext.selectedId,\r\n      productId: specsUIContext.productId,\r\n      show: specsUIContext.showDeleteSpecificationDialog,\r\n      onHide: specsUIContext.closeDeleteSpecificationDialog,\r\n      queryParams: specsUIContext.queryParams,\r\n      setIds: specsUIContext.setIds,\r\n    };\r\n  }, [specsUIContext]);\r\n\r\n  // Specs Redux state\r\n  const dispatch = useDispatch();\r\n  const { isLoading } = useSelector(\r\n    (state) => ({ isLoading: state.specifications.actionsLoading }),\r\n    shallowEqual\r\n  );\r\n\r\n  // if !id we should close modal\r\n  useEffect(() => {\r\n    if (!specsUIProps.id) {\r\n      specsUIProps.onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [specsUIProps.id]);\r\n\r\n  // looking for loading/dispatch\r\n  useEffect(() => {}, [isLoading, dispatch]);\r\n\r\n  const deleteSpecification = () => {\r\n    // server request for deleting spec by id\r\n    dispatch(actions.deleteSpecification(specsUIProps.id)).then(() => {\r\n      // refresh list after deletion\r\n      dispatch(\r\n        actions.fetchSpecifications(\r\n          specsUIProps.queryParams,\r\n          specsUIProps.productId\r\n        )\r\n      );\r\n      specsUIProps.setIds([]);\r\n      specsUIProps.onHide();\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={specsUIProps.show}\r\n      onHide={specsUIProps.onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      {isLoading && <ModalProgressBar variant=\"query\" />}\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Specification Delete\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {!isLoading && (\r\n          <span>Are you sure to permanently delete this specification?</span>\r\n        )}\r\n        {isLoading && <span>Specification is deleting...</span>}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={specsUIProps.onHide}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={deleteSpecification}\r\n            className=\"btn btn-primary btn-elevate\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport { useSpecificationsUIContext } from \"./SpecificationsUIContext\";\r\n\r\nconst selectedSpecifications = (entities, ids) => {\r\n  const _specifications = [];\r\n  ids.forEach((id) => {\r\n    const specification = entities.find((el) => el.id === id);\r\n    if (specification) {\r\n      _specifications.push(specification);\r\n    }\r\n  });\r\n  return _specifications;\r\n};\r\n\r\nexport function SpecificationsFetchDialog() {\r\n  // Specs UI Context\r\n  const specsUIContext = useSpecificationsUIContext();\r\n  const specsUIProps = useMemo(() => {\r\n    return {\r\n      ids: specsUIContext.ids,\r\n      show: specsUIContext.showFetchSpecificationsDialog,\r\n      onHide: specsUIContext.closeFetchSpecificationsDialog,\r\n      queryParams: specsUIContext.queryParams,\r\n    };\r\n  }, [specsUIContext]);\r\n\r\n  // Specs Redux state\r\n  const { specifications } = useSelector(\r\n    (state) => ({\r\n      specifications: selectedSpecifications(\r\n        state.specifications.entities,\r\n        specsUIProps.ids\r\n      ),\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!specsUIProps.ids || specsUIProps.ids.length === 0) {\r\n      specsUIProps.onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [specsUIProps.ids]);\r\n\r\n  return (\r\n    <Modal\r\n      show={specsUIProps.show}\r\n      onHide={specsUIProps.onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Fetch selected elements\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <div className=\"list-timeline list-timeline-skin-light padding-30\">\r\n          <div className=\"list-timeline-items\">\r\n            {specifications.map((specification) => (\r\n              <div className=\"list-timeline-item mb-3\" key={specification.id}>\r\n                <span className=\"list-timeline-text\">\r\n                  <span\r\n                    className=\"label label-lg label-light-success label-inline\"\r\n                    style={{ width: \"60px\" }}\r\n                  >\r\n                    ID: {specification.id}\r\n                  </span>{\" \"}\r\n                  <span className=\"ml-5\">\r\n                    {specification.name}: {specification.value}{\" \"}\r\n                  </span>\r\n                </span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={specsUIProps.onHide}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={specsUIProps.onHide}\r\n            className=\"btn btn-primary btn-elevate\"\r\n          >\r\n            Ok\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { useSpecificationsUIContext } from \"./SpecificationsUIContext\";\r\n\r\nexport function SpecificationsGrouping() {\r\n  // Specs UI Context\r\n  const specsUIContext = useSpecificationsUIContext();\r\n  const specsUIProps = useMemo(() => {\r\n    return {\r\n      ids: specsUIContext.ids,\r\n      openDeleteSpecificationsDialog:\r\n        specsUIContext.openDeleteSpecificationsDialog,\r\n      openFetchSpecificationsDialog:\r\n        specsUIContext.openFetchSpecificationsDialog,\r\n    };\r\n  }, [specsUIContext]);\r\n\r\n  return (\r\n    <div className=\"form\">\r\n      <div className=\"row align-items-center form-group-actions margin-top-20\">\r\n        <div className=\"col-xl-12\">\r\n          <div className=\"form-group form-group-inline\">\r\n            <div className=\"form-label form-label-no-wrap\">\r\n              <label className=\"font-bold font-danger mt-5\">\r\n                <span>Selected records count: {specsUIProps.ids.length}</span>\r\n              </label>\r\n            </div>\r\n            <div className=\"form-group-inline\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-danger font-weight-bolder font-size-sm\"\r\n                onClick={specsUIProps.openDeleteSpecificationsDialog}\r\n              >\r\n                <i className=\"fa fa-trash\"></i> Delete All\r\n              </button>\r\n              &nbsp;\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-light-primary font-weight-bolder font-size-sm\"\r\n                onClick={specsUIProps.openFetchSpecificationsDialog}\r\n              >\r\n                <i className=\"fa fa-stream\"></i> Fetch Selected\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable no-restricted-imports */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { ModalProgressBar } from \"../../../../../../../_metronic/_partials/controls\";\r\n\r\nexport function SpecificationEditDialogHeader({ id }) {\r\n  const [title, setTitle] = useState(\"\");\r\n  // Specs Redux state\r\n  const { specificationForEdit, actionsLoading } = useSelector(\r\n    (state) => ({\r\n      specificationForEdit: state.specifications.specificationForEdit,\r\n      actionsLoading: state.specifications.actionsLoading,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  useEffect(() => {\r\n    let _title = id ? \"\" : \"New Specification\";\r\n    if (specificationForEdit && id) {\r\n      _title = \"Edit Specification\";\r\n    }\r\n\r\n    setTitle(_title);\r\n    // eslint-disable-next-line\r\n  }, [specificationForEdit, actionsLoading]);\r\n  return (\r\n    <>\r\n      {actionsLoading && <ModalProgressBar variant=\"query\" />}\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">{title}</Modal.Title>\r\n      </Modal.Header>\r\n    </>\r\n  );\r\n}\r\n","// Form is based on Formik\r\n// Data validation is based on Yup\r\n// Please, be familiar with article first:\r\n// https://hackernoon.com/react-form-validation-with-formik-and-yup-8b76bda62e10\r\nimport React from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n  Select,\r\n  Input,\r\n} from \"../../../../../../../_metronic/_partials/controls\";\r\nimport { SPECIFICATIONS_DICTIONARY } from \"../SpecificationsUIHelper\";\r\n\r\n// Validation schema\r\nconst SpecificationEditSchema = Yup.object().shape({\r\n  value: Yup.string()\r\n    .min(2, \"Minimum 2 symbols\")\r\n    .max(50, \"Maximum 50 symbols\")\r\n    .required(\"Value is required\"),\r\n  specId: Yup.number().required(\"Specification type is required\"),\r\n});\r\n\r\nexport function SpecificationEditForm({\r\n  saveSpecification,\r\n  specification,\r\n  actionsLoading,\r\n  onHide,\r\n}) {\r\n  return (\r\n    <>\r\n      <Formik\r\n        enableReinitialize={true}\r\n        initialValues={specification}\r\n        validationSchema={SpecificationEditSchema}\r\n        onSubmit={(values) => {\r\n          saveSpecification(values);\r\n        }}\r\n      >\r\n        {({ handleSubmit }) => (\r\n          <>\r\n            <Modal.Body className=\"overlay overlay-block cursor-default\">\r\n              {actionsLoading && (\r\n                <div className=\"overlay-layer bg-transparent\">\r\n                  <div className=\"spinner spinner-lg spinner-success\" />\r\n                </div>\r\n              )}\r\n              <Form className=\"form form-label-right\">\r\n                <div className=\"form-group row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <Select name=\"specId\" label=\"Specification Type\">\r\n                      {SPECIFICATIONS_DICTIONARY.map((spec) => (\r\n                        <option key={spec.id} value={spec.id}>\r\n                          {spec.name}\r\n                        </option>\r\n                      ))}\r\n                    </Select>\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <Field\r\n                      name=\"value\"\r\n                      component={Input}\r\n                      placeholder=\"Value\"\r\n                      label=\"Value\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <button\r\n                type=\"button\"\r\n                onClick={onHide}\r\n                className=\"btn btn-light btn-elevate\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <> </>\r\n              <button\r\n                type=\"submit\"\r\n                onClick={() => handleSubmit()}\r\n                className=\"btn btn-primary btn-elevate\"\r\n              >\r\n                Save\r\n              </button>\r\n            </Modal.Footer>\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../../../_redux/specifications/specificationsActions\";\r\nimport { SpecificationEditDialogHeader } from \"./SpecificationEditDialogHeader\";\r\nimport { SpecificationEditForm } from \"./SpecificationEditForm\";\r\nimport { useSpecificationsUIContext } from \"../SpecificationsUIContext\";\r\n\r\nexport function SpecificationEditDialog() {\r\n  // Specifications UI Context\r\n  const specsUIContext = useSpecificationsUIContext();\r\n  const specsUIProps = useMemo(() => {\r\n    return {\r\n      id: specsUIContext.selectedId,\r\n      show: specsUIContext.showEditSpecificationDialog,\r\n      onHide: specsUIContext.closeEditSpecificationDialog,\r\n      productId: specsUIContext.productId,\r\n      queryParams: specsUIContext.queryParams,\r\n      initSpecification: specsUIContext.initSpecification,\r\n    };\r\n  }, [specsUIContext]);\r\n\r\n  // Specifications Redux state\r\n  const dispatch = useDispatch();\r\n  const { actionsLoading, specificationForEdit } = useSelector(\r\n    (state) => ({\r\n      actionsLoading: state.specifications.actionsLoading,\r\n      specificationForEdit: state.specifications.specificationForEdit,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  useEffect(() => {\r\n    // server request for getting spec by seleted id\r\n    dispatch(actions.fetchSpecification(specsUIProps.id));\r\n  }, [specsUIProps.id, dispatch]);\r\n\r\n  const saveSpecification = (specification) => {\r\n    if (!specsUIProps.id) {\r\n      dispatch(actions.createSpecification(specification)).then(() => {\r\n        dispatch(\r\n          actions.fetchSpecifications(\r\n            specsUIProps.queryParams,\r\n            specsUIProps.productId\r\n          )\r\n        ).then(() => specsUIProps.onHide());\r\n      });\r\n    } else {\r\n      dispatch(actions.updateSpecification(specification)).then(() => {\r\n        dispatch(\r\n          actions.fetchSpecifications(\r\n            specsUIProps.queryParams,\r\n            specsUIProps.productId\r\n          )\r\n        ).then(() => specsUIProps.onHide());\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={specsUIProps.show}\r\n      onHide={specsUIProps.onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      <SpecificationEditDialogHeader id={specsUIProps.id} />\r\n      <SpecificationEditForm\r\n        saveSpecification={saveSpecification}\r\n        actionsLoading={actionsLoading}\r\n        specification={specificationForEdit || specsUIProps.initSpecification}\r\n        onHide={specsUIProps.onHide}\r\n      />\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { SpecificationsFilter } from \"./SpecificationsFilter\";\r\nimport { SpecificationsTable } from \"./SpecificationsTable\";\r\nimport { SpecificationsLoadingDialog } from \"./SpecificationsLoadingDialog\";\r\nimport { SpecificationsDeleteDialog } from \"./SpecificationsDeleteDialog\";\r\nimport { SpecificationDeleteDialog } from \"./SpecificationDeleteDialog\";\r\nimport { SpecificationsFetchDialog } from \"./SpecificationsFetchDialog\";\r\nimport { SpecificationsGrouping } from \"./SpecificationsGrouping\";\r\nimport { SpecificationEditDialog } from \"./specification-edit-dialog/SpecificationEditDialog\";\r\nimport { useSpecificationsUIContext } from \"./SpecificationsUIContext\";\r\n\r\nexport function Specifications() {\r\n  // Specifications UI Context\r\n  const specsUIContext = useSpecificationsUIContext();\r\n  const specsUIProps = useMemo(() => {\r\n    return { ids: specsUIContext.ids };\r\n  }, [specsUIContext]);\r\n\r\n  return (\r\n    <>\r\n      <SpecificationsLoadingDialog />\r\n      <SpecificationEditDialog />\r\n      <SpecificationDeleteDialog />\r\n      <SpecificationsDeleteDialog />\r\n      <SpecificationsFetchDialog />\r\n      <div className=\"form margin-b-30\">\r\n        <SpecificationsFilter />\r\n        {specsUIProps.ids.length > 0 && (\r\n          <>\r\n            <SpecificationsGrouping />\r\n            <br />\r\n          </>\r\n        )}\r\n      </div>\r\n      <SpecificationsTable />\r\n    </>\r\n  );\r\n}\r\n","export const defaultSorted = [{ dataField: \"id\", order: \"asc\" }];\r\nexport const sizePerPageList = [\r\n  { text: \"1\", value: 1 },\r\n  { text: \"3\", value: 3 },\r\n  { text: \"5\", value: 5 }\r\n];\r\nexport const initialFilter = {\r\n  filter: {\r\n    text: \"\"\r\n  },\r\n  sortOrder: \"asc\", // asc||desc\r\n  sortField: \"id\",\r\n  pageNumber: 1,\r\n  pageSize: 5\r\n};\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { useEffect, useContext, createContext, useState, useCallback } from \"react\";\r\nimport {isEqual, isFunction} from \"lodash\";\r\nimport {initialFilter} from \"./RemarksUIHelper\";\r\n\r\nconst RemarksUIContext = createContext();\r\n\r\nexport function useRemarksUIContext() {\r\n  return useContext(RemarksUIContext);\r\n}\r\n\r\nexport const RemarksUIConsumer = RemarksUIContext.Consumer;\r\n\r\nexport function RemarksUIProvider({ currentProductId, children }) {\r\n  const [productId, setProductId] = useState(currentProductId);\r\n  const [queryParams, setQueryParamsBase] = useState(initialFilter);\r\n  const [ids, setIds] = useState([]);\r\n  const setQueryParams = useCallback(nextQueryParams => {\r\n    setQueryParamsBase(prevQueryParams => {\r\n      if (isFunction(nextQueryParams)) {\r\n        nextQueryParams = nextQueryParams(prevQueryParams);\r\n      }\r\n\r\n      if (isEqual(prevQueryParams, nextQueryParams)) {\r\n        return prevQueryParams;\r\n      }\r\n\r\n      return nextQueryParams;\r\n    });\r\n  }, []);\r\n  const [selectedId, setSelectedId] = useState(null);\r\n  const [showEditRemarkDialog, setShowEditRemarkDialog] = useState(false);\r\n  const initRemark = {\r\n    id: undefined,\r\n    text: \"\",\r\n    type: 0,\r\n    dueDate: \"01/07/2020\",\r\n    carId: productId\r\n  };\r\n  useEffect(()=> {\r\n    initRemark.productId = currentProductId;\r\n    initRemark.carId = currentProductId;\r\n    setProductId(currentProductId);\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currentProductId]);\r\n  const openNewRemarkDialog = () => {\r\n    setSelectedId(undefined);\r\n    setShowEditRemarkDialog(true);\r\n  };\r\n  const openEditRemarkDialog = id => {\r\n    setSelectedId(id);\r\n    setShowEditRemarkDialog(true);\r\n  };\r\n  const closeEditRemarkDialog = () => {\r\n    setSelectedId(undefined);\r\n    setShowEditRemarkDialog(false);\r\n  };\r\n  const [showDeleteRemarkDialog, setShowDeleteRemarkDialog] = useState(false);\r\n  const openDeleteRemarkDialog = id => {\r\n    setSelectedId(id);\r\n    setShowDeleteRemarkDialog(true);\r\n  };\r\n  const closeDeleteRemarkDialog = () => {\r\n    setSelectedId(undefined);\r\n    setShowDeleteRemarkDialog(false);\r\n  };\r\n\r\n  const [showDeleteRemarksDialog, setShowDeleteRemarksDialog] = useState(false);\r\n  const openDeleteRemarksDialog = () => {\r\n    setShowDeleteRemarksDialog(true);\r\n  };\r\n  const closeDeleteRemarksDialog = () => {\r\n    setShowDeleteRemarksDialog(false);\r\n  };\r\n\r\n  const [showFetchRemarksDialog, setShowFetchRemarksDialog] = useState(false);\r\n  const openFetchRemarksDialog = () => {\r\n    setShowFetchRemarksDialog(true);\r\n  };\r\n  const closeFetchRemarksDialog = () => {\r\n    setShowFetchRemarksDialog(false);\r\n  };\r\n\r\n  const value = {\r\n    ids,\r\n    setIds,\r\n    productId,\r\n    setProductId,\r\n    queryParams,\r\n    setQueryParams,\r\n    initRemark,\r\n    selectedId,\r\n    showEditRemarkDialog,\r\n    openNewRemarkDialog,    \r\n    openEditRemarkDialog,\r\n    closeEditRemarkDialog,\r\n    showDeleteRemarkDialog,\r\n    openDeleteRemarkDialog,\r\n    closeDeleteRemarkDialog,\r\n    showDeleteRemarksDialog,\r\n    openDeleteRemarksDialog,\r\n    closeDeleteRemarksDialog,\r\n    openFetchRemarksDialog,\r\n    closeFetchRemarksDialog,\r\n    showFetchRemarksDialog\r\n  };\r\n  \r\n  return (\r\n    <RemarksUIContext.Provider value={value}>\r\n      {children}\r\n    </RemarksUIContext.Provider>\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport { isEqual } from \"lodash\";\r\nimport { useRemarksUIContext } from \"./RemarksUIContext\";\r\n\r\nconst prepareFilter = (queryParams, values) => {\r\n  const { searchText } = values;\r\n  const newQueryParams = { ...queryParams };\r\n  const filter = {};\r\n  filter.text = searchText;\r\n  newQueryParams.filter = filter;\r\n  return newQueryParams;\r\n};\r\n\r\nexport function RemarksFilter() {\r\n  // Remarks UI Context\r\n  const remarksUIContext = useRemarksUIContext();\r\n  const remarksUIProps = useMemo(() => {\r\n    return {\r\n      setQueryParams: remarksUIContext.setQueryParams,\r\n      openNewRemarkDialog: remarksUIContext.openNewRemarkDialog,\r\n      queryParams: remarksUIContext.queryParams,\r\n    };\r\n  }, [remarksUIContext]);\r\n\r\n  const applyFilter = (values) => {\r\n    const newQueryParams = prepareFilter(remarksUIProps.queryParams, values);\r\n    if (!isEqual(newQueryParams, remarksUIProps.queryParams)) {\r\n      newQueryParams.pageNumber = 1;\r\n      remarksUIProps.setQueryParams(newQueryParams);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"form-filtration\">\r\n        <div className=\"row align-items-center\">\r\n          <div className=\"col-md-2 margin-bottom-10-mobile\">\r\n            <Formik\r\n              initialValues={{\r\n                searchText: \"\",\r\n              }}\r\n              onSubmit={(values) => {\r\n                applyFilter(values);\r\n              }}\r\n            >\r\n              {({\r\n                values,\r\n                handleSubmit,\r\n                handleBlur,\r\n                handleChange,\r\n                setFieldValue,\r\n              }) => (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"searchText\"\r\n                      placeholder=\"Search\"\r\n                      onBlur={handleBlur}\r\n                      value={values.searchText}\r\n                      onChange={(e) => {\r\n                        setFieldValue(\"searchText\", e.target.value);\r\n                        handleSubmit();\r\n                      }}\r\n                    />\r\n                    <small className=\"form-text text-muted\">\r\n                      <b>Search</b> in all fields\r\n                    </small>\r\n                  </div>\r\n                </form>\r\n              )}\r\n            </Formik>\r\n          </div>\r\n          <div className=\"col-md-8 margin-bottom-10-mobile\"></div>\r\n          <div className=\"col-md-2 text-right margin-bottom-10-mobile\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary\"\r\n              onClick={() => remarksUIProps.openNewRemarkDialog()}\r\n            >\r\n              Create new remark\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import * as requestFromServer from \"./remarksCrud\";\r\nimport {remarksSlice, callTypes} from \"./remarksSlice\";\r\n\r\nconst {actions} = remarksSlice;\r\n\r\nexport const fetchRemarks = (queryParams, productId) => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.list }));\r\n  if (!productId) {\r\n    return dispatch(actions.remarksFetched({ totalCount: 0, entities: null }));\r\n  }\r\n\r\n  return requestFromServer\r\n    .findRemarks(queryParams, productId)\r\n    .then(response => {\r\n      const { totalCount, entities } = response.data;\r\n      dispatch(actions.remarksFetched({ totalCount, entities }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find remarks\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.list }));\r\n    });\r\n};\r\n\r\nexport const fetchRemark = id => dispatch => {\r\n  if (!id) {\r\n    return dispatch(actions.remarkFetched({ remarkForEdit: undefined }));\r\n  }\r\n\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .getRemarkById(id)\r\n    .then(response => {\r\n      const remark = response.data;\r\n      dispatch(actions.remarkFetched({ remarkForEdit: remark }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find remark\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteRemark = id => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteRemark(id)\r\n    .then(response => {\r\n      dispatch(actions.remarkDeleted({ id }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete remark\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const createRemark = remarkForCreation => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .createRemark(remarkForCreation)\r\n    .then(response => {\r\n      const { remark } = response.data;\r\n      dispatch(actions.remarkCreated({ remark }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't create remark\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const updateRemark = remark => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .updateRemark(remark)\r\n    .then(() => {\r\n      dispatch(actions.remarkUpdated({ remark }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't update remark\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteRemarks = ids => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteRemarks(ids)\r\n    .then(() => {\r\n      console.log(\"delete return\");\r\n      dispatch(actions.remarksDeleted({ ids }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete remarks\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const REMARKS_URL = \"api/remarks\";\r\n\r\n// CREATE =>  POST: add a new remark to the server\r\nexport function createRemark(remark) {\r\n  return axios.post(REMARKS_URL, { remark });\r\n}\r\n\r\n// READ\r\n// Server should return filtered remarks by productId\r\nexport function getAllProductRemarksByProductId(productId) {\r\n  return axios.get(`${REMARKS_URL}?productId=${productId}`);\r\n}\r\n\r\nexport function getRemarkById(remarkId) {\r\n  return axios.get(`${REMARKS_URL}/${remarkId}`);\r\n}\r\n\r\n// Server should return sorted/filtered remarks and merge with items from state\r\n// TODO: Change your URL to REAL API, right now URL is 'api/remarksfind/{productId}'. Should be 'api/remarks/find/{productId}'!!!\r\nexport function findRemarks(queryParams, productId) {\r\n  return axios.post(`${REMARKS_URL}find/${productId}`, { queryParams });\r\n}\r\n\r\n// UPDATE => PUT: update the remark\r\nexport function updateRemark(remark) {\r\n  return axios.put(`${REMARKS_URL}/${remark.id}`, { remark });\r\n}\r\n\r\n// DELETE => delete the remark\r\nexport function deleteRemark(remarkId) {\r\n  return axios.delete(`${REMARKS_URL}/${remarkId}`);\r\n}\r\n\r\n// DELETE Remarks by ids\r\nexport function deleteRemarks(ids) {\r\n  return axios.post(`${REMARKS_URL}/deleteRemarks`, { ids });\r\n}\r\n","/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport { toAbsoluteUrl } from \"../../../../../../../_metronic/_helpers\";\r\n\r\nexport const ActionsColumnFormatter = (\r\n  cellContent,\r\n  row,\r\n  rowIndex,\r\n  { openEditRemarkDialog, openDeleteRemarkDialog }\r\n) => (\r\n  <>\r\n    <OverlayTrigger\r\n      overlay={<Tooltip id=\"customers-edit-tooltip\">Edit remark</Tooltip>}\r\n    >\r\n      <a\r\n        className=\"btn btn-icon btn-light btn-hover-primary btn-sm mx-3\"\r\n        onClick={() => openEditRemarkDialog(row.id)}\r\n      >\r\n        <span className=\"svg-icon svg-icon-md svg-icon-primary\">\r\n          <SVG\r\n            src={toAbsoluteUrl(\"/media/svg/icons/Communication/Write.svg\")}\r\n          />\r\n        </span>\r\n      </a>\r\n    </OverlayTrigger>\r\n\r\n    <> </>\r\n    <OverlayTrigger\r\n      overlay={<Tooltip id=\"customers-delete-tooltip\">Delete remark</Tooltip>}\r\n    >\r\n      <a\r\n        className=\"btn btn-icon btn-light btn-hover-danger btn-sm\"\r\n        onClick={() => openDeleteRemarkDialog(row.id)}\r\n      >\r\n        <span className=\"svg-icon svg-icon-md svg-icon-danger\">\r\n          <SVG src={toAbsoluteUrl(\"/media/svg/icons/General/Trash.svg\")} />\r\n        </span>\r\n      </a>\r\n    </OverlayTrigger>\r\n  </>\r\n);\r\n","// React bootstrap table next =>\r\n// DOCS: https://react-bootstrap-table.github.io/react-bootstrap-table2/docs/\r\n// STORYBOOK: https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory, {\r\n  PaginationProvider,\r\n} from \"react-bootstrap-table2-paginator\";\r\nimport * as actions from \"../../../_redux/remarks/remarksActions\";\r\nimport { ActionsColumnFormatter } from \"./column-formatters/ActionsColumnFormatter\";\r\nimport * as uiHelpers from \"./RemarksUIHelper\";\r\nimport { Pagination } from \"../../../../../../_metronic/_partials/controls\";\r\nimport {\r\n  getSelectRow,\r\n  getHandlerTableChange,\r\n  NoRecordsFoundMessage,\r\n  PleaseWaitMessage,\r\n  sortCaret,\r\n} from \"../../../../../../_metronic/_helpers\";\r\nimport { useRemarksUIContext } from \"./RemarksUIContext\";\r\n\r\nexport function RemarksTable() {\r\n  // Remarks UI Context\r\n  const remarksUIContext = useRemarksUIContext();\r\n  const remarksUIProps = useMemo(() => {\r\n    return {\r\n      ids: remarksUIContext.ids,\r\n      setIds: remarksUIContext.setIds,\r\n      queryParams: remarksUIContext.queryParams,\r\n      setQueryParams: remarksUIContext.setQueryParams,\r\n      productId: remarksUIContext.productId,\r\n      openEditRemarkDialog: remarksUIContext.openEditRemarkDialog,\r\n      openDeleteRemarkDialog: remarksUIContext.openDeleteRemarkDialog,\r\n    };\r\n  }, [remarksUIContext]);\r\n\r\n  // Getting curret state of products list from store (Redux)\r\n  const { currentState } = useSelector(\r\n    (state) => ({ currentState: state.remarks }),\r\n    shallowEqual\r\n  );\r\n  const { totalCount, entities, listLoading } = currentState;\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    remarksUIProps.setIds([]);\r\n    dispatch(\r\n      actions.fetchRemarks(remarksUIProps.queryParams, remarksUIProps.productId)\r\n    );\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [remarksUIProps.queryParams, dispatch, remarksUIProps.productId]);\r\n  const columns = [\r\n    {\r\n      dataField: \"id\",\r\n      text: \"ID\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"text\",\r\n      text: \"Text\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"dueDate\",\r\n      text: \"Due date\",\r\n      sort: false,\r\n    },\r\n    {\r\n      dataField: \"action\",\r\n      text: \"Actions\",\r\n      formatter: ActionsColumnFormatter,\r\n      formatExtraData: {\r\n        openEditRemarkDialog: remarksUIProps.openEditRemarkDialog,\r\n        openDeleteRemarkDialog: remarksUIProps.openDeleteRemarkDialog,\r\n      },\r\n      classes: \"text-right pr-0\",\r\n      headerClasses: \"text-right pr-3\",\r\n      style: {\r\n        minWidth: \"100px\",\r\n      },\r\n    },\r\n  ];\r\n\r\n  const paginationOptions = {\r\n    custom: true,\r\n    totalSize: totalCount,\r\n    sizePerPageList: uiHelpers.sizePerPageList,\r\n    sizePerPage: remarksUIProps.queryParams.pageSize,\r\n    page: remarksUIProps.queryParams.pageNumber,\r\n  };\r\n  return (\r\n    <>\r\n      <PaginationProvider pagination={paginationFactory(paginationOptions)}>\r\n        {({ paginationProps, paginationTableProps }) => {\r\n          return (\r\n            <Pagination\r\n              isLoading={listLoading}\r\n              paginationProps={paginationProps}\r\n            >\r\n              <BootstrapTable\r\n                wrapperClasses=\"table-responsive\"\r\n                classes=\"table table-head-custom table-vertical-center overflow-hidden\"\r\n                bordered={false}\r\n                bootstrap4\r\n                remote\r\n                keyField=\"id\"\r\n                data={entities === null ? [] : entities}\r\n                columns={columns}\r\n                defaultSorted={uiHelpers.defaultSorted}\r\n                onTableChange={getHandlerTableChange(\r\n                  remarksUIProps.setQueryParams\r\n                )}\r\n                selectRow={getSelectRow({\r\n                  entities,\r\n                  ids: remarksUIProps.ids,\r\n                  setIds: remarksUIProps.setIds,\r\n                })}\r\n                {...paginationTableProps}\r\n              >\r\n                <PleaseWaitMessage entities={entities} />\r\n                <NoRecordsFoundMessage entities={entities} />\r\n              </BootstrapTable>\r\n            </Pagination>\r\n          );\r\n        }}\r\n      </PaginationProvider>\r\n    </>\r\n  );\r\n}\r\n","import React, {useEffect} from \"react\";\r\nimport {shallowEqual, useSelector} from \"react-redux\";\r\nimport {LoadingDialog} from \"../../../../../../_metronic/_partials/controls\";\r\n\r\nexport function RemarksLoadingDialog() {\r\n  const { isLoading } = useSelector(\r\n    state => ({ isLoading: state.remarks.listLoading }),\r\n    shallowEqual\r\n  );\r\n  useEffect(() => {}, [isLoading]);\r\n  return <LoadingDialog isLoading={isLoading} text=\"Loading ...\" />;\r\n}\r\n","/* eslint-disable no-restricted-imports */\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { ModalProgressBar } from \"../../../../../../_metronic/_partials/controls\";\r\nimport * as actions from \"../../../_redux/remarks/remarksActions\";\r\nimport { useRemarksUIContext } from \"./RemarksUIContext\";\r\n\r\nexport function RemarksDeleteDialog() {\r\n  // Remarks UI Context\r\n  const remarksUIContext = useRemarksUIContext();\r\n  const remarksUIProps = useMemo(() => {\r\n    return {\r\n      ids: remarksUIContext.ids,\r\n      setIds: remarksUIContext.setIds,\r\n      productId: remarksUIContext.productId,\r\n      queryParams: remarksUIContext.queryParams,\r\n      showDeleteRemarksDialog: remarksUIContext.showDeleteRemarksDialog,\r\n      closeDeleteRemarksDialog: remarksUIContext.closeDeleteRemarksDialog,\r\n    };\r\n  }, [remarksUIContext]);\r\n\r\n  const dispatch = useDispatch();\r\n  const { isLoading } = useSelector(\r\n    (state) => ({ isLoading: state.remarks.actionsLoading }),\r\n    shallowEqual\r\n  );\r\n\r\n  useEffect(() => {}, [isLoading, dispatch]);\r\n  useEffect(() => {\r\n    if (!remarksUIProps.ids || remarksUIProps.ids.length === 0) {\r\n      remarksUIProps.closeDeleteRemarksDialog();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [remarksUIProps.ids]);\r\n\r\n  const deleteRemarks = () => {\r\n    dispatch(actions.deleteRemarks(remarksUIProps.ids)).then(() => {\r\n      dispatch(\r\n        actions.fetchRemarks(\r\n          remarksUIProps.queryParams,\r\n          remarksUIProps.productId\r\n        )\r\n      ).then(() => {\r\n        remarksUIProps.setIds([]);\r\n        remarksUIProps.closeDeleteRemarksDialog();\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={remarksUIProps.showDeleteRemarksDialog}\r\n      onHide={remarksUIProps.closeDeleteRemarksDialog}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      {isLoading && <ModalProgressBar variant=\"query\" />}\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Remarks Delete\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {!isLoading && (\r\n          <span>Are you sure to permanently delete selected remarks?</span>\r\n        )}\r\n        {isLoading && <span>Remarks are deleting...</span>}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={remarksUIProps.closeDeleteRemarksDialog}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={deleteRemarks}\r\n            className=\"btn btn-primary btn-elevate\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","/* eslint-disable no-restricted-imports */\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { ModalProgressBar } from \"../../../../../../_metronic/_partials/controls\";\r\nimport * as actions from \"../../../_redux/remarks/remarksActions\";\r\nimport { useRemarksUIContext } from \"./RemarksUIContext\";\r\n\r\nexport function RemarkDeleteDialog() {\r\n  // Remarks UI Context\r\n  const remarksUIContext = useRemarksUIContext();\r\n  const remarksUIProps = useMemo(() => {\r\n    return {\r\n      id: remarksUIContext.selectedId,\r\n      setIds: remarksUIContext.setIds,\r\n      productId: remarksUIContext.productId,\r\n      queryParams: remarksUIContext.queryParams,\r\n      showDeleteRemarkDialog: remarksUIContext.showDeleteRemarkDialog,\r\n      closeDeleteRemarkDialog: remarksUIContext.closeDeleteRemarkDialog,\r\n    };\r\n  }, [remarksUIContext]);\r\n\r\n  // Remarks Redux state\r\n  const dispatch = useDispatch();\r\n  const { isLoading } = useSelector(\r\n    (state) => ({ isLoading: state.remarks.actionsLoading }),\r\n    shallowEqual\r\n  );\r\n\r\n  // if !id we should close modal\r\n  useEffect(() => {\r\n    if (!remarksUIProps.id) {\r\n      remarksUIProps.closeDeleteRemarkDialog();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [remarksUIProps.id]);\r\n\r\n  // looking for loading/dispatch\r\n  useEffect(() => {}, [isLoading, dispatch]);\r\n\r\n  const deleteRemark = () => {\r\n    // server request for deleting remark by id\r\n    dispatch(actions.deleteRemark(remarksUIProps.id)).then(() => {\r\n      // refresh list after deletion\r\n      dispatch(\r\n        actions.fetchRemarks(\r\n          remarksUIProps.queryParams,\r\n          remarksUIProps.productId\r\n        )\r\n      );\r\n      // clear selections list\r\n      remarksUIProps.setIds([]);\r\n      // closing delete modal\r\n      remarksUIProps.closeDeleteRemarkDialog();\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={remarksUIProps.showDeleteRemarkDialog}\r\n      onHide={remarksUIProps.closeDeleteRemarkDialog}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      {isLoading && <ModalProgressBar variant=\"query\" />}\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Remark Delete\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {!isLoading && (\r\n          <span>Are you sure to permanently delete this remark?</span>\r\n        )}\r\n        {isLoading && <span>Remark is deleting...</span>}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={remarksUIProps.closeDeleteRemarkDialog}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={deleteRemark}\r\n            className=\"btn btn-primary btn-elevate\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport { useRemarksUIContext } from \"./RemarksUIContext\";\r\n\r\nconst selectedRemarks = (entities, ids) => {\r\n  const _remarks = [];\r\n  ids.forEach((id) => {\r\n    const remark = entities.find((el) => el.id === id);\r\n    if (remark) {\r\n      _remarks.push(remark);\r\n    }\r\n  });\r\n  return _remarks;\r\n};\r\n\r\nexport function RemarksFetchDialog() {\r\n  // Remarks UI Context\r\n  const remarksUIContext = useRemarksUIContext();\r\n  const remarksUIProps = useMemo(() => {\r\n    return {\r\n      ids: remarksUIContext.ids,\r\n      queryParams: remarksUIContext.queryParams,\r\n      showFetchRemarksDialog: remarksUIContext.showFetchRemarksDialog,\r\n      closeFetchRemarksDialog: remarksUIContext.closeFetchRemarksDialog,\r\n    };\r\n  }, [remarksUIContext]);\r\n\r\n  const { remarks } = useSelector(\r\n    (state) => ({\r\n      remarks: selectedRemarks(state.remarks.entities, remarksUIProps.ids),\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!remarksUIProps.ids || remarksUIProps.ids.length === 0) {\r\n      remarksUIProps.closeFetchRemarksDialog();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [remarksUIProps.ids]);\r\n\r\n  return (\r\n    <Modal\r\n      show={remarksUIProps.showFetchRemarksDialog}\r\n      onHide={remarksUIProps.closeFetchRemarksDialog}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Fetch selected elements\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <div className=\"list-timeline list-timeline-skin-light padding-30\">\r\n          <div className=\"list-timeline-items\">\r\n            {remarks.map((remark) => (\r\n              <div className=\"list-timeline-item mb-3\" key={remark.id}>\r\n                <span className=\"list-timeline-text\">\r\n                  <span\r\n                    className=\"label label-lg label-light-success label-inline\"\r\n                    style={{ width: \"60px\" }}\r\n                  >\r\n                    ID: {remark.id}\r\n                  </span>{\" \"}\r\n                  <span className=\"ml-5\">{remark.text} </span>\r\n                </span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={remarksUIProps.closeFetchRemarksDialog}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={remarksUIProps.closeFetchRemarksDialog}\r\n            className=\"btn btn-primary btn-elevate\"\r\n          >\r\n            Ok\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { useRemarksUIContext } from \"./RemarksUIContext\";\r\n\r\nexport function RemarksGrouping() {\r\n  // Remarks UI Context\r\n  const remarksUIContext = useRemarksUIContext();\r\n  const remarksUIProps = useMemo(() => {\r\n    return {\r\n      ids: remarksUIContext.ids,\r\n      openDeleteRemarksDialog: remarksUIContext.openDeleteRemarksDialog,\r\n      openFetchRemarksDialog: remarksUIContext.openFetchRemarksDialog,\r\n    };\r\n  }, [remarksUIContext]);\r\n\r\n  return (\r\n    <div className=\"form\">\r\n      <div className=\"row align-items-center form-group-actions margin-top-20\">\r\n        <div className=\"col-xl-12\">\r\n          <div className=\"form-group form-group-inline\">\r\n            <div className=\"form-label form-label-no-wrap\">\r\n              <label className=\"font-bold font-danger mt-5\">\r\n                <span>Selected records count: {remarksUIProps.ids.length}</span>\r\n              </label>\r\n            </div>\r\n            <div className=\"form-group-inline\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-danger font-weight-bolder font-size-sm\"\r\n                onClick={remarksUIProps.openDeleteRemarksDialog}\r\n              >\r\n                <i className=\"fa fa-trash\"></i> Delete All\r\n              </button>\r\n              &nbsp;\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-light-primary font-weight-bolder font-size-sm\"\r\n                onClick={remarksUIProps.openFetchRemarksDialog}\r\n              >\r\n                <i className=\"fa fa-stream\"></i> Fetch Selected\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable no-restricted-imports */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { ModalProgressBar } from \"../../../../../../../_metronic/_partials/controls\";\r\n\r\nexport function RemarkEditDialogHeader({ id }) {\r\n  const [title, setTitle] = useState(\"\");\r\n  // Remarks Redux state\r\n  const { remarkForEdit, actionsLoading } = useSelector(\r\n    (state) => ({\r\n      remarkForEdit: state.remarks.remarkForEdit,\r\n      actionsLoading: state.remarks.actionsLoading,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  useEffect(() => {\r\n    let _title = id ? \"\" : \"New Remark\";\r\n    if (remarkForEdit && id) {\r\n      _title = \"Edit remark\";\r\n    }\r\n\r\n    setTitle(_title);\r\n    // eslint-disable-next-line\r\n  }, [remarkForEdit, actionsLoading]);\r\n\r\n  return (\r\n    <>\r\n      {actionsLoading && <ModalProgressBar variant=\"query\" />}\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">{title}</Modal.Title>\r\n      </Modal.Header>\r\n    </>\r\n  );\r\n}\r\n","// Form is based on Formik\r\n// Data validation is based on Yup\r\n// Please, be familiar with article first:\r\n// https://hackernoon.com/react-form-validation-with-formik-and-yup-8b76bda62e10\r\nimport React from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n  Input,\r\n  Select,\r\n  DatePickerField,\r\n} from \"../../../../../../../_metronic/_partials/controls\";\r\n\r\n// Validation schema\r\nconst RemarkEditSchema = Yup.object().shape({\r\n  text: Yup.string()\r\n    .min(2, \"Minimum 2 symbols\")\r\n    .max(50, \"Maximum 50 symbols\")\r\n    .required(\"Text is required\"),\r\n  type: Yup.number().required(\"Type is required\"),\r\n  dueDate: Yup.mixed()\r\n    .nullable(false)\r\n    .required(\"Due date is required\"),\r\n});\r\n\r\nexport function RemarkEditForm({ saveRemark, remark, actionsLoading, onHide }) {\r\n  return (\r\n    <>\r\n      <Formik\r\n        enableReinitialize={true}\r\n        initialValues={remark}\r\n        validationSchema={RemarkEditSchema}\r\n        onSubmit={(values) => saveRemark(values)}\r\n      >\r\n        {({ handleSubmit }) => (\r\n          <>\r\n            <Modal.Body className=\"overlay overlay-block cursor-default\">\r\n              {actionsLoading && (\r\n                <div className=\"overlay-layer bg-transparent\">\r\n                  <div className=\"spinner spinner-lg spinner-success\" />\r\n                </div>\r\n              )}\r\n              <Form className=\"form form-label-right\">\r\n                <div className=\"form-group row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <Field\r\n                      name=\"text\"\r\n                      component={Input}\r\n                      placeholder=\"Text\"\r\n                      label=\"Text\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <DatePickerField name=\"dueDate\" label=\"Due date\" />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <Select name=\"type\" label=\"Type\">\r\n                      <option value=\"0\">Info</option>\r\n                      <option value=\"1\">Note</option>\r\n                      <option value=\"2\">Reminder</option>\r\n                    </Select>\r\n                  </div>\r\n                </div>\r\n              </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <button\r\n                type=\"button\"\r\n                onClick={onHide}\r\n                className=\"btn btn-light btn-elevate\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <> </>\r\n              <button\r\n                type=\"submit\"\r\n                onClick={() => handleSubmit()}\r\n                className=\"btn btn-primary btn-elevate\"\r\n              >\r\n                Save\r\n              </button>\r\n            </Modal.Footer>\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../../../_redux/remarks/remarksActions\";\r\nimport { RemarkEditDialogHeader } from \"./RemarkEditDialogHeader\";\r\nimport { RemarkEditForm } from \"./RemarkEditForm\";\r\nimport { useRemarksUIContext } from \"../RemarksUIContext\";\r\n\r\nfunction getFormattedDate(date) {\r\n  if (typeof date === \"string\") {\r\n    return date;\r\n  }\r\n\r\n  var year = date.getFullYear();\r\n\r\n  var month = (1 + date.getMonth()).toString();\r\n  month = month.length > 1 ? month : \"0\" + month;\r\n\r\n  var day = date.getDate().toString();\r\n  day = day.length > 1 ? day : \"0\" + day;\r\n\r\n  return month + \"/\" + day + \"/\" + year;\r\n}\r\n\r\nexport function RemarkEditDialog() {\r\n  // Remarks UI Context\r\n  const remarksUIContext = useRemarksUIContext();\r\n  const remarksUIProps = useMemo(() => {\r\n    return {\r\n      id: remarksUIContext.selectedId,\r\n      setIds: remarksUIContext.setIds,\r\n      productId: remarksUIContext.productId,\r\n      queryParams: remarksUIContext.queryParams,\r\n      showEditRemarkDialog: remarksUIContext.showEditRemarkDialog,\r\n      closeEditRemarkDialog: remarksUIContext.closeEditRemarkDialog,\r\n      initRemark: remarksUIContext.initRemark,\r\n    };\r\n  }, [remarksUIContext]);\r\n\r\n  // Remarks Redux state\r\n  const dispatch = useDispatch();\r\n  const { actionsLoading, remarkForEdit } = useSelector(\r\n    (state) => ({\r\n      actionsLoading: state.remarks.actionsLoading,\r\n      remarkForEdit: state.remarks.remarkForEdit,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  useEffect(() => {\r\n    // server request for getting remark by seleted id\r\n    dispatch(actions.fetchRemark(remarksUIProps.id));\r\n  }, [remarksUIProps.id, dispatch]);\r\n\r\n  const saveRemark = (remark) => {\r\n    remark.dueDate = getFormattedDate(remark.dueDate);\r\n    if (!remarksUIProps.id) {\r\n      // server request for creating remarks\r\n      dispatch(actions.createRemark(remark)).then(() => {\r\n        // refresh list after deletion\r\n        dispatch(\r\n          actions.fetchRemarks(\r\n            remarksUIProps.queryParams,\r\n            remarksUIProps.productId\r\n          )\r\n        ).then(() => {\r\n          // clear selections list\r\n          remarksUIProps.setIds([]);\r\n          // closing edit modal\r\n          remarksUIProps.closeEditRemarkDialog();\r\n        });\r\n      });\r\n    } else {\r\n      // server request for updating remarks\r\n      dispatch(actions.updateRemark(remark)).then(() => {\r\n        // refresh list after deletion\r\n        dispatch(\r\n          // refresh list after deletion\r\n          actions.fetchRemarks(\r\n            remarksUIProps.queryParams,\r\n            remarksUIProps.productId\r\n          )\r\n        ).then(() => {\r\n          // clear selections list\r\n          remarksUIProps.setIds([]);\r\n          // closing edit modal\r\n          remarksUIProps.closeEditRemarkDialog();\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={remarksUIProps.showEditRemarkDialog}\r\n      onHide={remarksUIProps.closeEditRemarkDialog}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      <RemarkEditDialogHeader id={remarksUIProps.id} />\r\n      <RemarkEditForm\r\n        saveRemark={saveRemark}\r\n        actionsLoading={actionsLoading}\r\n        remark={remarkForEdit || remarksUIProps.initRemark}\r\n        onHide={remarksUIProps.closeEditRemarkDialog}\r\n      />\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { RemarksFilter } from \"./RemarksFilter\";\r\nimport { RemarksTable } from \"./RemarksTable\";\r\nimport { RemarksLoadingDialog } from \"./RemarksLoadingDialog\";\r\nimport { RemarksDeleteDialog } from \"./RemarksDeleteDialog\";\r\nimport { RemarkDeleteDialog } from \"./RemarkDeleteDialog\";\r\nimport { RemarksFetchDialog } from \"./RemarksFetchDialog\";\r\nimport { RemarksGrouping } from \"./RemarksGrouping\";\r\nimport { RemarkEditDialog } from \"./remark-edit-dialog/RemarkEditDialog\";\r\nimport { useRemarksUIContext } from \"./RemarksUIContext\";\r\n\r\nexport function Remarks() {\r\n  // Remarks UI Context\r\n  const remarksUIContext = useRemarksUIContext();\r\n  const remarksUIProps = useMemo(() => {\r\n    return { ids: remarksUIContext.ids };\r\n  }, [remarksUIContext]);\r\n\r\n  return (\r\n    <>\r\n      <RemarksLoadingDialog />\r\n      <RemarkEditDialog />\r\n      <RemarkDeleteDialog />\r\n      <RemarksDeleteDialog />\r\n      <RemarksFetchDialog />\r\n      <div className=\"form margin-b-30\">\r\n        <RemarksFilter />\r\n        {remarksUIProps.ids.length > 0 && <RemarksGrouping />}\r\n      </div>\r\n      <RemarksTable />\r\n    </>\r\n  );\r\n}\r\n","/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid,jsx-a11y/role-supports-aria-props */\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../../_redux/products/productsActions\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../../../../_metronic/_partials/controls\";\r\nimport { ProductEditForm } from \"./ProductEditForm\";\r\nimport { Specifications } from \"../product-specifications/Specifications\";\r\nimport { SpecificationsUIProvider } from \"../product-specifications/SpecificationsUIContext\";\r\nimport { useSubheader } from \"../../../../../../_metronic/layout\";\r\nimport { ModalProgressBar } from \"../../../../../../_metronic/_partials/controls\";\r\nimport { RemarksUIProvider } from \"../product-remarks/RemarksUIContext\";\r\nimport { Remarks } from \"../product-remarks/Remarks\";\r\n\r\nconst initProduct = {\r\n  id: undefined,\r\n  model: \"\",\r\n  manufacture: \"Pontiac\",\r\n  modelYear: 2020,\r\n  mileage: 0,\r\n  description: \"\",\r\n  color: \"Red\",\r\n  price: 10000,\r\n  condition: 1,\r\n  status: 0,\r\n  VINCode: \"\",\r\n};\r\n\r\nexport function ProductEdit({\r\n  history,\r\n  match: {\r\n    params: { id },\r\n  },\r\n}) {\r\n  // Subheader\r\n  const suhbeader = useSubheader();\r\n\r\n  // Tabs\r\n  const [tab, setTab] = useState(\"basic\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  // const layoutDispatch = useContext(LayoutContext.Dispatch);\r\n  const { actionsLoading, productForEdit } = useSelector(\r\n    (state) => ({\r\n      actionsLoading: state.products.actionsLoading,\r\n      productForEdit: state.products.productForEdit,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.fetchProduct(id));\r\n  }, [id, dispatch]);\r\n\r\n  useEffect(() => {\r\n    let _title = id ? \"\" : \"New Product\";\r\n    if (productForEdit && id) {\r\n      _title = `Edit product '${productForEdit.manufacture} ${productForEdit.model} - ${productForEdit.modelYear}'`;\r\n    }\r\n\r\n    setTitle(_title);\r\n    suhbeader.setTitle(_title);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [productForEdit, id]);\r\n\r\n  const saveProduct = (values) => {\r\n    if (!id) {\r\n      dispatch(actions.createProduct(values)).then(() => backToProductsList());\r\n    } else {\r\n      dispatch(actions.updateProduct(values)).then(() => backToProductsList());\r\n    }\r\n  };\r\n\r\n  const btnRef = useRef();  \r\n  const saveProductClick = () => {\r\n    if (btnRef && btnRef.current) {\r\n      btnRef.current.click();\r\n    }\r\n  };\r\n\r\n  const backToProductsList = () => {\r\n    history.push(`/e-commerce/products`);\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      {actionsLoading && <ModalProgressBar />}\r\n      <CardHeader title={title}>\r\n        <CardHeaderToolbar>\r\n          <button\r\n            type=\"button\"\r\n            onClick={backToProductsList}\r\n            className=\"btn btn-light\"\r\n          >\r\n            <i className=\"fa fa-arrow-left\"></i>\r\n            Back\r\n          </button>\r\n          {`  `}\r\n          <button className=\"btn btn-light ml-2\">\r\n            <i className=\"fa fa-redo\"></i>\r\n            Reset\r\n          </button>\r\n          {`  `}\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-primary ml-2\"\r\n            onClick={saveProductClick}\r\n          >\r\n            Save\r\n          </button>\r\n        </CardHeaderToolbar>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <ul className=\"nav nav-tabs nav-tabs-line \" role=\"tablist\">\r\n          <li className=\"nav-item\" onClick={() => setTab(\"basic\")}>\r\n            <a\r\n              className={`nav-link ${tab === \"basic\" && \"active\"}`}\r\n              data-toggle=\"tab\"\r\n              role=\"tab\"\r\n              aria-selected={(tab === \"basic\").toString()}\r\n            >\r\n              Basic info\r\n            </a>\r\n          </li>\r\n          {id && (\r\n            <>\r\n              {\" \"}\r\n              <li className=\"nav-item\" onClick={() => setTab(\"remarks\")}>\r\n                <a\r\n                  className={`nav-link ${tab === \"remarks\" && \"active\"}`}\r\n                  data-toggle=\"tab\"\r\n                  role=\"button\"\r\n                  aria-selected={(tab === \"remarks\").toString()}\r\n                >\r\n                  Product remarks\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\" onClick={() => setTab(\"specs\")}>\r\n                <a\r\n                  className={`nav-link ${tab === \"specs\" && \"active\"}`}\r\n                  data-toggle=\"tab\"\r\n                  role=\"tab\"\r\n                  aria-selected={(tab === \"specs\").toString()}\r\n                >\r\n                  Product specifications\r\n                </a>\r\n              </li>\r\n            </>\r\n          )}\r\n        </ul>\r\n        <div className=\"mt-5\">\r\n          {tab === \"basic\" && (\r\n            <ProductEditForm\r\n              actionsLoading={actionsLoading}\r\n              product={productForEdit || initProduct}\r\n              btnRef={btnRef}\r\n              saveProduct={saveProduct}\r\n            />\r\n          )}\r\n          {tab === \"remarks\" && id && (\r\n            <RemarksUIProvider currentProductId={id}>\r\n              <Remarks />\r\n            </RemarksUIProvider>\r\n          )}\r\n          {tab === \"specs\" && id && (\r\n            <SpecificationsUIProvider currentProductId={id}>\r\n              <Specifications />\r\n            </SpecificationsUIProvider>\r\n          )}\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { Suspense } from \"react\";\r\nimport { Redirect, Switch } from \"react-router-dom\";\r\nimport { CustomersPage } from \"./customers/CustomersPage\";\r\nimport { ProductsPage } from \"./products/ProductsPage\";\r\nimport { ProductEdit } from \"./products/product-edit/ProductEdit\";\r\nimport { LayoutSplashScreen, ContentRoute } from \"../../../../_metronic/layout\";\r\n\r\nexport default function eCommercePage() {\r\n  return (\r\n    <Suspense fallback={<LayoutSplashScreen />}>\r\n      <Switch>\r\n        {\r\n          /* Redirect from eCommerce root URL to /customers */\r\n          <Redirect\r\n            exact={true}\r\n            from=\"/e-commerce\"\r\n            to=\"/e-commerce/customers\"\r\n          />\r\n        }\r\n        <ContentRoute path=\"/e-commerce/customers\" component={CustomersPage} />\r\n        <ContentRoute path=\"/e-commerce/products/new\" component={ProductEdit} />\r\n        <ContentRoute\r\n          path=\"/e-commerce/products/:id/edit\"\r\n          component={ProductEdit}\r\n        />\r\n\r\n        <ContentRoute path=\"/e-commerce/products\" component={ProductsPage} />\r\n      </Switch>\r\n    </Suspense>\r\n  );\r\n}\r\n"],"sourceRoot":""}