{"version":3,"sources":["app/modules/UserProfile/AccountInformation.js","app/modules/UserProfile/ChangePassword.js","app/modules/UserProfile/PersonaInformation.js","app/modules/UserProfile/EmailSettings.js","app/modules/UserProfile/UserProfilePage.js"],"names":["connect","auth","props","_useState","useState","_useState2","_slicedToArray","loading","setloading","dispatch","useDispatch","user","useSelector","state","shallowEqual","useEffect","initialValues","username","email","language","timeZone","communicationEmail","communication","communicationSMS","sms","communicationPhone","phone","Schema","Yup","shape","required","getInputClasses","fieldname","formik","touched","errors","useFormik","validationSchema","onSubmit","values","_ref","setStatus","setSubmitting","updatedUser","Object","assign","setUser","setTimeout","saveUser","onReset","_ref2","resetForm","React","createElement","className","handleSubmit","ModalProgressBar","type","disabled","isSubmitting","isValid","Link","to","concat","name","getFieldProps","placeholder","href","value","checked","onChange","handleChange","_useState3","_useState4","isError","setisError","currentPassword","password","cPassword","when","is","val","length","then","oneOf","role","SVG","src","toAbsoluteUrl","onClick","data-dismiss","aria-label","aria-hidden","pic","setPic","firstname","lastname","companyName","website","id","style","backgroundImage","data-action","data-toggle","title","data-original-title","accept","emailNotification","emailSettings","sendCopyToPersonalEmail","youHaveNewNotifications","activityRelatesEmail","youAreSentADirectMessage","someoneAddsYouAsAsAConnection","uponNewOrder","newMembershipApproval","memberRegistration","newsAboutKeenthemesProductsAndFeatureUpdates","updatesFromKeenthemes","tipsOnGettingMoreOutOfKeen","thingsYouMissedSindeYouLastLoggedIntoKeen","newsAboutMetronicOnPartnerProductsAndOtherServices","tipsOnMetronicBusinessProducts","UserProfilePage","useSubheader","setTitle","string","console","log","Card","userrole","charAt","toUpperCase","slice","reporting_manager"],"mappings":"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","file":"static/js/10.b4d1e4de.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector, shallowEqual, connect, useDispatch } from \"react-redux\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { ModalProgressBar } from \"../../../_metronic/_partials/controls\";\r\nimport * as auth from \"../Auth\";\r\n\r\nfunction AccountInformation(props) {\r\n  // Fields\r\n  const [loading, setloading] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.auth.user, shallowEqual);\r\n  useEffect(() => {}, [user]);\r\n\r\n  // Methods\r\n  const saveUser = (values, setStatus, setSubmitting) => {\r\n    setloading(true);\r\n    const updatedUser = Object.assign(user, {\r\n      username: values.username,\r\n      email: values.email,\r\n      language: values.language,\r\n      timeZone: values.timeZone,\r\n      communication: {\r\n        email: values.communicationEmail,\r\n        sms: values.communicationSMS,\r\n        phone: values.communicationPhone,\r\n      },\r\n    });\r\n    // user for update preparation\r\n    dispatch(props.setUser(updatedUser));\r\n    setTimeout(() => {\r\n      setloading(false);\r\n      setSubmitting(false);\r\n      // Do request to your server for user update, we just imitate user update there, For example:\r\n      // update(updatedUser)\r\n      //  .then(()) => {\r\n      //    setloading(false);\r\n      //  })\r\n      //  .catch((error) => {\r\n      //    setloading(false);\r\n      //    setSubmitting(false);\r\n      //    setStatus(error);\r\n      // });\r\n    }, 1000);\r\n  };\r\n  // UI Helpers\r\n  const initialValues = {\r\n    username: user.username,\r\n    email: user.email,\r\n    language: user.language,\r\n    timeZone: user.timeZone,\r\n    communicationEmail: user.communication.email,\r\n    communicationSMS: user.communication.sms,\r\n    communicationPhone: user.communication.phone,\r\n  };\r\n  const Schema = Yup.object().shape({\r\n    username: Yup.string().required(\"Username is required\"),\r\n    email: Yup.string()\r\n      .email(\"Wrong email format\")\r\n      .required(\"Email is required\"),\r\n    language: Yup.string(),\r\n    timeZone: Yup.string(),\r\n    communicationEmail: Yup.bool(),\r\n    communicationSMS: Yup.bool(),\r\n    communicationPhone: Yup.bool(),\r\n  });\r\n  const getInputClasses = (fieldname) => {\r\n    if (formik.touched[fieldname] && formik.errors[fieldname]) {\r\n      return \"is-invalid\";\r\n    }\r\n\r\n    if (formik.touched[fieldname] && !formik.errors[fieldname]) {\r\n      return \"is-valid\";\r\n    }\r\n\r\n    return \"\";\r\n  };\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema: Schema,\r\n    onSubmit: (values, { setStatus, setSubmitting }) => {\r\n      saveUser(values, setStatus, setSubmitting);\r\n    },\r\n    onReset: (values, { resetForm }) => {\r\n      resetForm();\r\n    },\r\n  });\r\n\r\n  return (\r\n    <form className=\"card card-custom\" onSubmit={formik.handleSubmit}>\r\n      {loading && <ModalProgressBar />}\r\n\r\n      {/* begin::Header */}\r\n      <div className=\"card-header py-3\">\r\n        <div className=\"card-title align-items-start flex-column\">\r\n          <h3 className=\"card-label font-weight-bolder text-dark\">\r\n            Account Information\r\n          </h3>\r\n          <span className=\"text-muted font-weight-bold font-size-sm mt-1\">\r\n            Change your account settings\r\n          </span>\r\n        </div>\r\n        <div className=\"card-toolbar\">\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-success mr-2\"\r\n            disabled={\r\n              formik.isSubmitting || (formik.touched && !formik.isValid)\r\n            }\r\n          >\r\n            Save Changes\r\n            {formik.isSubmitting}\r\n          </button>\r\n          <Link\r\n            to=\"/user-profile/profile-overview\"\r\n            className=\"btn btn-secondary\"\r\n          >\r\n            Cancel\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      {/* end::Header */}\r\n      {/* begin::Form */}\r\n      <div className=\"form\">\r\n        <div className=\"card-body\">\r\n          {/* begin::Heading */}\r\n          <div className=\"row\">\r\n            <label className=\"col-xl-3\"></label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <h5 className=\"font-weight-bold mb-6\">Account:</h5>\r\n            </div>\r\n          </div>\r\n          {/* begin::Form Group */}\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">Username</label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <div>\r\n                <input\r\n                  type=\"text\"\r\n                  className={`form-control form-control-lg form-control-solid ${getInputClasses(\r\n                    \"username\"\r\n                  )}`}\r\n                  name=\"username\"\r\n                  {...formik.getFieldProps(\"username\")}\r\n                />\r\n                {formik.touched.username && formik.errors.username ? (\r\n                  <div className=\"invalid-feedback\">\r\n                    {formik.errors.username}\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* begin::Form Group */}\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">\r\n              Email Address\r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <div className=\"input-group input-group-lg input-group-solid\">\r\n                <div className=\"input-group-prepend\">\r\n                  <span className=\"input-group-text\">\r\n                    <i className=\"fa fa-at\"></i>\r\n                  </span>\r\n                </div>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Email\"\r\n                  className={`form-control form-control-lg form-control-solid ${getInputClasses(\r\n                    \"email\"\r\n                  )}`}\r\n                  name=\"email\"\r\n                  {...formik.getFieldProps(\"email\")}\r\n                />\r\n                {formik.touched.email && formik.errors.email ? (\r\n                  <div className=\"invalid-feedback\">{formik.errors.email}</div>\r\n                ) : null}\r\n              </div>\r\n              <span className=\"form-text text-muted\">\r\n                Email will not be publicly displayed.{` `}\r\n                <a href=\"#\" className=\"font-weight-bold\">\r\n                  Learn more\r\n                </a>\r\n                .\r\n              </span>\r\n            </div>\r\n          </div>\r\n          {/* begin::Form Group */}\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">Language</label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <select\r\n                className=\"form-control form-control-lg form-control-solid\"\r\n                name=\"language\"\r\n                {...formik.getFieldProps(\"language\")}\r\n              >\r\n                <option>Select Language...</option>\r\n                <option value=\"id\">Bahasa Indonesia - Indonesian</option>\r\n                <option value=\"msa\">Bahasa Melayu - Malay</option>\r\n                <option value=\"ca\">Català - Catalan</option>\r\n                <option value=\"cs\">Čeština - Czech</option>\r\n                <option value=\"da\">Dansk - Danish</option>\r\n                <option value=\"de\">Deutsch - German</option>\r\n                <option value=\"en\">English</option>\r\n                <option value=\"en-gb\">English UK - British English</option>\r\n                <option value=\"es\">Español - Spanish</option>\r\n                <option value=\"eu\">Euskara - Basque (beta)</option>\r\n                <option value=\"fil\">Filipino</option>\r\n                <option value=\"fr\">Français - French</option>\r\n                <option value=\"pt\">Português - Portuguese</option>\r\n                <option value=\"ro\">Română - Romanian</option>\r\n                <option value=\"ru\">Русский - Russian</option>\r\n                <option value=\"sr\">Српски - Serbian</option>\r\n                <option value=\"uk\">Українська мова - Ukrainian</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          {/* begin::Form Group */}\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">\r\n              Time Zone\r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <select\r\n                className=\"form-control form-control-lg form-control-solid\"\r\n                name=\"timeZone\"\r\n                {...formik.getFieldProps(\"timeZone\")}\r\n              >\r\n                <option value=\"International Date Line West\">\r\n                  (GMT-11:00) International Date Line West\r\n                </option>\r\n                <option value=\"Midway Island\">(GMT-11:00) Midway Island</option>\r\n\r\n                <option value=\"Central America\">\r\n                  (GMT-06:00) Central America\r\n                </option>\r\n                <option value=\"Central Time (US &amp; Canada)\">\r\n                  (GMT-05:00) Central Time (US &amp; Canada)\r\n                </option>\r\n                <option value=\"Eastern Time (US &amp; Canada)\">\r\n                  (GMT-04:00) Eastern Time (US &amp; Canada)\r\n                </option>\r\n                <option value=\"Indiana (East)\">\r\n                  (GMT-04:00) Indiana (East)\r\n                </option>\r\n\r\n                <option value=\"Georgetown\">(GMT-04:00) Georgetown</option>\r\n\r\n                <option value=\"Buenos Aires\">(GMT-03:00) Buenos Aires</option>\r\n                <option value=\"Newfoundland\">(GMT-02:30) Newfoundland</option>\r\n                <option value=\"Mid-Atlantic\">(GMT-02:00) Mid-Atlantic</option>\r\n                <option value=\"Cape Verde Is.\">\r\n                  (GMT-01:00) Cape Verde Is.\r\n                </option>\r\n                <option value=\"UTC\">(GMT) UTC</option>\r\n                <option value=\"Dublin\">(GMT+01:00) Dublin</option>\r\n                <option value=\"Edinburgh\">(GMT+01:00) Edinburgh</option>\r\n                <option value=\"London\">(GMT+01:00) London</option>\r\n                <option value=\"Prague\">(GMT+02:00) Prague</option>\r\n                <option value=\"Helsinki\">(GMT+03:00) Helsinki</option>\r\n                <option value=\"Abu Dhabi\">(GMT+04:00) Abu Dhabi</option>\r\n                <option value=\"Tehran\">(GMT+04:30) Tehran</option>\r\n                <option value=\"Islamabad\">(GMT+05:00) Islamabad</option>\r\n                <option value=\"Karachi\">(GMT+05:00) Karachi</option>\r\n                <option value=\"Tashkent\">(GMT+05:00) Tashkent</option>\r\n                <option value=\"Kathmandu\">(GMT+05:45) Kathmandu</option>\r\n                <option value=\"Astana\">(GMT+06:00) Astana</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          {/* begin::Form Group */}\r\n          <div className=\"form-group row align-items-center\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">\r\n              Communication\r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <div className=\"checkbox-inline\">\r\n                <label className=\"checkbox\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"communicationEmail\"\r\n                    checked={formik.values.communicationEmail}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  <span></span>Email\r\n                </label>\r\n                <label className=\"checkbox\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"communicationSMS\"\r\n                    checked={formik.values.communicationSMS}\r\n                    {...formik.getFieldProps(\"communicationSMS\")}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  <span></span>SMS\r\n                </label>\r\n                <label className=\"checkbox\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"communicationPhone\"\r\n                    checked={formik.values.communicationPhone}\r\n                    {...formik.getFieldProps(\"communicationPhone\")}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  <span></span>Phone\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* begin::Form Group */}\r\n          <div className=\"separator separator-dashed my-5\"></div>\r\n          {/* begin::Form Group */}\r\n          <div className=\"row\">\r\n            <label className=\"col-xl-3\"></label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <h5 className=\"font-weight-bold mb-6\">Security:</h5>\r\n            </div>\r\n          </div>\r\n          {/* begin::Form Group */}\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">\r\n              Login verification\r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-light-primary font-weight-bold btn-sm\"\r\n              >\r\n                Setup login verification\r\n              </button>\r\n              <p className=\"form-text text-muted pt-2\">\r\n                After you log in, you will be asked for additional information\r\n                to confirm your identity and protect your account from being\r\n                compromised. {` `}\r\n                <a href=\"#\" className=\"font-weight-bold\">\r\n                  Learn more\r\n                </a>\r\n                .\r\n              </p>\r\n            </div>\r\n          </div>\r\n          {/* begin::Form Group */}\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">\r\n              Password reset verification\r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <div className=\"checkbox-inline\">\r\n                <label className=\"checkbox m-0\">\r\n                  <input type=\"checkbox\" />\r\n                  <span></span>Require personal information to reset your\r\n                  password.\r\n                </label>\r\n              </div>\r\n              <p className=\"form-text text-muted py-2\">\r\n                For extra security, this requires you to confirm your email or\r\n                phone number when you reset your password.\r\n                <a href=\"#\" className=\"font-weight-boldk\">\r\n                  Learn more\r\n                </a>\r\n                .\r\n              </p>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-light-danger font-weight-bold btn-sm\"\r\n              >\r\n                Deactivate your account ?\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* end::Form */}\r\n    </form>\r\n  );\r\n}\r\nexport default connect(null, auth.actions)(AccountInformation);\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector, shallowEqual, connect, useDispatch } from \"react-redux\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport { ModalProgressBar } from \"../../../_metronic/_partials/controls\";\r\nimport { toAbsoluteUrl } from \"../../../_metronic/_helpers\";\r\nimport * as auth from \"../Auth\";\r\n\r\nfunction ChangePassword(props) {\r\n  // Fields\r\n  const [loading, setloading] = useState(false);\r\n  const [isError, setisError] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.auth.user, shallowEqual);\r\n  useEffect(() => {}, [user]);\r\n  // Methods\r\n  const saveUser = (values, setStatus, setSubmitting) => {\r\n    setloading(true);\r\n    setisError(false);\r\n    const updatedUser = Object.assign(user, {\r\n      password: values.password,\r\n    });\r\n    // user for update preparation\r\n    dispatch(props.setUser(updatedUser));\r\n    setTimeout(() => {\r\n      setloading(false);\r\n      setSubmitting(false);\r\n      setisError(true);\r\n      // Do request to your server for user update, we just imitate user update there, For example:\r\n      // update(updatedUser)\r\n      //  .then(()) => {\r\n      //    setloading(false);\r\n      //  })\r\n      //  .catch((error) => {\r\n      //    setloading(false);\r\n      //    setSubmitting(false);\r\n      //    setStatus(error);\r\n      // });\r\n    }, 1000);\r\n  };\r\n  // UI Helpers\r\n  const initialValues = {\r\n    currentPassword: \"\",\r\n    password: \"\",\r\n    cPassword: \"\",\r\n  };\r\n  const Schema = Yup.object().shape({\r\n    currentPassword: Yup.string().required(\"Current password is required\"),\r\n    password: Yup.string().required(\"New Password is required\"),\r\n    cPassword: Yup.string()\r\n      .required(\"Password confirmation is required\")\r\n      .when(\"password\", {\r\n        is: (val) => (val && val.length > 0 ? true : false),\r\n        then: Yup.string().oneOf(\r\n          [Yup.ref(\"password\")],\r\n          \"Password and Confirm Password didn't match\"\r\n        ),\r\n      }),\r\n  });\r\n  const getInputClasses = (fieldname) => {\r\n    if (formik.touched[fieldname] && formik.errors[fieldname]) {\r\n      return \"is-invalid\";\r\n    }\r\n\r\n    if (formik.touched[fieldname] && !formik.errors[fieldname]) {\r\n      return \"is-valid\";\r\n    }\r\n\r\n    return \"\";\r\n  };\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema: Schema,\r\n    onSubmit: (values, { setStatus, setSubmitting }) => {\r\n      saveUser(values, setStatus, setSubmitting);\r\n    },\r\n    onReset: (values, { resetForm }) => {\r\n      resetForm();\r\n    },\r\n  });\r\n\r\n  return (\r\n    <form className=\"card card-custom\" onSubmit={formik.handleSubmit}>\r\n      {loading && <ModalProgressBar />}\r\n\r\n      {/* begin::Header */}\r\n      <div className=\"card-header py-3\">\r\n        <div className=\"card-title align-items-start flex-column\">\r\n          <h3 className=\"card-label font-weight-bolder text-dark\">\r\n            Change Password\r\n          </h3>\r\n          <span className=\"text-muted font-weight-bold font-size-sm mt-1\">\r\n            Change your account password\r\n          </span>\r\n        </div>\r\n        <div className=\"card-toolbar\">\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-success mr-2\"\r\n            disabled={\r\n              formik.isSubmitting || (formik.touched && !formik.isValid)\r\n            }\r\n          >\r\n            Save Changes\r\n            {formik.isSubmitting}\r\n          </button>\r\n          <Link\r\n            to=\"/user-profile/profile-overview\"\r\n            className=\"btn btn-secondary\"\r\n          >\r\n            Cancel\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      {/* end::Header */}\r\n      {/* begin::Form */}\r\n      <div className=\"form\">\r\n        <div className=\"card-body\">\r\n          {/* begin::Alert */}\r\n          {isError && (\r\n            <div\r\n              className=\"alert alert-custom alert-light-danger fade show mb-10\"\r\n              role=\"alert\"\r\n            >\r\n              <div className=\"alert-icon\">\r\n                <span className=\"svg-icon svg-icon-3x svg-icon-danger\">\r\n                  <SVG\r\n                    src={toAbsoluteUrl(\"/media/svg/icons/Code/Info-circle.svg\")}\r\n                  ></SVG>{\" \"}\r\n                </span>\r\n              </div>\r\n              <div className=\"alert-text font-weight-bold\">\r\n                Configure user passwords to expire periodically. Users will need\r\n                warning that their passwords are going to expire,\r\n                <br />\r\n                or they might inadvertently get locked out of the system!\r\n              </div>\r\n              <div className=\"alert-close\" onClick={() => setisError(false)}>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"alert\"\r\n                  aria-label=\"Close\"\r\n                >\r\n                  <span aria-hidden=\"true\">\r\n                    <i className=\"ki ki-close\"></i>\r\n                  </span>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n          {/* end::Alert */}\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label text-alert\">\r\n              Current Password\r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <input\r\n                type=\"password\"\r\n                placeholder=\"Current Password\"\r\n                className={`form-control form-control-lg form-control-solid mb-2 ${getInputClasses(\r\n                  \"currentPassword\"\r\n                )}`}\r\n                name=\"currentPassword\"\r\n                {...formik.getFieldProps(\"currentPassword\")}\r\n              />\r\n              {formik.touched.currentPassword &&\r\n              formik.errors.currentPassword ? (\r\n                <div className=\"invalid-feedback\">\r\n                  {formik.errors.currentPassword}\r\n                </div>\r\n              ) : null}\r\n              <a href=\"#\" className=\"text-sm font-weight-bold\">\r\n                Forgot password ?\r\n              </a>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label text-alert\">\r\n              New Password\r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <input\r\n                type=\"password\"\r\n                placeholder=\"New Password\"\r\n                className={`form-control form-control-lg form-control-solid ${getInputClasses(\r\n                  \"password\"\r\n                )}`}\r\n                name=\"password\"\r\n                {...formik.getFieldProps(\"password\")}\r\n              />\r\n              {formik.touched.password && formik.errors.password ? (\r\n                <div className=\"invalid-feedback\">{formik.errors.password}</div>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label text-alert\">\r\n              Verify Password\r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <input\r\n                type=\"password\"\r\n                placeholder=\"Verify Password\"\r\n                className={`form-control form-control-lg form-control-solid ${getInputClasses(\r\n                  \"cPassword\"\r\n                )}`}\r\n                name=\"cPassword\"\r\n                {...formik.getFieldProps(\"cPassword\")}\r\n              />\r\n              {formik.touched.cPassword && formik.errors.cPassword ? (\r\n                <div className=\"invalid-feedback\">\r\n                  {formik.errors.cPassword}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* end::Form */}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default connect(null, auth.actions)(ChangePassword);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector, shallowEqual, connect, useDispatch } from \"react-redux\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { ModalProgressBar } from \"../../../_metronic/_partials/controls\";\r\nimport { toAbsoluteUrl } from \"../../../_metronic/_helpers\";\r\nimport * as auth from \"../Auth\";\r\n\r\nfunction PersonaInformation(props) {\r\n  // Fields\r\n  const [loading, setloading] = useState(false);\r\n  const [pic, setPic] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.auth.user, shallowEqual);\r\n  useEffect(() => {\r\n    if (user.pic) {\r\n      setPic(user.pic);\r\n    }\r\n  }, [user]);\r\n  // Methods\r\n  const saveUser = (values, setStatus, setSubmitting) => {\r\n    setloading(true);\r\n    const updatedUser = Object.assign(user, values);\r\n    // user for update preparation\r\n    dispatch(props.setUser(updatedUser));\r\n    setTimeout(() => {\r\n      setloading(false);\r\n      setSubmitting(false);\r\n      // Do request to your server for user update, we just imitate user update there, For example:\r\n      // update(updatedUser)\r\n      //  .then(()) => {\r\n      //    setloading(false);\r\n      //  })\r\n      //  .catch((error) => {\r\n      //    setloading(false);\r\n      //    setSubmitting(false);\r\n      //    setStatus(error);\r\n      // });\r\n    }, 1000);\r\n  };\r\n  // UI Helpers\r\n  const initialValues = {\r\n    pic: user.pic,\r\n    firstname: user.firstname,\r\n    lastname: user.lastname,\r\n    companyName: user.companyName,\r\n    phone: user.phone,\r\n    email: user.email,\r\n    website: user.website,\r\n  };\r\n  const Schema = Yup.object().shape({\r\n    pic: Yup.string(),\r\n    firstname: Yup.string().required(\"First name is required\"),\r\n    lastname: Yup.string().required(\"Last name is required\"),\r\n    companyName: Yup.string(),\r\n    phone: Yup.string().required(\"Phone is required\"),\r\n    email: Yup.string()\r\n      .email(\"Wrong email format\")\r\n      .required(\"Email is required\"),\r\n    website: Yup.string(),\r\n  });\r\n  const getInputClasses = (fieldname) => {\r\n    if (formik.touched[fieldname] && formik.errors[fieldname]) {\r\n      return \"is-invalid\";\r\n    }\r\n\r\n    if (formik.touched[fieldname] && !formik.errors[fieldname]) {\r\n      return \"is-valid\";\r\n    }\r\n\r\n    return \"\";\r\n  };\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema: Schema,\r\n    onSubmit: (values, { setStatus, setSubmitting }) => {\r\n      saveUser(values, setStatus, setSubmitting);\r\n    },\r\n    onReset: (values, { resetForm }) => {\r\n      resetForm();\r\n    },\r\n  });\r\n  const getUserPic = () => {\r\n    if (!pic) {\r\n      return \"none\";\r\n    }\r\n\r\n    return `url(${pic})`;\r\n  };\r\n  const removePic = () => {\r\n    setPic(\"\");\r\n  };\r\n  return (\r\n    <form\r\n      className=\"card card-custom card-stretch\"\r\n      onSubmit={formik.handleSubmit}\r\n    >\r\n      {loading && <ModalProgressBar />}\r\n\r\n      {/* begin::Header */}\r\n      <div className=\"card-header py-3\">\r\n        <div className=\"card-title align-items-start flex-column\">\r\n          <h3 className=\"card-label font-weight-bolder text-dark\">\r\n            Personal Information\r\n          </h3>\r\n          <span className=\"text-muted font-weight-bold font-size-sm mt-1\">\r\n            Update your personal informaiton\r\n          </span>\r\n        </div>\r\n        <div className=\"card-toolbar\">\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-success mr-2\"\r\n            disabled={\r\n              formik.isSubmitting || (formik.touched && !formik.isValid)\r\n            }\r\n          >\r\n            Save Changes\r\n            {formik.isSubmitting}\r\n          </button>\r\n          <Link\r\n            to=\"/user-profile/profile-overview\"\r\n            className=\"btn btn-secondary\"\r\n          >\r\n            Cancel\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      {/* end::Header */}\r\n      {/* begin::Form */}\r\n      <div className=\"form\">\r\n        {/* begin::Body */}\r\n        <div className=\"card-body\">\r\n          <div className=\"row\">\r\n            <label className=\"col-xl-3\"></label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <h5 className=\"font-weight-bold mb-6\">Customer Info</h5>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">Avatar</label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <div\r\n                className=\"image-input image-input-outline\"\r\n                id=\"kt_profile_avatar\"\r\n                style={{\r\n                  backgroundImage: `url(${toAbsoluteUrl(\r\n                    \"/media/users/blank.png\"\r\n                  )}`,\r\n                }}\r\n              >\r\n                <div\r\n                  className=\"image-input-wrapper\"\r\n                  style={{ backgroundImage: `${getUserPic()}` }}\r\n                />\r\n                <label\r\n                  className=\"btn btn-xs btn-icon btn-circle btn-white btn-hover-text-primary btn-shadow\"\r\n                  data-action=\"change\"\r\n                  data-toggle=\"tooltip\"\r\n                  title=\"\"\r\n                  data-original-title=\"Change avatar\"\r\n                >\r\n                  <i className=\"fa fa-pen icon-sm text-muted\"></i>\r\n                  <input\r\n                    type=\"file\"\r\n                    // name=\"pic\"\r\n                    accept=\".png, .jpg, .jpeg\"\r\n                    // {...formik.getFieldProps(\"pic\")}\r\n                  />\r\n                  <input type=\"hidden\" name=\"profile_avatar_remove\" />\r\n                </label>\r\n                <span\r\n                  className=\"btn btn-xs btn-icon btn-circle btn-white btn-hover-text-primary btn-shadow\"\r\n                  data-action=\"cancel\"\r\n                  data-toggle=\"tooltip\"\r\n                  title=\"\"\r\n                  data-original-title=\"Cancel avatar\"\r\n                >\r\n                  <i className=\"ki ki-bold-close icon-xs text-muted\"></i>\r\n                </span>\r\n                <span\r\n                  onClick={removePic}\r\n                  className=\"btn btn-xs btn-icon btn-circle btn-white btn-hover-text-primary btn-shadow\"\r\n                  data-action=\"remove\"\r\n                  data-toggle=\"tooltip\"\r\n                  title=\"\"\r\n                  data-original-title=\"Remove avatar\"\r\n                >\r\n                  <i className=\"ki ki-bold-close icon-xs text-muted\"></i>\r\n                </span>\r\n              </div>\r\n              <span className=\"form-text text-muted\">\r\n                Allowed file types: png, jpg, jpeg.\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">\r\n              First Name\r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"First name\"\r\n                className={`form-control form-control-lg form-control-solid ${getInputClasses(\r\n                  \"firstname\"\r\n                )}`}\r\n                name=\"firstname\"\r\n                {...formik.getFieldProps(\"firstname\")}\r\n              />\r\n              {formik.touched.firstname && formik.errors.firstname ? (\r\n                <div className=\"invalid-feedback\">\r\n                  {formik.errors.firstname}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">\r\n              Last Name\r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Last name\"\r\n                className={`form-control form-control-lg form-control-solid ${getInputClasses(\r\n                  \"lastname\"\r\n                )}`}\r\n                name=\"lastname\"\r\n                {...formik.getFieldProps(\"lastname\")}\r\n              />\r\n              {formik.touched.lastname && formik.errors.lastname ? (\r\n                <div className=\"invalid-feedback\">{formik.errors.lastname}</div>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">\r\n              Company Name\r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Company name\"\r\n                className={`form-control form-control-lg form-control-solid`}\r\n                name=\"companyName\"\r\n                {...formik.getFieldProps(\"companyName\")}\r\n              />\r\n              <span className=\"form-text text-muted\">\r\n                If you want your invoices addressed to a company. Leave blank to\r\n                use your full name.\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <label className=\"col-xl-3\"></label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <h5 className=\"font-weight-bold mt-10 mb-6\">Contact Info</h5>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">\r\n              Contact Phone\r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <div className=\"input-group input-group-lg input-group-solid\">\r\n                <div className=\"input-group-prepend\">\r\n                  <span className=\"input-group-text\">\r\n                    <i className=\"fa fa-phone\"></i>\r\n                  </span>\r\n                </div>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"+1(123)112-11-11\"\r\n                  className={`form-control form-control-lg form-control-solid ${getInputClasses(\r\n                    \"phone\"\r\n                  )}`}\r\n                  name=\"phone\"\r\n                  {...formik.getFieldProps(\"phone\")}\r\n                />\r\n              </div>\r\n              {formik.touched.phone && formik.errors.phone ? (\r\n                <div className=\"invalid-feedback display-block\">\r\n                  {formik.errors.phone}\r\n                </div>\r\n              ) : null}\r\n              <span className=\"form-text text-muted\">\r\n                We'll never share your phone with anyone else.\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">\r\n              Email Address\r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <div className=\"input-group input-group-lg input-group-solid\">\r\n                <div className=\"input-group-prepend\">\r\n                  <span className=\"input-group-text\">\r\n                    <i className=\"fa fa-at\"></i>\r\n                  </span>\r\n                </div>\r\n                <input\r\n                  type=\"email\"\r\n                  placeholder=\"Email\"\r\n                  className={`form-control form-control-lg form-control-solid ${getInputClasses(\r\n                    \"email\"\r\n                  )}`}\r\n                  name=\"email\"\r\n                  {...formik.getFieldProps(\"email\")}\r\n                />\r\n              </div>\r\n              {formik.touched.email && formik.errors.email ? (\r\n                <div className=\"invalid-feedback display-block\">\r\n                  {formik.errors.email}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">\r\n              Company Site\r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <div className=\"input-group input-group-lg input-group-solid\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"https://keenthemes.com\"\r\n                  className={`form-control form-control-lg form-control-solid`}\r\n                  name=\"website\"\r\n                  {...formik.getFieldProps(\"website\")}\r\n                />\r\n              </div>\r\n              {formik.touched.website && formik.errors.website ? (\r\n                <div className=\"invalid-feedback display-block\">\r\n                  {formik.errors.website}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* end::Body */}\r\n      </div>\r\n      {/* end::Form */}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default connect(null, auth.actions)(PersonaInformation);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector, shallowEqual, connect, useDispatch } from \"react-redux\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { ModalProgressBar } from \"../../../_metronic/_partials/controls\";\r\nimport * as auth from \"../Auth\";\r\n\r\nfunction EmailSettings(props) {\r\n  // Fields\r\n  const [loading, setloading] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.auth.user, shallowEqual);\r\n  useEffect(() => {}, [user]);\r\n  // Methods\r\n  const saveUser = (values, setStatus, setSubmitting) => {\r\n    setloading(true);\r\n    const updatedUser = Object.assign(user, {\r\n      emailSettings: {\r\n        emailNotification: values.emailNotification,\r\n        sendCopyToPersonalEmail: values.sendCopyToPersonalEmail,\r\n        activityRelatesEmail: {\r\n          youHaveNewNotifications: values.youHaveNewNotifications,\r\n          youAreSentADirectMessage: values.youAreSentADirectMessage,\r\n          someoneAddsYouAsAsAConnection: values.someoneAddsYouAsAsAConnection,\r\n          uponNewOrder: values.uponNewOrder,\r\n          newMembershipApproval: values.newMembershipApproval,\r\n          memberRegistration: values.memberRegistration,\r\n        },\r\n        updatesFromKeenthemes: {\r\n          newsAboutKeenthemesProductsAndFeatureUpdates:\r\n            values.newsAboutKeenthemesProductsAndFeatureUpdates,\r\n          tipsOnGettingMoreOutOfKeen: values.tipsOnGettingMoreOutOfKeen,\r\n          thingsYouMissedSindeYouLastLoggedIntoKeen:\r\n            values.thingsYouMissedSindeYouLastLoggedIntoKeen,\r\n          newsAboutMetronicOnPartnerProductsAndOtherServices:\r\n            values.newsAboutMetronicOnPartnerProductsAndOtherServices,\r\n          tipsOnMetronicBusinessProducts: values.tipsOnMetronicBusinessProducts,\r\n        },\r\n      },\r\n    });\r\n    // user for update preparation\r\n    dispatch(props.setUser(updatedUser));\r\n    setTimeout(() => {\r\n      setloading(false);\r\n      setSubmitting(false);\r\n      // Do request to your server for user update, we just imitate user update there, For example:\r\n      // update(updatedUser)\r\n      //  .then(()) => {\r\n      //    setloading(false);\r\n      //  })\r\n      //  .catch((error) => {\r\n      //    setloading(false);\r\n      //    setSubmitting(false);\r\n      //    setStatus(error);\r\n      // });\r\n    }, 1000);\r\n  };\r\n  // UI Helpers\r\n  const initialValues = {\r\n    emailNotification: user.emailSettings.emailNotification,\r\n    sendCopyToPersonalEmail: user.emailSettings.sendCopyToPersonalEmail,\r\n    youHaveNewNotifications:\r\n      user.emailSettings.activityRelatesEmail.youHaveNewNotifications,\r\n    youAreSentADirectMessage:\r\n      user.emailSettings.activityRelatesEmail.youAreSentADirectMessage,\r\n    someoneAddsYouAsAsAConnection:\r\n      user.emailSettings.activityRelatesEmail.someoneAddsYouAsAsAConnection,\r\n    uponNewOrder: user.emailSettings.activityRelatesEmail.uponNewOrder,\r\n    newMembershipApproval:\r\n      user.emailSettings.activityRelatesEmail.newMembershipApproval,\r\n    memberRegistration:\r\n      user.emailSettings.activityRelatesEmail.memberRegistration,\r\n    newsAboutKeenthemesProductsAndFeatureUpdates:\r\n      user.emailSettings.updatesFromKeenthemes\r\n        .newsAboutKeenthemesProductsAndFeatureUpdates,\r\n    tipsOnGettingMoreOutOfKeen:\r\n      user.emailSettings.updatesFromKeenthemes.tipsOnGettingMoreOutOfKeen,\r\n    thingsYouMissedSindeYouLastLoggedIntoKeen:\r\n      user.emailSettings.updatesFromKeenthemes\r\n        .thingsYouMissedSindeYouLastLoggedIntoKeen,\r\n    newsAboutMetronicOnPartnerProductsAndOtherServices:\r\n      user.emailSettings.updatesFromKeenthemes\r\n        .newsAboutMetronicOnPartnerProductsAndOtherServices,\r\n    tipsOnMetronicBusinessProducts:\r\n      user.emailSettings.updatesFromKeenthemes.tipsOnMetronicBusinessProducts,\r\n  };\r\n  const Schema = Yup.object().shape({\r\n    emailNotification: Yup.bool(),\r\n    sendCopyToPersonalEmail: Yup.bool(),\r\n    youHaveNewNotifications: Yup.bool(),\r\n    youAreSentADirectMessage: Yup.bool(),\r\n    someoneAddsYouAsAsAConnection: Yup.bool(),\r\n    uponNewOrder: Yup.bool(),\r\n    newMembershipApproval: Yup.bool(),\r\n    memberRegistration: Yup.bool(),\r\n    newsAboutKeenthemesProductsAndFeatureUpdates: Yup.bool(),\r\n    tipsOnGettingMoreOutOfKeen: Yup.bool(),\r\n    thingsYouMissedSindeYouLastLoggedIntoKeen: Yup.bool(),\r\n    newsAboutMetronicOnPartnerProductsAndOtherServices: Yup.bool(),\r\n    tipsOnMetronicBusinessProducts: Yup.bool(),\r\n  });\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema: Schema,\r\n    onSubmit: (values, { setStatus, setSubmitting }) => {\r\n      saveUser(values, setStatus, setSubmitting);\r\n    },\r\n    onReset: (values, { resetForm }) => {\r\n      resetForm();\r\n    },\r\n  });\r\n  return (\r\n    <form className=\"card card-custom\" onSubmit={formik.handleSubmit}>\r\n      {loading && <ModalProgressBar />}\r\n\r\n      {/* begin::Header */}\r\n      <div className=\"card-header py-3\">\r\n        <div className=\"card-title align-items-start flex-column\">\r\n          <h3 className=\"card-label font-weight-bolder text-dark\">\r\n            Email Settings\r\n          </h3>\r\n          <span className=\"text-muted font-weight-bold font-size-sm mt-1\">\r\n            Change your email settings\r\n          </span>\r\n        </div>\r\n        <div className=\"card-toolbar\">\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-success mr-2\"\r\n            disabled={\r\n              formik.isSubmitting || (formik.touched && !formik.isValid)\r\n            }\r\n          >\r\n            Save Changes\r\n            {formik.isSubmitting}\r\n          </button>\r\n          <Link\r\n            to=\"/user-profile/profile-overview\"\r\n            className=\"btn btn-secondary\"\r\n          >\r\n            Cancel\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      {/* end::Header */}\r\n      {/* begin::Form */}\r\n      <div className=\"form\">\r\n        <div className=\"card-body\">\r\n          <div className=\"row\">\r\n            <label className=\"col-xl-3\"></label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <h5 className=\"font-weight-bold mb-6\">\r\n                Setup Email Notification:\r\n              </h5>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row align-items-center\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label font-weight-bold text-left text-lg-right\">\r\n              Email Notification\r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <span className=\"switch switch-sm\">\r\n                <label>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"emailNotification\"\r\n                    checked={formik.values.emailNotification}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  <span></span>\r\n                </label>\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row align-items-center\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label font-weight-bold text-left text-lg-right\">\r\n              Send Copy To Personal Email\r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <span className=\"switch switch-sm\">\r\n                <label>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"sendCopyToPersonalEmail\"\r\n                    checked={formik.values.sendCopyToPersonalEmail}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  <span></span>\r\n                </label>\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className=\"separator separator-dashed my-10\"></div>\r\n          <div className=\"row\">\r\n            <label className=\"col-xl-3\"></label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <h5 className=\"font-weight-bold mb-6\">\r\n                Activity Related Emails:\r\n              </h5>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label font-weight-bold text-left text-lg-right\">\r\n              When To Email\r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <div className=\"checkbox-list\">\r\n                <label className=\"checkbox\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"youHaveNewNotifications\"\r\n                    checked={formik.values.youHaveNewNotifications}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  <span></span>You have new notifications\r\n                </label>\r\n                <label className=\"checkbox\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"youAreSentADirectMessage\"\r\n                    checked={formik.values.youAreSentADirectMessage}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  <span></span>You're sent a direct message\r\n                </label>\r\n                <label className=\"checkbox\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"someoneAddsYouAsAsAConnection\"\r\n                    checked={formik.values.someoneAddsYouAsAsAConnection}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  <span></span>Someone adds you as a connection\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label font-weight-bold text-left text-lg-right\">\r\n              When To Escalate Emails\r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <div className=\"checkbox-list\">\r\n                <label className=\"checkbox checkbox-primary\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"uponNewOrder\"\r\n                    checked={formik.values.uponNewOrder}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  <span></span>Upon new order\r\n                </label>\r\n                <label className=\"checkbox checkbox-primary\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"newMembershipApproval\"\r\n                    checked={formik.values.newMembershipApproval}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  <span></span>New membership approval\r\n                </label>\r\n                <label className=\"checkbox checkbox-primary\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"memberRegistration\"\r\n                    checked={formik.values.memberRegistration}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  <span></span>Member registration\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"separator separator-dashed my-10\"></div>\r\n          <div className=\"row\">\r\n            <label className=\"col-xl-3\"></label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <h5 className=\"font-weight-bold mb-6\">\r\n                Updates From Keenthemes:\r\n              </h5>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label font-weight-bold text-left text-lg-right\">\r\n              Email You With\r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <div className=\"checkbox-list\">\r\n                <label className=\"checkbox\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"newsAboutKeenthemesProductsAndFeatureUpdates\"\r\n                    checked={\r\n                      formik.values.newsAboutKeenthemesProductsAndFeatureUpdates\r\n                    }\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  <span></span>News about Keenthemes products and feature\r\n                  updates\r\n                </label>\r\n                <label className=\"checkbox\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"tipsOnGettingMoreOutOfKeen\"\r\n                    checked={formik.values.tipsOnGettingMoreOutOfKeen}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  <span></span>Tips on getting more out of Keen\r\n                </label>\r\n                <label className=\"checkbox\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"thingsYouMissedSindeYouLastLoggedIntoKeen\"\r\n                    checked={\r\n                      formik.values.thingsYouMissedSindeYouLastLoggedIntoKeen\r\n                    }\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  <span></span>Things you missed since you last logged into Keen\r\n                </label>\r\n                <label className=\"checkbox\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"newsAboutMetronicOnPartnerProductsAndOtherServices\"\r\n                    checked={\r\n                      formik.values\r\n                        .newsAboutMetronicOnPartnerProductsAndOtherServices\r\n                    }\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  <span></span>News about Metronic on partner products and other\r\n                  services\r\n                </label>\r\n                <label className=\"checkbox\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"tipsOnMetronicBusinessProducts\"\r\n                    checked={formik.values.tipsOnMetronicBusinessProducts}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  <span></span>Tips on Metronic business products\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* end::Form */}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default connect(null, auth.actions)(EmailSettings);\r\n","import React, { useEffect } from \"react\";\r\nimport { Redirect, Route, Switch,Link } from \"react-router-dom\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport AccountInformation from \"./AccountInformation\";\r\nimport { ProfileOverview } from \"./ProfileOverview\";\r\nimport ChangePassword from \"./ChangePassword\";\r\nimport PersonaInformation from \"./PersonaInformation\";\r\nimport EmailSettings from \"./EmailSettings\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport { ProfileCard } from \"./components/ProfileCard\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../_metronic/_partials/controls\";\r\n\r\nexport default function UserProfilePage() {\r\n  const suhbeader = useSubheader();\r\n  suhbeader.setTitle(\"User profile\");\r\n  const user = useSelector(({ auth }) => auth.user, shallowEqual);\r\n  console.log(user, \"userdataa\")\r\n  useEffect(() => {\r\n    return () => { };\r\n  }, [user]);\r\n  function capitalizeFirstLetter(string) {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n  }\r\n  return (\r\n\r\n    <Card>\r\n      {/* <div className=\"card-header py-3\">\r\n        <div className=\"card-title align-items-start flex-column\">\r\n          <h3 className=\"card-label font-weight-bolder text-dark\">\r\n            User Profile\r\n          </h3>\r\n\r\n        </div>\r\n\r\n      </div> */}\r\n      <div className=\"form\">\r\n\r\n        {/* begin::Body */}\r\n        <div className=\"card-body\">\r\n          <div className=\"row\">\r\n            <label className=\"col-xl-3\"></label>\r\n\r\n          </div>\r\n\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">\r\n              Name\r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <span className={`form-control form-control-lg form-control-solid `}>{user.firstname} {user.lastname}</span>\r\n\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">\r\n              Email\r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <span className={`form-control form-control-lg form-control-solid `}>{user.email}</span>\r\n\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">\r\n              Role\r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <span className={`form-control form-control-lg form-control-solid `}>{capitalizeFirstLetter(user.userrole[0])}</span>\r\n\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">\r\n              Reporting Manager\r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <span className={`form-control form-control-lg form-control-solid `}>{user.reporting_manager[0].firstname} {\" \"} {user.reporting_manager[0].lastname}</span>\r\n\r\n            </div>\r\n          </div>\r\n          <div className=\"card-toolbar\">\r\n\r\n            <Link\r\n              to=\"/dashboard\"\r\n              className=\"btn btn-secondary\"\r\n            >\r\n              Cancel\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Card>\r\n\r\n\r\n  );\r\n}\r\n"],"sourceRoot":""}