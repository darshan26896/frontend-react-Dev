{"version":3,"sources":["app/modules/ReactBootstrapExamples/AccordionExamplesPage.js","app/modules/ReactBootstrapExamples/AlertExamplesPage.js","app/modules/ReactBootstrapExamples/BadgeExamplesPage.js","app/modules/ReactBootstrapExamples/BreadcrumbExamplesPage.js","app/modules/ReactBootstrapExamples/ButtonsExamplesPage.js","app/modules/ReactBootstrapExamples/ButtonGroupExamplesPage.js","app/modules/ReactBootstrapExamples/CardsExamplesPage.js","app/modules/ReactBootstrapExamples/CarouselExamplesPage.js","app/modules/ReactBootstrapExamples/DropdownsExamplesPage.js","app/modules/ReactBootstrapExamples/FormsExamplesPage.js","app/modules/ReactBootstrapExamples/InputGroupExamplesPage.js","app/modules/ReactBootstrapExamples/ImagesExamplesPage.js","app/modules/ReactBootstrapExamples/FiguresExamplesPage.js","app/modules/ReactBootstrapExamples/JumbotronExamplesPage.js","app/modules/ReactBootstrapExamples/ListGroupExamplesPage.js","app/modules/ReactBootstrapExamples/PaginationExamplesPage.js","app/modules/ReactBootstrapExamples/ModalExamplesPage.js","app/modules/ReactBootstrapExamples/NavsExamplesPage.js","app/modules/ReactBootstrapExamples/NavbarExamplesPage.js","app/modules/ReactBootstrapExamples/OverlaysExamplesPage.js","app/modules/ReactBootstrapExamples/PopoversExamplesPage.js","app/modules/ReactBootstrapExamples/ProgressExamplesPage.js","app/modules/ReactBootstrapExamples/SpinnersExamplesPage.js","app/modules/ReactBootstrapExamples/TableExamplesPage.js","app/modules/ReactBootstrapExamples/TabsExamplesPage.js","app/modules/ReactBootstrapExamples/TooltipsExamplesPage.js","app/modules/ReactBootstrapExamples/ToastsExamplesPage.js","app/modules/ReactBootstrapExamples/ReactBootstrapPage.js"],"names":["AccordionExamplesPage","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","React","createElement","Fragment","Notice","icon","target","className","rel","href","KTCodeExample","jsCode","jsCode1","beforeCodeTitle","Accordion","defaultActiveKey","Card","Header","Toggle","as","Button","variant","eventKey","Collapse","Body","jsCode3","jsCode2","Component","AlertDismissible","props","_this","call","state","show","_this2","Alert","this","Heading","onClick","setState","AlertDismissibleExample","_React$Component2","_super2","_this3","_this4","onClose","dismissible","AlertExamplesPage","_React$Component3","_super3","map","idx","jsCode4","Link","jsCode5","BadgeExamplesPage","Badge","pill","BreadcrumbExamplesPage","Breadcrumb","Item","active","LoadingButton","context","handleClick","bind","_assertThisInitialized","isLoading","Promise","resolve","setTimeout","then","disabled","ToggleButtonGroupControlled","handleChange","event","ToggleButtonGroup","type","onChange","defaultValue","name","ToggleButton","ButtonsExamplesPage","ButtonToolbar","size","block","jsCode7","jsCode9","ButtonGroup","toggle","defaultChecked","jsCode11","jsCode6","jsCode8","jsCode10","ButtonGroupExamplesPage","aria-label","InputGroup","Prepend","Text","id","FormControl","placeholder","aria-describedby","DropdownButton","title","Dropdown","vertical","CardsExamplesPage","style","width","Img","src","Title","Subtitle","ListGroup","ListGroupItem","codeBlockHeight","border","Nav","jsCode13","CardDeck","Footer","alt","ImgOverlay","bg","text","jsCode12","CardGroup","jsCode14","CardColumns","ControlledCarousel","handleSelect","index","direction","selectedIndex","e","_this$state","Carousel","activeIndex","onSelect","Caption","CarouselExamplesPage","CustomToggle","forwardRef","ref","preventDefault","children","CustomMenu","toLowerCase","trim","_this$props","labeledBy","aria-labelledby","autoFocus","Children","toArray","filter","child","startsWith","DropdownsExamplesPage","Menu","split","SplitButton","DropdownType","concat","Divider","drop","alignRight","FormExample","_len","length","args","Array","_key","validated","currentTarget","checkValidity","stopPropagation","Form","noValidate","onSubmit","handleSubmit","Row","Group","Col","md","controlId","Label","Control","required","Feedback","Check","label","feedback","FormsExamplesPage","multiple","rows","column","sm","plaintext","readOnly","inline","Input","isValid","span","offset","jsCode16","custom","jsCode15","InputGroupExamplesPage","Append","htmlFor","Checkbox","Radio","ImagesExamplesPage","Container","xs","Image","rounded","roundedCircle","thumbnail","fluid","FiguresExamplesPage","Figure","height","JumbotronExamplesPage","Jumbotron","alertClicked","alert","ListGroupExamplesPage","Tab","action","Content","Pane","Example","handleShow","handleClose","Modal","onHide","closeButton","MyVerticallyCenteredModal","Object","assign","centered","App","modalShow","MydModalWithGrid","_React$Component4","_super4","App1","_React$Component5","_super5","_len2","_key2","_this5","Example1","_React$Component6","_super6","_this6","smShow","lgShow","_this7","Example2","_React$Component7","_super7","_this8","handleHide","dialogClassName","ModalExamplesPage","_React$Component8","_super8","Dialog","NavDropdownExample","activeKey","k","NavDropdown","NavsExamplesPage","selectedKey","fill","NavbarExamplesPage","Navbar","expand","Brand","aria-controls","collapseOnSelect","attachRef","Overlay","placement","_ref","scheduleUpdate","arrowProps","outOfBoundaries","_objectWithoutProperties","_excluded","_objectSpread","backgroundColor","padding","color","borderRadius","renderTooltip","OverlayTrigger","delay","hide","overlay","Example4","_ref2","s","container","containerPadding","Popover","UpdatingPopover","prevProps","Example5","content","timer","setInterval","trigger","OverlaysExamplesPage","Tooltip","pointerEvents","items","number","push","Pagination","paginationBasic","PaginationExamplesPage","First","Prev","Ellipsis","Next","Last","popover","PopoversExamplesPage","progressInstance","ProgressBar","now","progressInstance1","srOnly","ProgressExamplesPage","striped","animated","SpinnersExamplesPage","Spinner","animation","role","aria-hidden","TableExamplesPage","Table","bordered","hover","colSpan","responsive","ControlledTabs","Tabs","TabsExamplesPage","transition","TooltipsExamplesPage","showA","showB","toggleShowA","toggleShowB","Toast","autohide","ToastsExamplesPage","aria-live","aria-atomic","position","minHeight","top","right","ReactBootstrapPage","Switch","Redirect","exact","from","to","ContentRoute","path","component"],"mappings":"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","file":"static/js/9.097df57e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Button, Card, Accordion} from \"react-bootstrap\";\r\nimport {Notice, KTCodeExample} from \"../../../_metronic/_partials/controls\";\r\n\r\nexport default class AccordionExamplesPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Notice icon=\"flaticon-warning font-primary\">\r\n          <span>\r\n            Accordions use Card components to provide styling of the Accordion\r\n            components. Use AccordionToggle to provide a button that switches\r\n            between each AccordionCollapse component.\r\n          </span>{\" \"}\r\n          <span>\r\n            For more info please check the components's official{\" \"}\r\n            <a\r\n              target=\"_blank\"\r\n              className=\"font-weight-bold\"\r\n              rel=\"noopener noreferrer\"\r\n              href=\"https://react-bootstrap.github.io/components/accordion/\"\r\n            >\r\n              demos & documentation\r\n            </a>\r\n          </span>\r\n        </Notice>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <KTCodeExample jsCode={jsCode1} beforeCodeTitle=\"Basic Example\">\r\n              <Accordion defaultActiveKey=\"0\">\r\n                <Card>\r\n                  <Card.Header>\r\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n                      Click me!\r\n                    </Accordion.Toggle>\r\n                  </Card.Header>\r\n                  <Accordion.Collapse eventKey=\"0\">\r\n                    <Card.Body>Hello! I'm the body</Card.Body>\r\n                  </Accordion.Collapse>\r\n                </Card>\r\n                <Card>\r\n                  <Card.Header>\r\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\r\n                      Click me!\r\n                    </Accordion.Toggle>\r\n                  </Card.Header>\r\n                  <Accordion.Collapse eventKey=\"1\">\r\n                    <Card.Body>Hello! I'm another body</Card.Body>\r\n                  </Accordion.Collapse>\r\n                </Card>\r\n              </Accordion>\r\n            </KTCodeExample>\r\n            <KTCodeExample\r\n              jsCode={jsCode3}\r\n              beforeCodeTitle=\"Entire Header Clickable\"\r\n            >\r\n              <span>\r\n                Each of the Card components in the Accordion can have their\r\n                entire header clickable, by setting the AccordionToggle's\r\n                underlying component to be a CardHeader component.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <Accordion defaultActiveKey=\"0\">\r\n                <Card>\r\n                  <Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n                    Click me!\r\n                  </Accordion.Toggle>\r\n                  <Accordion.Collapse eventKey=\"0\">\r\n                    <Card.Body>Hello! I'm the body</Card.Body>\r\n                  </Accordion.Collapse>\r\n                </Card>\r\n                <Card>\r\n                  <Accordion.Toggle as={Card.Header} eventKey=\"1\">\r\n                    Click me!\r\n                  </Accordion.Toggle>\r\n                  <Accordion.Collapse eventKey=\"1\">\r\n                    <Card.Body>Hello! I'm another body</Card.Body>\r\n                  </Accordion.Collapse>\r\n                </Card>\r\n              </Accordion>\r\n            </KTCodeExample>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <KTCodeExample\r\n              jsCode={jsCode2}\r\n              beforeCodeTitle=\"Fully Collapsed State\"\r\n            >\r\n              <span>\r\n                If you want your Accordion to start in a fully-collapsed state,\r\n                then simply don't pass in a <code>defaultActiveKey</code> prop\r\n                to <code>Accordion</code>.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <Accordion>\r\n                <Card>\r\n                  <Card.Header>\r\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n                      Click me!\r\n                    </Accordion.Toggle>\r\n                  </Card.Header>\r\n                  <Accordion.Collapse eventKey=\"0\">\r\n                    <Card.Body>Hello! I'm the body</Card.Body>\r\n                  </Accordion.Collapse>\r\n                </Card>\r\n                <Card>\r\n                  <Card.Header>\r\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\r\n                      Click me!\r\n                    </Accordion.Toggle>\r\n                  </Card.Header>\r\n                  <Accordion.Collapse eventKey=\"1\">\r\n                    <Card.Body>Hello! I'm another body</Card.Body>\r\n                  </Accordion.Collapse>\r\n                </Card>\r\n              </Accordion>\r\n            </KTCodeExample>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst jsCode1 = `\r\n<Accordion defaultActiveKey=\"0\">\r\n  <Card>\r\n    <Card.Header>\r\n      <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n        Click me!\r\n      </Accordion.Toggle>\r\n    </Card.Header>\r\n    <Accordion.Collapse eventKey=\"0\">\r\n      <Card.Body>Hello! I'm the body</Card.Body>\r\n    </Accordion.Collapse>\r\n  </Card>\r\n  <Card>\r\n    <Card.Header>\r\n      <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\r\n        Click me!\r\n      </Accordion.Toggle>\r\n    </Card.Header>\r\n    <Accordion.Collapse eventKey=\"1\">\r\n      <Card.Body>Hello! I'm another body</Card.Body>\r\n    </Accordion.Collapse>\r\n  </Card>\r\n</Accordion>\r\n`;\r\nconst jsCode2 = `\r\n<Accordion>\r\n  <Card>\r\n    <Card.Header>\r\n      <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n        Click me!\r\n      </Accordion.Toggle>\r\n    </Card.Header>\r\n    <Accordion.Collapse eventKey=\"0\">\r\n      <Card.Body>Hello! I'm the body</Card.Body>\r\n    </Accordion.Collapse>\r\n  </Card>\r\n  <Card>\r\n    <Card.Header>\r\n      <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\r\n        Click me!\r\n      </Accordion.Toggle>\r\n    </Card.Header>\r\n    <Accordion.Collapse eventKey=\"1\">\r\n      <Card.Body>Hello! I'm another body</Card.Body>\r\n    </Accordion.Collapse>\r\n  </Card>\r\n</Accordion>\r\n`;\r\nconst jsCode3 = `\r\n<Accordion defaultActiveKey=\"0\">\r\n  <Card>\r\n    <Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n      Click me!\r\n    </Accordion.Toggle>\r\n    <Accordion.Collapse eventKey=\"0\">\r\n      <Card.Body>Hello! I'm the body</Card.Body>\r\n    </Accordion.Collapse>\r\n  </Card>\r\n  <Card>\r\n    <Accordion.Toggle as={Card.Header} eventKey=\"1\">\r\n      Click me!\r\n    </Accordion.Toggle>\r\n    <Accordion.Collapse eventKey=\"1\">\r\n      <Card.Body>Hello! I'm another body</Card.Body>\r\n    </Accordion.Collapse>\r\n  </Card>\r\n</Accordion>\r\n`;\r\n","import React from \"react\";\r\nimport {Alert, Button} from \"react-bootstrap\";\r\nimport {Notice, KTCodeExample} from \"../../../_metronic/_partials/controls\";\r\n\r\nclass AlertDismissible extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { show: true };\r\n  }\r\n\r\n  render() {\r\n    const handleHide = () => this.setState({ show: false });\r\n    const handleShow = () => this.setState({ show: true });\r\n    return (\r\n      <>\r\n        <Alert show={this.state.show} variant=\"success\">\r\n          <Alert.Heading>How's it going?!</Alert.Heading>\r\n          <p>\r\n            Duis mollis, est non commodo luctus, nisi erat porttitor ligula,\r\n            eget lacinia odio sem nec elit. Cras mattis consectetur purus sit\r\n            amet fermentum.\r\n          </p>\r\n          <hr />\r\n          <div className=\"d-flex justify-content-end\">\r\n            <Button onClick={handleHide} variant=\"outline-success\">\r\n              Close me ya'll!\r\n            </Button>\r\n          </div>\r\n        </Alert>\r\n\r\n        {!this.state.show && <Button onClick={handleShow}>Show Alert</Button>}\r\n      </>\r\n    );\r\n  }\r\n}\r\nclass AlertDismissibleExample extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      show: true\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const handleDismiss = () => this.setState({ show: false });\r\n    const handleShow = () => this.setState({ show: true });\r\n    if (this.state.show) {\r\n      return (\r\n        <Alert variant=\"danger\" onClose={handleDismiss} dismissible>\r\n          <Alert.Heading>Oh snap! You got an error!</Alert.Heading>\r\n          <p>\r\n            Change this and that and try again. Duis mollis, est non commodo\r\n            luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit.\r\n            Cras mattis consectetur purus sit amet fermentum.\r\n          </p>\r\n        </Alert>\r\n      );\r\n    }\r\n    return <Button onClick={handleShow}>Show Alert</Button>;\r\n  }\r\n}\r\n\r\nexport default class AlertExamplesPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Notice icon=\"flaticon-warning font-primary\">\r\n          <span>\r\n            Provide contextual feedback messages for typical user actions with\r\n            the handful of available and flexible alert messages.\r\n          </span>{\" \"}\r\n          <span>\r\n            For more info please check the components's official{\" \"}\r\n            <a\r\n              target=\"_blank\"\r\n              className=\"font-weight-bold\"\r\n              rel=\"noopener noreferrer\"\r\n              href=\"https://react-bootstrap.github.io/components/alerts/\"\r\n            >\r\n              demos & documentation\r\n            </a>\r\n          </span>\r\n        </Notice>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <KTCodeExample jsCode={jsCode1} beforeCodeTitle=\"Examples\">\r\n              <span>\r\n                Alerts are available for any length of text, as well as an\r\n                optional dismiss button. For proper styling, use one of the\r\n                eight <code>variant</code>s.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <div>\r\n                {[\r\n                  \"primary\",\r\n                  \"secondary\",\r\n                  \"success\",\r\n                  \"danger\",\r\n                  \"warning\",\r\n                  \"info\",\r\n                  \"light\",\r\n                  \"dark\"\r\n                ].map((variant, idx) => (\r\n                  <Alert key={idx} variant={variant}>\r\n                    This is a {variant} alert—check it out!\r\n                  </Alert>\r\n                ))}\r\n              </div>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample\r\n              jsCode={jsCode3}\r\n              beforeCodeTitle=\"Additional content\"\r\n            >\r\n              <span>\r\n                Alerts can contain whatever content you like. Headers,\r\n                paragraphs, dividers, go crazy.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <Alert variant=\"success\">\r\n                <Alert.Heading>Hey, nice to see you</Alert.Heading>\r\n                <span className=\"pb-4\">\r\n                  Aww yeah, you successfully read this important alert message.\r\n                  This example text is going to run a bit longer so that you can\r\n                  see how spacing within an alert works with this kind of\r\n                  content.\r\n                </span>\r\n                <span>\r\n                  Whenever you need to, be sure to use margin utilities to keep\r\n                  things nice and tidy.\r\n                </span>\r\n              </Alert>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode4} beforeCodeTitle=\"Dismissing\">\r\n              <span>\r\n                Add the <code>dismissible</code> prop to add a functioning\r\n                dismiss button to the Alert.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <AlertDismissibleExample />\r\n            </KTCodeExample>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <KTCodeExample jsCode={jsCode2} beforeCodeTitle=\"Links\">\r\n              <span>\r\n                For links, use the <code>&lt;Alert.Link&gt;</code> component to\r\n                provide matching colored links within any alert.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <div>\r\n                {[\r\n                  \"primary\",\r\n                  \"secondary\",\r\n                  \"success\",\r\n                  \"danger\",\r\n                  \"warning\",\r\n                  \"info\",\r\n                  \"light\",\r\n                  \"dark\"\r\n                ].map((variant, idx) => (\r\n                  <Alert key={idx} variant={variant}>\r\n                    This is a {variant} alert with &nbsp;\r\n                    <Alert.Link href=\"#\">an example link</Alert.Link>. Give it a\r\n                    click if you like.\r\n                  </Alert>\r\n                ))}\r\n              </div>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode5} beforeCodeTitle=\"Dismissing\">\r\n              <span>\r\n                You can also control the visual state directly which is great if\r\n                you want to build more complicated alerts.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <AlertDismissible />\r\n            </KTCodeExample>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst jsCode1 = `\r\n[\r\n  'primary',\r\n  'secondary',\r\n  'success',\r\n  'danger',\r\n  'warning',\r\n  'info',\r\n  'light',\r\n  'dark',\r\n].map((variant, idx) => (\r\n  <Alert key={idx} variant={variant}>\r\n    This is a {variant} alert—check it out!\r\n  </Alert>\r\n));\r\n`;\r\nconst jsCode2 = `\r\n[\r\n  'primary',\r\n  'secondary',\r\n  'success',\r\n  'danger',\r\n  'warning',\r\n  'info',\r\n  'light',\r\n  'dark',\r\n].map((variant, idx) => (\r\n  <Alert key={idx} variant={variant}>\r\n    This is a {variant} alert with{' '}\r\n    <Alert.Link href=\"#\">an example link</Alert.Link>. Give it a click if you\r\n    like.\r\n  </Alert>\r\n));\r\n`;\r\nconst jsCode3 = `\r\n<Alert variant=\"success\">\r\n  <Alert.Heading>Hey, nice to see you</Alert.Heading>\r\n  <p>\r\n    Aww yeah, you successfully read this important alert message. This example\r\n    text is going to run a bit longer so that you can see how spacing within an\r\n    alert works with this kind of content.\r\n  </p>\r\n  <hr />\r\n  <p className=\"mb-0\">\r\n    Whenever you need to, be sure to use margin utilities to keep things nice\r\n    and tidy.\r\n  </p>\r\n</Alert>\r\n`;\r\nconst jsCode4 = `\r\nclass AlertDismissibleExample extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      show: true,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const handleDismiss = () => this.setState({ show: false });\r\n    const handleShow = () => this.setState({ show: true });\r\n    if (this.state.show) {\r\n      return (\r\n        <Alert variant=\"danger\" onClose={handleDismiss} dismissible>\r\n          <Alert.Heading>Oh snap! You got an error!</Alert.Heading>\r\n          <p>\r\n            Change this and that and try again. Duis mollis, est non commodo\r\n            luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit.\r\n            Cras mattis consectetur purus sit amet fermentum.\r\n          </p>\r\n        </Alert>\r\n      );\r\n    }\r\n    return <Button onClick={handleShow}>Show Alert</Button>;\r\n  }\r\n}\r\n\r\nrender(<AlertDismissibleExample />);\r\n`;\r\nconst jsCode5 = `\r\nclass AlertDismissible extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { show: true };\r\n  }\r\n\r\n  render() {\r\n    const handleHide = () => this.setState({ show: false });\r\n    const handleShow = () => this.setState({ show: true });\r\n    return (\r\n      <>\r\n        <Alert show={this.state.show} variant=\"success\">\r\n          <Alert.Heading>How's it going?!</Alert.Heading>\r\n          <p>\r\n            Duis mollis, est non commodo luctus, nisi erat porttitor ligula,\r\n            eget lacinia odio sem nec elit. Cras mattis consectetur purus sit\r\n            amet fermentum.\r\n          </p>\r\n          <hr />\r\n          <div className=\"d-flex justify-content-end\">\r\n            <Button onClick={handleHide} variant=\"outline-success\">\r\n              Close me ya'll!\r\n            </Button>\r\n          </div>\r\n        </Alert>\r\n\r\n        {!this.state.show && <Button onClick={handleShow}>Show Alert</Button>}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nrender(<AlertDismissible />);\r\n`;\r\n","import React from \"react\";\r\nimport {Badge, Button} from \"react-bootstrap\";\r\nimport {Notice, KTCodeExample} from \"../../../_metronic/_partials/controls\";\r\n\r\nexport default class BadgeExamplesPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Notice icon=\"flaticon-warning font-primary\">\r\n          <span>\r\n            Badges scale to match the size of the immediate parent element by\r\n            using relative font sizing and em units.\r\n          </span>{\" \"}\r\n          <span>\r\n            For more info please check the components's official{\" \"}\r\n            <a\r\n              target=\"_blank\"\r\n              className=\"font-weight-bold\"\r\n              rel=\"noopener noreferrer\"\r\n              href=\"https://react-bootstrap.github.io/components/badge/\"\r\n            >\r\n              demos & documentation\r\n            </a>\r\n          </span>\r\n        </Notice>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <KTCodeExample jsCode={jsCode1} beforeCodeTitle=\"Basic Example\">\r\n              <div>\r\n                <h1>\r\n                  Example heading <Badge variant=\"secondary\">New</Badge>\r\n                </h1>\r\n                <h2>\r\n                  Example heading <Badge variant=\"secondary\">New</Badge>\r\n                </h2>\r\n                <h3>\r\n                  Example heading <Badge variant=\"secondary\">New</Badge>\r\n                </h3>\r\n                <h4>\r\n                  Example heading <Badge variant=\"secondary\">New</Badge>\r\n                </h4>\r\n                <h5>\r\n                  Example heading <Badge variant=\"secondary\">New</Badge>\r\n                </h5>\r\n                <h6>\r\n                  Example heading <Badge variant=\"secondary\">New</Badge>\r\n                </h6>\r\n              </div>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample\r\n              jsCode={jsCode3}\r\n              beforeCodeTitle=\"Contextual variations\"\r\n            >\r\n              <span>\r\n                Add any of the below mentioned modifier classes to change the\r\n                appearance of a badge.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <div>\r\n                <Badge variant=\"primary\" className=\"mr-1\">\r\n                  Primary\r\n                </Badge>\r\n                <Badge variant=\"secondary\" className=\"mr-1\">\r\n                  Secondary\r\n                </Badge>\r\n                <Badge variant=\"success\" className=\"mr-1\">\r\n                  Success\r\n                </Badge>\r\n                <Badge variant=\"danger\" className=\"mr-1\">\r\n                  Danger\r\n                </Badge>\r\n                <Badge variant=\"warning\" className=\"mr-1\">\r\n                  Warning\r\n                </Badge>\r\n                <Badge variant=\"info\" className=\"mr-1\">\r\n                  Info\r\n                </Badge>\r\n                <Badge variant=\"light\" className=\"mr-1\">\r\n                  Light\r\n                </Badge>\r\n                <Badge variant=\"dark\">Dark</Badge>\r\n              </div>\r\n            </KTCodeExample>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <KTCodeExample jsCode={jsCode2} beforeCodeTitle=\"Button\">\r\n              <span>\r\n                Badges can be used as part of links or buttons to provide a\r\n                counter.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <Button variant=\"primary\">\r\n                Profile <Badge variant=\"light\">9</Badge>\r\n                <span className=\"sr-only\">unread messages</span>\r\n              </Button>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode4} beforeCodeTitle=\"Pill\">\r\n              <span>\r\n                badges Use the <code>pill</code> modifier class to make badges\r\n                more rounded (with a larger border-radius and additional\r\n                horizontal <code>padding</code>). Useful if you miss the badges\r\n                from v3.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <div>\r\n                <Badge pill variant=\"primary\" className=\"mr-1\">\r\n                  Primary\r\n                </Badge>\r\n                <Badge pill variant=\"secondary\" className=\"mr-1\">\r\n                  Secondary\r\n                </Badge>\r\n                <Badge pill variant=\"success\" className=\"mr-1\">\r\n                  Success\r\n                </Badge>\r\n                <Badge pill variant=\"danger\" className=\"mr-1\">\r\n                  Danger\r\n                </Badge>\r\n                <Badge pill variant=\"warning\" className=\"mr-1\">\r\n                  Warning\r\n                </Badge>\r\n                <Badge pill variant=\"info\" className=\"mr-1\">\r\n                  Info\r\n                </Badge>\r\n                <Badge pill variant=\"light\" className=\"mr-1\">\r\n                  Light\r\n                </Badge>\r\n                <Badge pill variant=\"dark\">\r\n                  Dark\r\n                </Badge>\r\n              </div>\r\n            </KTCodeExample>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst jsCode1 = `\r\n<div>\r\n  <h1>\r\n    Example heading <Badge variant=\"secondary\">New</Badge>\r\n  </h1>\r\n  <h2>\r\n    Example heading <Badge variant=\"secondary\">New</Badge>\r\n  </h2>\r\n  <h3>\r\n    Example heading <Badge variant=\"secondary\">New</Badge>\r\n  </h3>\r\n  <h4>\r\n    Example heading <Badge variant=\"secondary\">New</Badge>\r\n  </h4>\r\n  <h5>\r\n    Example heading <Badge variant=\"secondary\">New</Badge>\r\n  </h5>\r\n  <h6>\r\n    Example heading <Badge variant=\"secondary\">New</Badge>\r\n  </h6>\r\n</div>\r\n`;\r\nconst jsCode2 = `\r\n<Button variant=\"primary\">\r\n  Profile <Badge variant=\"light\">9</Badge>\r\n  <span className=\"sr-only\">unread messages</span>\r\n</Button>\r\n`;\r\nconst jsCode3 = `\r\n<div>\r\n  <Badge variant=\"primary\">Primary</Badge>\r\n  <Badge variant=\"secondary\">Secondary</Badge>\r\n  <Badge variant=\"success\">Success</Badge>\r\n  <Badge variant=\"danger\">Danger</Badge>\r\n  <Badge variant=\"warning\">Warning</Badge>\r\n  <Badge variant=\"info\">Info</Badge>\r\n  <Badge variant=\"light\">Light</Badge>\r\n  <Badge variant=\"dark\">Dark</Badge>\r\n</div>\r\n`;\r\nconst jsCode4 = `\r\n<div>\r\n  <Badge pill variant=\"primary\">\r\n    Primary\r\n  </Badge>\r\n  <Badge pill variant=\"secondary\">\r\n    Secondary\r\n  </Badge>\r\n  <Badge pill variant=\"success\">\r\n    Success\r\n  </Badge>\r\n  <Badge pill variant=\"danger\">\r\n    Danger\r\n  </Badge>\r\n  <Badge pill variant=\"warning\">\r\n    Warning\r\n  </Badge>\r\n  <Badge pill variant=\"info\">\r\n    Info\r\n  </Badge>\r\n  <Badge pill variant=\"light\">\r\n    Light\r\n  </Badge>\r\n  <Badge pill variant=\"dark\">\r\n    Dark\r\n  </Badge>\r\n</div>\r\n`;\r\n","import React from \"react\";\r\nimport {Breadcrumb} from \"react-bootstrap\";\r\nimport {Notice, KTCodeExample} from \"../../../_metronic/_partials/controls\";\r\n\r\nexport default class BreadcrumbExamplesPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Notice icon=\"flaticon-warning font-primary\">\r\n          <span>\r\n            Indicate the current page’s location within a navigational hierarchy\r\n            that automatically adds separators via CSS. Add <code>active</code>{\" \"}\r\n            prop to active <code>Breadcrumb.Item</code>.\r\n          </span>{\" \"}\r\n          <span>\r\n            For more info please check the components's official{\" \"}\r\n            <a\r\n              target=\"_blank\"\r\n              className=\"font-weight-bold\"\r\n              rel=\"noopener noreferrer\"\r\n              href=\"https://react-bootstrap.github.io/components/breadcrumb/\"\r\n            >\r\n              demos & documentation\r\n            </a>\r\n          </span>\r\n        </Notice>\r\n\r\n        <KTCodeExample jsCode={jsCode1} beforeCodeTitle=\"Example\">\r\n          <Breadcrumb>\r\n            <Breadcrumb.Item href=\"#\">Home</Breadcrumb.Item>\r\n            <Breadcrumb.Item href=\"https://getbootstrap.com/docs/4.0/components/breadcrumb/\">\r\n              Library\r\n            </Breadcrumb.Item>\r\n            <Breadcrumb.Item active>Data</Breadcrumb.Item>\r\n          </Breadcrumb>\r\n        </KTCodeExample>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst jsCode1 = `\r\n<Breadcrumb>\r\n  <Breadcrumb.Item href=\"#\">Home</Breadcrumb.Item>\r\n  <Breadcrumb.Item href=\"https://getbootstrap.com/docs/4.0/components/breadcrumb/\">\r\n    Library\r\n  </Breadcrumb.Item>\r\n  <Breadcrumb.Item active>Data</Breadcrumb.Item>\r\n</Breadcrumb>\r\n`;\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport {\r\n  Button,\r\n  ButtonToolbar,\r\n  ButtonGroup,\r\n  ToggleButton,\r\n  ToggleButtonGroup\r\n} from \"react-bootstrap\";\r\nimport {Notice, KTCodeExample} from \"../../../_metronic/_partials/controls\";\r\n\r\nfunction simulateNetworkRequest() {\r\n  return new Promise(resolve => setTimeout(resolve, 2000));\r\n}\r\n\r\nclass LoadingButton extends React.Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.handleClick = this.handleClick.bind(this);\r\n\r\n    this.state = {\r\n      isLoading: false\r\n    };\r\n  }\r\n\r\n  handleClick() {\r\n    this.setState({ isLoading: true }, () => {\r\n      simulateNetworkRequest().then(() => {\r\n        this.setState({ isLoading: false });\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { isLoading } = this.state;\r\n\r\n    return (\r\n      <Button\r\n        variant=\"primary\"\r\n        disabled={isLoading}\r\n        onClick={!isLoading ? this.handleClick : null}\r\n      >\r\n        {isLoading ? \"Loading…\" : \"Click to load\"}\r\n      </Button>\r\n    );\r\n  }\r\n}\r\n\r\nclass ToggleButtonGroupControlled extends React.Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n\r\n    this.state = {\r\n      value: [1, 3]\r\n    };\r\n  }\r\n\r\n  handleChange(value, event) {\r\n    this.setState({ value });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ToggleButtonGroup\r\n        type=\"checkbox\"\r\n        onChange={this.handleChange}\r\n        defaultValue={this.state.value}\r\n        name=\"toggleButtonGroup\"\r\n      >\r\n        <ToggleButton value={1} onChange={() => {}}>\r\n          Option 1\r\n        </ToggleButton>\r\n        <ToggleButton value={2} onChange={() => {}}>\r\n          Option 2\r\n        </ToggleButton>\r\n        <ToggleButton value={3} onChange={() => {}}>\r\n          Option 3\r\n        </ToggleButton>\r\n      </ToggleButtonGroup>\r\n    );\r\n  }\r\n}\r\n\r\nexport default class ButtonsExamplesPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Notice icon=\"flaticon-warning font-primary\">\r\n          <span>\r\n            Custom button styles for actions in forms, dialogs, and more with\r\n            support for multiple sizes, states, and more.\r\n          </span>{\" \"}\r\n          <span>\r\n            For more info please check the components's official{\" \"}\r\n            <a\r\n              target=\"_blank\"\r\n              className=\"font-weight-bold\"\r\n              rel=\"noopener noreferrer\"\r\n              href=\"\"\r\n            >\r\n              demos & documentation\r\n            </a>\r\n          </span>\r\n        </Notice>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <KTCodeExample jsCode={jsCode1} beforeCodeTitle=\"Examples\">\r\n              <span>\r\n                Use any of the available button style types to quickly create a\r\n                styled button. Just modify the <code>variant</code> prop.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\" />\r\n              <ButtonToolbar>\r\n                <div className=\"mb-3\">\r\n                  <span className=\"pr-4\">\r\n                    <Button variant=\"primary\">Primary</Button>\r\n                  </span>\r\n                  <span className=\"pr-4\">\r\n                    <Button variant=\"secondary\">Secondary</Button>\r\n                  </span>\r\n                  <span className=\"pr-4\">\r\n                    <Button variant=\"success\">Success</Button>\r\n                  </span>\r\n                  <span className=\"pr-4\">\r\n                    <Button variant=\"warning\">Warning</Button>\r\n                  </span>\r\n                  <span className=\"pr-4\">\r\n                    <Button variant=\"danger\">Danger</Button>\r\n                  </span>\r\n                  <span className=\"pr-4\">\r\n                    <Button variant=\"info\">Info</Button>\r\n                  </span>\r\n                </div>\r\n                <div>\r\n                  <span className=\"pr-4\">\r\n                    <Button variant=\"light\">Light</Button>\r\n                  </span>\r\n                  <span className=\"pr-4\">\r\n                    <Button variant=\"dark\">Dark</Button>\r\n                  </span>\r\n                  <span className=\"pr-4\">\r\n                    <Button variant=\"link\">Link</Button>\r\n                  </span>\r\n                </div>\r\n              </ButtonToolbar>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode3} beforeCodeTitle=\"Button tags\">\r\n              <span>\r\n                Normally <code>&lt;Button&gt;</code> components will render a\r\n                HTML <code>&lt;button&gt;</code> element. However you can render\r\n                whatever you'd like, adding a <code>href</code> prop will\r\n                automatically render an <code>&lt;a /&gt;</code> element. You\r\n                can use the <code>as</code> prop to render whatever your heart\r\n                desires. React Bootstrap will take care of the proper ARIA roles\r\n                for you.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\" />\r\n              <ButtonToolbar className=\"pb-2\">\r\n                <span className=\"pr-1\">\r\n                  <Button href=\"#\">Link</Button>\r\n                </span>\r\n                <span className=\"pr-1\">\r\n                  <Button type=\"submit\">Button</Button>\r\n                </span>\r\n                <span className=\"pr-1\">\r\n                  <Button\r\n                    as=\"input\"\r\n                    type=\"button\"\r\n                    value=\"Input\"\r\n                    onChange={() => {}}\r\n                  />\r\n                </span>\r\n              </ButtonToolbar>\r\n              <ButtonToolbar>\r\n                <span className=\"pr-1\">\r\n                  <Button\r\n                    as=\"input\"\r\n                    type=\"submit\"\r\n                    value=\"Submit\"\r\n                    onChange={() => {}}\r\n                  />\r\n                </span>\r\n                <span className=\"pr-1\">\r\n                  <Button\r\n                    as=\"input\"\r\n                    type=\"reset\"\r\n                    value=\"Reset\"\r\n                    onChange={() => {}}\r\n                  />\r\n                </span>\r\n              </ButtonToolbar>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode5} beforeCodeTitle=\"Sizes\">\r\n              <span>\r\n                Create block level buttons—those that span the full width of a\r\n                parent—by adding block\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\" />\r\n              <div>\r\n                <Button variant=\"primary\" size=\"lg\" block>\r\n                  Block level button\r\n                </Button>\r\n                <Button variant=\"secondary\" size=\"lg\" block>\r\n                  Block level button\r\n                </Button>\r\n              </div>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode7} beforeCodeTitle=\"Disabled state\">\r\n              <span>\r\n                Make buttons look inactive by adding the <code>disabled</code>{\" \"}\r\n                prop to.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\" />\r\n              <ButtonToolbar>\r\n                <span className=\"pr-4\">\r\n                  <Button variant=\"primary\" size=\"lg\" disabled>\r\n                    Primary button\r\n                  </Button>\r\n                </span>\r\n                <span className=\"pr-4\">\r\n                  <Button variant=\"secondary\" size=\"lg\" disabled>\r\n                    Button\r\n                  </Button>\r\n                </span>\r\n                <span className=\"pr-4\">\r\n                  <Button href=\"#\" variant=\"secondary\" size=\"lg\" disabled>\r\n                    Link\r\n                  </Button>\r\n                </span>\r\n              </ButtonToolbar>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode9} beforeCodeTitle=\"Checkbox / Radio\">\r\n              <span>\r\n                Button's can also be used to style <code>checkbox</code> and{\" \"}\r\n                <code>radio</code> form elements. This is helpful when you want\r\n                a toggle button that works neatly inside an HTML form.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\" />\r\n              <div className=\"d-flex flex-column\">\r\n                <ButtonGroup toggle>\r\n                  <ToggleButton type=\"checkbox\" defaultChecked value=\"1\">\r\n                    Checked\r\n                  </ToggleButton>\r\n                </ButtonGroup>\r\n                <ButtonGroup toggle className=\"mt-3\">\r\n                  <ToggleButton\r\n                    type=\"radio\"\r\n                    name=\"radio\"\r\n                    defaultChecked\r\n                    value=\"1\"\r\n                  >\r\n                    Active\r\n                  </ToggleButton>\r\n                  <ToggleButton type=\"radio\" name=\"radio\" value=\"2\">\r\n                    Radio\r\n                  </ToggleButton>\r\n                  <ToggleButton type=\"radio\" name=\"radio\" value=\"3\">\r\n                    Radio\r\n                  </ToggleButton>\r\n                </ButtonGroup>\r\n              </div>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode11} beforeCodeTitle=\"Controlled\">\r\n              <ToggleButtonGroupControlled />\r\n            </KTCodeExample>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <KTCodeExample jsCode={jsCode2} beforeCodeTitle=\"Outline buttons\">\r\n              <span>\r\n                For a lighter touch, Buttons also come in <code>outline-*</code>{\" \"}\r\n                variants with no background color.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\" />\r\n              <ButtonToolbar>\r\n                <p>\r\n                  <span className=\"pr-4\">\r\n                    <Button variant=\"outline-primary\">Primary</Button>\r\n                  </span>\r\n                  <span className=\"pr-4\">\r\n                    <Button variant=\"outline-secondary\">Secondary</Button>\r\n                  </span>\r\n                  <span className=\"pr-4\">\r\n                    <Button variant=\"outline-success\">Success</Button>\r\n                  </span>\r\n                  <span className=\"pr-4\">\r\n                    <Button variant=\"outline-warning\">Warning</Button>\r\n                  </span>\r\n                  <span className=\"pr-4\">\r\n                    <Button variant=\"outline-danger\">Danger</Button>\r\n                  </span>\r\n                </p>\r\n                <p>\r\n                  <span className=\"pr-4\">\r\n                    <Button variant=\"outline-info\">Info</Button>\r\n                  </span>\r\n                  <span className=\"pr-4\">\r\n                    <Button variant=\"outline-dark\">Dark</Button>\r\n                  </span>\r\n                  <span className=\"pr-4\">\r\n                    <Button variant=\"outline-light\">Light</Button>\r\n                  </span>\r\n                </p>\r\n              </ButtonToolbar>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode4} beforeCodeTitle=\"Sizes\">\r\n              <span>\r\n                Fancy larger or smaller buttons? Add <code>size=\"lg\"</code>,{\" \"}\r\n                <code>size=\"sm\"</code> for additional sizes.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\" />\r\n              <div className=\"mb-3\">\r\n                <ButtonToolbar>\r\n                  <span className=\"pr-4\">\r\n                    <Button variant=\"primary\" size=\"lg\">\r\n                      Large button\r\n                    </Button>\r\n                  </span>\r\n                  <span className=\"pr-4\">\r\n                    <Button variant=\"secondary\" size=\"lg\">\r\n                      Large button\r\n                    </Button>\r\n                  </span>\r\n                </ButtonToolbar>\r\n              </div>\r\n              <div>\r\n                <ButtonToolbar>\r\n                  <span className=\"pr-4\">\r\n                    <Button variant=\"primary\" size=\"sm\">\r\n                      Small button\r\n                    </Button>\r\n                  </span>\r\n                  <span className=\"pr-4\">\r\n                    <Button variant=\"secondary\" size=\"sm\">\r\n                      Small button\r\n                    </Button>\r\n                  </span>\r\n                </ButtonToolbar>\r\n              </div>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode6} beforeCodeTitle=\"Active state\">\r\n              <span>\r\n                To set a buttons active state simply set the components{\" \"}\r\n                <code>active</code> prop.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\" />\r\n              <ButtonToolbar>\r\n                <span className=\"pr-4\">\r\n                  <Button variant=\"primary\" size=\"lg\" active>\r\n                    Primary button\r\n                  </Button>\r\n                </span>\r\n                <span className=\"pr-4\">\r\n                  <Button variant=\"secondary\" size=\"lg\" active>\r\n                    Button\r\n                  </Button>\r\n                </span>\r\n              </ButtonToolbar>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample\r\n              jsCode={jsCode8}\r\n              beforeCodeTitle=\"Button loading state\"\r\n            >\r\n              <span>\r\n                When activating an asynchronous action from a button it is a\r\n                good UX pattern to give the user feedback as to the loading\r\n                state, this can easily be done by updating your{\" \"}\r\n                <code>&lt;Button /&gt;</code>s props from a state change like\r\n                below.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\" />\r\n              <LoadingButton />\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode10} beforeCodeTitle=\"Uncontrolled\">\r\n              <div className=\"mb-3\">\r\n                <ButtonToolbar>\r\n                  <ToggleButtonGroup\r\n                    type=\"checkbox\"\r\n                    defaultValue={[1, 3]}\r\n                    name=\"Uncontrolled\"\r\n                  >\r\n                    <ToggleButton value={1}>\r\n                      Checkbox 1 (pre-checked)\r\n                    </ToggleButton>\r\n                    <ToggleButton value={2}>Checkbox 2</ToggleButton>\r\n                    <ToggleButton value={3}>\r\n                      Checkbox 3 (pre-checked)\r\n                    </ToggleButton>\r\n                  </ToggleButtonGroup>\r\n                </ButtonToolbar>\r\n              </div>\r\n              <div>\r\n                <ButtonToolbar>\r\n                  <ToggleButtonGroup\r\n                    type=\"radio\"\r\n                    name=\"options\"\r\n                    defaultValue={1}\r\n                  >\r\n                    <ToggleButton value={1}>Radio 1 (pre-checked)</ToggleButton>\r\n                    <ToggleButton value={2}>Radio 2</ToggleButton>\r\n                    <ToggleButton value={3}>Radio 3</ToggleButton>\r\n                  </ToggleButtonGroup>\r\n                </ButtonToolbar>\r\n              </div>\r\n            </KTCodeExample>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst jsCode1 = `\r\n<ButtonToolbar>\r\n  <Button variant=\"primary\">Primary</Button>\r\n  <Button variant=\"secondary\">Secondary</Button>\r\n  <Button variant=\"success\">Success</Button>\r\n  <Button variant=\"warning\">Warning</Button>\r\n  <Button variant=\"danger\">Danger</Button>\r\n  <Button variant=\"info\">Info</Button>\r\n  <Button variant=\"light\">Light</Button>\r\n  <Button variant=\"dark\">Dark</Button>\r\n  <Button variant=\"link\">Link</Button>\r\n</ButtonToolbar>\r\n`;\r\nconst jsCode2 = `\r\n<ButtonToolbar>\r\n  <Button variant=\"outline-primary\">Primary</Button>\r\n  <Button variant=\"outline-secondary\">Secondary</Button>\r\n  <Button variant=\"outline-success\">Success</Button>\r\n  <Button variant=\"outline-warning\">Warning</Button>\r\n  <Button variant=\"outline-danger\">Danger</Button>\r\n  <Button variant=\"outline-info\">Info</Button>\r\n  <Button variant=\"outline-light\">Light</Button>\r\n  <Button variant=\"outline-dark\">Dark</Button>\r\n</ButtonToolbar>\r\n`;\r\nconst jsCode3 = `\r\n<ButtonToolbar>\r\n  <Button href=\"#\">Link</Button>\r\n  <Button type=\"submit\">Button</Button>\r\n  <Button as=\"input\" type=\"button\" value=\"Input\" />\r\n  <Button as=\"input\" type=\"submit\" value=\"Submit\" />\r\n  <Button as=\"input\" type=\"reset\" value=\"Reset\" />\r\n</ButtonToolbar>\r\n`;\r\nconst jsCode4 = `\r\n<div>\r\n  <ButtonToolbar>\r\n    <Button variant=\"primary\" size=\"lg\">\r\n      Large button\r\n    </Button>\r\n    <Button variant=\"secondary\" size=\"lg\">\r\n      Large button\r\n    </Button>\r\n  </ButtonToolbar>\r\n\r\n  <ButtonToolbar>\r\n    <Button variant=\"primary\" size=\"sm\">\r\n      Small button\r\n    </Button>\r\n    <Button variant=\"secondary\" size=\"sm\">\r\n      Small button\r\n    </Button>\r\n  </ButtonToolbar>\r\n</div>\r\n`;\r\nconst jsCode5 = `\r\n<div>\r\n  <Button variant=\"primary\" size=\"lg\" block>\r\n    Block level button\r\n  </Button>\r\n  <Button variant=\"secondary\" size=\"lg\" block>\r\n    Block level button\r\n  </Button>\r\n</div>\r\n`;\r\nconst jsCode6 = `\r\n<ButtonToolbar>\r\n  <Button variant=\"primary\" size=\"lg\" active>\r\n    Primary button\r\n  </Button>\r\n  <Button variant=\"secondary\" size=\"lg\" active>\r\n    Button\r\n  </Button>\r\n</ButtonToolbar>\r\n`;\r\nconst jsCode7 = `\r\n<ButtonToolbar>\r\n  <Button variant=\"primary\" size=\"lg\" disabled>\r\n    Primary button\r\n  </Button>{' '}\r\n  <Button variant=\"secondary\" size=\"lg\" disabled>\r\n    Button\r\n  </Button>{' '}\r\n  <Button href=\"#\" variant=\"secondary\" size=\"lg\" disabled>\r\n    Link\r\n  </Button>\r\n</ButtonToolbar>\r\n`;\r\nconst jsCode8 = `\r\nfunction simulateNetworkRequest() {\r\n  return new Promise(resolve => setTimeout(resolve, 2000));\r\n}\r\n\r\nclass LoadingButton extends React.Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.handleClick = this.handleClick.bind(this);\r\n\r\n    this.state = {\r\n      isLoading: false,\r\n    };\r\n  }\r\n\r\n  handleClick() {\r\n    this.setState({ isLoading: true }, () => {\r\n      simulateNetworkRequest().then(() => {\r\n        this.setState({ isLoading: false });\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { isLoading } = this.state;\r\n\r\n    return (\r\n      <Button\r\n        variant=\"primary\"\r\n        disabled={isLoading}\r\n        onClick={!isLoading ? this.handleClick : null}\r\n      >\r\n        {isLoading ? 'Loading…' : 'Click to load'}\r\n      </Button>\r\n    );\r\n  }\r\n}\r\n\r\nrender(<LoadingButton />);\r\n`;\r\nconst jsCode9 = `\r\n<div className=\"d-flex flex-column\">\r\n  <ButtonGroup toggle>\r\n    <ToggleButton type=\"checkbox\" defaultChecked value=\"1\">\r\n      Checked\r\n    </ToggleButton>\r\n  </ButtonGroup>\r\n  <ButtonGroup toggle className=\"mt-3\">\r\n    <ToggleButton type=\"radio\" name=\"radio\" defaultChecked value=\"1\">\r\n      Active\r\n    </ToggleButton>\r\n    <ToggleButton type=\"radio\" name=\"radio\" value=\"2\">\r\n      Radio\r\n    </ToggleButton>\r\n    <ToggleButton type=\"radio\" name=\"radio\" value=\"3\">\r\n      Radio\r\n    </ToggleButton>\r\n  </ButtonGroup>\r\n</div>\r\n`;\r\nconst jsCode10 = `\r\n<>\r\n  <ButtonToolbar>\r\n    <ToggleButtonGroup type=\"checkbox\" defaultValue={[1, 3]}>\r\n      <ToggleButton value={1}>Checkbox 1 (pre-checked)</ToggleButton>\r\n      <ToggleButton value={2}>Checkbox 2</ToggleButton>\r\n      <ToggleButton value={3}>Checkbox 3 (pre-checked)</ToggleButton>\r\n    </ToggleButtonGroup>\r\n  </ButtonToolbar>\r\n\r\n  <ButtonToolbar>\r\n    <ToggleButtonGroup type=\"radio\" name=\"options\" defaultValue={1}>\r\n      <ToggleButton value={1}>Radio 1 (pre-checked)</ToggleButton>\r\n      <ToggleButton value={2}>Radio 2</ToggleButton>\r\n      <ToggleButton value={3}>Radio 3</ToggleButton>\r\n    </ToggleButtonGroup>\r\n  </ButtonToolbar>\r\n</>\r\n`;\r\nconst jsCode11 = `\r\nclass ToggleButtonGroupControlled extends React.Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n\r\n    this.state = {\r\n      value: [1, 3],\r\n    };\r\n  }\r\n\r\n  handleChange(value, event) {\r\n    this.setState({ value });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ToggleButtonGroup\r\n        type=\"checkbox\"\r\n        value={this.state.value}\r\n        onChange={this.handleChange}\r\n      >\r\n        <ToggleButton value={1}>Option 1</ToggleButton>\r\n        <ToggleButton value={2}>Option 2</ToggleButton>\r\n        <ToggleButton value={3}>Option 3</ToggleButton>\r\n      </ToggleButtonGroup>\r\n    );\r\n  }\r\n}\r\n\r\nrender(<ToggleButtonGroupControlled />);\r\n`;\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  ButtonToolbar,\r\n  InputGroup,\r\n  FormControl,\r\n  Dropdown,\r\n  DropdownButton\r\n} from \"react-bootstrap\";\r\nimport {Notice, KTCodeExample} from \"../../../_metronic/_partials/controls\";\r\n\r\nexport default class ButtonGroupExamplesPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Notice icon=\"flaticon-warning font-primary\">\r\n          <span>\r\n            Group a series of buttons together on a single line with the button\r\n            group.\r\n          </span>{\" \"}\r\n          <span>\r\n            For more info please check the components's official{\" \"}\r\n            <a\r\n              target=\"_blank\"\r\n              className=\"font-weight-bold\"\r\n              rel=\"noopener noreferrer\"\r\n              href=\"https://react-bootstrap.github.io/components/button-group/\"\r\n            >\r\n              demos & documentation\r\n            </a>\r\n          </span>\r\n        </Notice>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <KTCodeExample jsCode={jsCode1} beforeCodeTitle=\"Basic example\">\r\n              <span>\r\n                Wrap a series of <code>&lt;Button&gt;</code>s in a{\" \"}\r\n                <code>&lt;ButtonGroup&gt;</code>.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <ButtonGroup aria-label=\"Basic example\">\r\n                <Button variant=\"secondary\">Left</Button>\r\n                <Button variant=\"secondary\">Middle</Button>\r\n                <Button variant=\"secondary\">Right</Button>\r\n              </ButtonGroup>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode3} beforeCodeTitle=\"Button Toolbar\">\r\n              <span>\r\n                Feel free to mix input groups with button groups in your\r\n                toolbars. Similar to the example above, you’ll likely need some\r\n                utilities though to space things properly.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <div>\r\n                <ButtonToolbar\r\n                  className=\"mb-3\"\r\n                  aria-label=\"Toolbar with Button groups\"\r\n                >\r\n                  <ButtonGroup className=\"mr-2\" aria-label=\"First group\">\r\n                    <Button variant=\"secondary\">1</Button>\r\n                    <Button variant=\"secondary\">2</Button>\r\n                    <Button variant=\"secondary\">3</Button>\r\n                    <Button variant=\"secondary\">4</Button>\r\n                  </ButtonGroup>\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                      <InputGroup.Text id=\"btnGroupAddon\">@</InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <FormControl\r\n                      type=\"text\"\r\n                      placeholder=\"Input group example\"\r\n                      aria-label=\"Input group example\"\r\n                      aria-describedby=\"btnGroupAddon\"\r\n                    />\r\n                  </InputGroup>\r\n                </ButtonToolbar>\r\n\r\n                <ButtonToolbar\r\n                  className=\"justify-content-between\"\r\n                  aria-label=\"Toolbar with Button groups\"\r\n                >\r\n                  <ButtonGroup aria-label=\"First group\">\r\n                    <Button variant=\"secondary\">1</Button>\r\n                    <Button variant=\"secondary\">2</Button>\r\n                    <Button variant=\"secondary\">3</Button>\r\n                    <Button variant=\"secondary\">4</Button>\r\n                  </ButtonGroup>\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                      <InputGroup.Text id=\"btnGroupAddon2\">@</InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <FormControl\r\n                      type=\"text\"\r\n                      placeholder=\"Input group example\"\r\n                      aria-label=\"Input group example\"\r\n                      aria-describedby=\"btnGroupAddon2\"\r\n                    />\r\n                  </InputGroup>\r\n                </ButtonToolbar>\r\n              </div>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode5} beforeCodeTitle=\"Nesting\">\r\n              <span>\r\n                You can place other button types within the{\" \"}\r\n                <code>&lt;ButtonGroup&gt;</code> like{\" \"}\r\n                <code>&lt;DropdownButton&gt;</code>s.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <ButtonGroup>\r\n                <Button>1</Button>\r\n                <Button>2</Button>\r\n                <DropdownButton\r\n                  as={ButtonGroup}\r\n                  title=\"Dropdown\"\r\n                  id=\"bg-nested-dropdown\"\r\n                >\r\n                  <Dropdown.Item eventKey=\"1\">Dropdown link</Dropdown.Item>\r\n                  <Dropdown.Item eventKey=\"2\">Dropdown link</Dropdown.Item>\r\n                </DropdownButton>\r\n              </ButtonGroup>\r\n            </KTCodeExample>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <KTCodeExample jsCode={jsCode2} beforeCodeTitle=\"Button toolbar\">\r\n              <span>\r\n                Combine sets of <code>&lt;ButtonGroup&gt;</code>s into a{\" \"}\r\n                <code>&lt;ButtonToolbar&gt;</code> for more complex components.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <ButtonToolbar aria-label=\"Toolbar with button groups\">\r\n                <ButtonGroup className=\"mr-2\" aria-label=\"First group\">\r\n                  <Button>1</Button>\r\n                  <Button>2</Button>\r\n                  <Button>3</Button>\r\n                  <Button>4</Button>\r\n                </ButtonGroup>\r\n\r\n                <ButtonGroup className=\"mr-2\" aria-label=\"Second group\">\r\n                  <Button>5</Button>\r\n                  <Button>6</Button>\r\n                  <Button>7</Button>\r\n                </ButtonGroup>\r\n\r\n                <ButtonGroup aria-label=\"Third group\">\r\n                  <Button>8</Button>\r\n                </ButtonGroup>\r\n              </ButtonToolbar>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode4} beforeCodeTitle=\"Sizing\">\r\n              <span>\r\n                Instead of applying button sizing props to every button in a\r\n                group, just add <code>size</code> prop to the{\" \"}\r\n                <code>&lt;ButtonGroup&gt;</code>.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <div className=\"d-flex flex-column\">\r\n                <ButtonGroup size=\"lg\">\r\n                  <Button>Left</Button>\r\n                  <Button>Middle</Button>\r\n                  <Button>Right</Button>\r\n                </ButtonGroup>\r\n\r\n                <ButtonGroup className=\"mt-3\">\r\n                  <Button>Left</Button>\r\n                  <Button>Middle</Button>\r\n                  <Button>Right</Button>\r\n                </ButtonGroup>\r\n                <ButtonGroup size=\"sm\" className=\"mt-3\">\r\n                  <Button>Left</Button>\r\n                  <Button>Middle</Button>\r\n                  <Button>Right</Button>\r\n                </ButtonGroup>\r\n              </div>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample\r\n              jsCode={jsCode6}\r\n              beforeCodeTitle=\"Vertical variation\"\r\n            >\r\n              <span>\r\n                Make a set of buttons appear vertically stacked rather than\r\n                horizontally, by adding <code>vertical</code> to the{\" \"}\r\n                <code>&lt;ButtonGroup&gt;</code>. Split button dropdowns are not\r\n                supported here.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <ButtonGroup vertical>\r\n                <Button>Button</Button>\r\n                <Button>Button</Button>\r\n                <DropdownButton\r\n                  as={ButtonGroup}\r\n                  title=\"Dropdown\"\r\n                  id=\"bg-vertical-dropdown-1\"\r\n                >\r\n                  <Dropdown.Item eventKey=\"1\">Dropdown link</Dropdown.Item>\r\n                  <Dropdown.Item eventKey=\"2\">Dropdown link</Dropdown.Item>\r\n                </DropdownButton>\r\n                <Button>Button</Button>\r\n                <Button>Button</Button>\r\n                <DropdownButton\r\n                  as={ButtonGroup}\r\n                  title=\"Dropdown\"\r\n                  id=\"bg-vertical-dropdown-2\"\r\n                >\r\n                  <Dropdown.Item eventKey=\"1\">Dropdown link</Dropdown.Item>\r\n                  <Dropdown.Item eventKey=\"2\">Dropdown link</Dropdown.Item>\r\n                </DropdownButton>\r\n                <DropdownButton\r\n                  as={ButtonGroup}\r\n                  title=\"Dropdown\"\r\n                  id=\"bg-vertical-dropdown-3\"\r\n                >\r\n                  <Dropdown.Item eventKey=\"1\">Dropdown link</Dropdown.Item>\r\n                  <Dropdown.Item eventKey=\"2\">Dropdown link</Dropdown.Item>\r\n                </DropdownButton>\r\n              </ButtonGroup>\r\n            </KTCodeExample>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst jsCode1 = `\r\n<ButtonGroup aria-label=\"Basic example\">\r\n  <Button variant=\"secondary\">Left</Button>\r\n  <Button variant=\"secondary\">Middle</Button>\r\n  <Button variant=\"secondary\">Right</Button>\r\n</ButtonGroup>\r\n`;\r\nconst jsCode2 = `\r\n<ButtonToolbar aria-label=\"Toolbar with button groups\">\r\n  <ButtonGroup className=\"mr-2\" aria-label=\"First group\">\r\n    <Button>1</Button>\r\n    <Button>2</Button>\r\n    <Button>3</Button>\r\n    <Button>4</Button>\r\n  </ButtonGroup>\r\n\r\n  <ButtonGroup className=\"mr-2\" aria-label=\"Second group\">\r\n    <Button>5</Button>\r\n    <Button>6</Button>\r\n    <Button>7</Button>\r\n  </ButtonGroup>\r\n\r\n  <ButtonGroup aria-label=\"Third group\">\r\n    <Button>8</Button>\r\n  </ButtonGroup>\r\n</ButtonToolbar>\r\n`;\r\nconst jsCode3 = `\r\n<div>\r\n  <ButtonToolbar className=\"mb-3\" aria-label=\"Toolbar with Button groups\">\r\n    <ButtonGroup className=\"mr-2\" aria-label=\"First group\">\r\n      <Button variant=\"secondary\">1</Button>\r\n      <Button variant=\"secondary\">2</Button>\r\n      <Button variant=\"secondary\">3</Button>\r\n      <Button variant=\"secondary\">4</Button>\r\n    </ButtonGroup>\r\n    <InputGroup>\r\n      <InputGroup.Prepend>\r\n        <InputGroup.Text id=\"btnGroupAddon\">@</InputGroup.Text>\r\n      </InputGroup.Prepend>\r\n      <FormControl\r\n        type=\"text\"\r\n        placeholder=\"Input group example\"\r\n        aria-label=\"Input group example\"\r\n        aria-describedby=\"btnGroupAddon\"\r\n      />\r\n    </InputGroup>\r\n  </ButtonToolbar>\r\n\r\n  <ButtonToolbar\r\n    className=\"justify-content-between\"\r\n    aria-label=\"Toolbar with Button groups\"\r\n  >\r\n    <ButtonGroup aria-label=\"First group\">\r\n      <Button variant=\"secondary\">1</Button>\r\n      <Button variant=\"secondary\">2</Button>\r\n      <Button variant=\"secondary\">3</Button>\r\n      <Button variant=\"secondary\">4</Button>\r\n    </ButtonGroup>\r\n    <InputGroup>\r\n      <InputGroup.Prepend>\r\n        <InputGroup.Text id=\"btnGroupAddon2\">@</InputGroup.Text>\r\n      </InputGroup.Prepend>\r\n      <FormControl\r\n        type=\"text\"\r\n        placeholder=\"Input group example\"\r\n        aria-label=\"Input group example\"\r\n        aria-describedby=\"btnGroupAddon2\"\r\n      />\r\n    </InputGroup>\r\n  </ButtonToolbar>\r\n</div>\r\n`;\r\nconst jsCode4 = `\r\n<div className=\"d-flex flex-column\">\r\n  <ButtonGroup size=\"lg\">\r\n    <Button>Left</Button>\r\n    <Button>Middle</Button>\r\n    <Button>Right</Button>\r\n  </ButtonGroup>\r\n\r\n  <ButtonGroup className=\"mt-3\">\r\n    <Button>Left</Button>\r\n    <Button>Middle</Button>\r\n    <Button>Right</Button>\r\n  </ButtonGroup>\r\n  <ButtonGroup size=\"sm\" className=\"mt-3\">\r\n    <Button>Left</Button>\r\n    <Button>Middle</Button>\r\n    <Button>Right</Button>\r\n  </ButtonGroup>\r\n</div>\r\n`;\r\nconst jsCode5 = `\r\n<ButtonGroup>\r\n  <Button>1</Button>\r\n  <Button>2</Button>\r\n  <DropdownButton as={ButtonGroup} title=\"Dropdown\" id=\"bg-nested-dropdown\">\r\n    <Dropdown.Item eventKey=\"1\">Dropdown link</Dropdown.Item>\r\n    <Dropdown.Item eventKey=\"2\">Dropdown link</Dropdown.Item>\r\n  </DropdownButton>\r\n</ButtonGroup>\r\n`;\r\nconst jsCode6 = `\r\n<ButtonGroup vertical>\r\n  <Button>Button</Button>\r\n  <Button>Button</Button>\r\n  <DropdownButton as={ButtonGroup} title=\"Dropdown\" id=\"bg-vertical-dropdown-1\">\r\n    <Dropdown.Item eventKey=\"1\">Dropdown link</Dropdown.Item>\r\n    <Dropdown.Item eventKey=\"2\">Dropdown link</Dropdown.Item>\r\n  </DropdownButton>\r\n  <Button>Button</Button>\r\n  <Button>Button</Button>\r\n  <DropdownButton as={ButtonGroup} title=\"Dropdown\" id=\"bg-vertical-dropdown-2\">\r\n    <Dropdown.Item eventKey=\"1\">Dropdown link</Dropdown.Item>\r\n    <Dropdown.Item eventKey=\"2\">Dropdown link</Dropdown.Item>\r\n  </DropdownButton>\r\n  <DropdownButton as={ButtonGroup} title=\"Dropdown\" id=\"bg-vertical-dropdown-3\">\r\n    <Dropdown.Item eventKey=\"1\">Dropdown link</Dropdown.Item>\r\n    <Dropdown.Item eventKey=\"2\">Dropdown link</Dropdown.Item>\r\n  </DropdownButton>\r\n</ButtonGroup>\r\n`;\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Nav,\r\n  CardGroup,\r\n  CardDeck,\r\n  CardColumns\r\n} from \"react-bootstrap\";\r\nimport {Notice, KTCodeExample} from \"../../../_metronic/_partials/controls\";\r\n\r\nexport default class CardsExamplesPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Notice icon=\"flaticon-warning font-primary\">\r\n          <span>\r\n            Bootstrap’s cards provide a flexible and extensible content\r\n            container with multiple variants and options.\r\n          </span>{\" \"}\r\n          <span>\r\n            For more info please check the components's official{\" \"}\r\n            <a\r\n              target=\"_blank\"\r\n              className=\"font-weight-bold\"\r\n              rel=\"noopener noreferrer\"\r\n              href=\"https://react-bootstrap.github.io/components/cards/\"\r\n            >\r\n              demos & documentation\r\n            </a>\r\n          </span>\r\n        </Notice>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <KTCodeExample jsCode={jsCode1} beforeCodeTitle=\"Basic Example\">\r\n              <Card style={{ width: \"18rem\" }}>\r\n                <Card.Img\r\n                  variant=\"top\"\r\n                  src=\"data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22286%22%20height%3D%22180%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20286%20180%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_16bbc8a7812%20text%20%7B%20fill%3A%23999%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A14pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_16bbc8a7812%22%3E%3Crect%20width%3D%22286%22%20height%3D%22180%22%20fill%3D%22%23373940%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%22107.1875%22%20y%3D%2296.24375%22%3E286x180%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\"\r\n                />\r\n                <Card.Body>\r\n                  <Card.Title>Card Title</Card.Title>\r\n                  <Card.Text>\r\n                    Some quick example text to build on the card title and make\r\n                    up the bulk of the card's content.\r\n                  </Card.Text>\r\n                  <Button variant=\"primary\">Go somewhere</Button>\r\n                </Card.Body>\r\n              </Card>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample\r\n              jsCode={jsCode3}\r\n              beforeCodeTitle=\"Title, text, and links\"\r\n            >\r\n              <span>\r\n                Using <code>&lt;Card.Title&gt;</code>,{\" \"}\r\n                <code>&lt;Card.Subtitle&gt;</code>, and{\" \"}\r\n                <code>&lt;Card.Text&gt;</code> inside the{\" \"}\r\n                <code>&lt;Card.Body&gt;</code> will line them up nicely.\r\n                <code>&lt;Card.Link&gt;</code>s are used to line up links next\r\n                to each other.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <Card style={{ width: \"18rem\" }}>\r\n                <Card.Body>\r\n                  <Card.Title>Card Title</Card.Title>\r\n                  <Card.Subtitle className=\"mb-2 text-muted\">\r\n                    Card Subtitle\r\n                  </Card.Subtitle>\r\n                  <Card.Text>\r\n                    Some quick example text to build on the card title and make\r\n                    up the bulk of the card's content.\r\n                  </Card.Text>\r\n                  <Card.Link href=\"#\">Card Link</Card.Link>\r\n                  <Card.Link href=\"#\">Another Link</Card.Link>\r\n                </Card.Body>\r\n              </Card>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode5} beforeCodeTitle=\"Kitchen Sink\">\r\n              <Card style={{ width: \"18rem\" }}>\r\n                <Card.Img\r\n                  variant=\"top\"\r\n                  src=\"data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22286%22%20height%3D%22180%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20286%20180%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_16bbcafea7c%20text%20%7B%20fill%3A%23999%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A14pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_16bbcafea7c%22%3E%3Crect%20width%3D%22286%22%20height%3D%22180%22%20fill%3D%22%23373940%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%2299.4140625%22%20y%3D%2296.24375%22%3EImage%20cap%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\"\r\n                />\r\n                <Card.Body>\r\n                  <Card.Title>Card Title</Card.Title>\r\n                  <Card.Text>\r\n                    Some quick example text to build on the card title and make\r\n                    up the bulk of the card's content.\r\n                  </Card.Text>\r\n                </Card.Body>\r\n                <ListGroup className=\"list-group-flush\">\r\n                  <ListGroupItem>Cras justo odio</ListGroupItem>\r\n                  <ListGroupItem>Dapibus ac facilisis in</ListGroupItem>\r\n                  <ListGroupItem>Vestibulum at eros</ListGroupItem>\r\n                </ListGroup>\r\n                <Card.Body>\r\n                  <Card.Link href=\"#\">Card Link</Card.Link>\r\n                  <Card.Link href=\"#\">Another Link</Card.Link>\r\n                </Card.Body>\r\n              </Card>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode2} beforeCodeTitle=\"Body\">\r\n              <span>\r\n                Use <code>&lt;Card.Body&gt;</code> to pad content inside a{\" \"}\r\n                <code>&lt;Card&gt;</code>.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <Card>\r\n                <Card.Body>This is some text within a card body.</Card.Body>\r\n              </Card>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample\r\n              jsCode={jsCode11}\r\n              beforeCodeTitle=\"Border Color\"\r\n              codeBlockHeight=\"400px\"\r\n            >\r\n              <>\r\n                <Card border=\"primary\" style={{ width: \"18rem\" }}>\r\n                  <Card.Header>Header</Card.Header>\r\n                  <Card.Body>\r\n                    <Card.Title>Primary Card Title</Card.Title>\r\n                    <Card.Text>\r\n                      Some quick example text to build on the card title and\r\n                      make up the bulk of the card's content.\r\n                    </Card.Text>\r\n                  </Card.Body>\r\n                </Card>\r\n                <br />\r\n\r\n                <Card border=\"secondary\" style={{ width: \"18rem\" }}>\r\n                  <Card.Header>Header</Card.Header>\r\n                  <Card.Body>\r\n                    <Card.Title>Secondary Card Title</Card.Title>\r\n                    <Card.Text>\r\n                      Some quick example text to build on the card title and\r\n                      make up the bulk of the card's content.\r\n                    </Card.Text>\r\n                  </Card.Body>\r\n                </Card>\r\n                <br />\r\n\r\n                <Card border=\"success\" style={{ width: \"18rem\" }}>\r\n                  <Card.Header>Header</Card.Header>\r\n                  <Card.Body>\r\n                    <Card.Title>Success Card Title</Card.Title>\r\n                    <Card.Text>\r\n                      Some quick example text to build on the card title and\r\n                      make up the bulk of the card's content.\r\n                    </Card.Text>\r\n                  </Card.Body>\r\n                </Card>\r\n                <br />\r\n\r\n                <Card border=\"danger\" style={{ width: \"18rem\" }}>\r\n                  <Card.Header>Header</Card.Header>\r\n                  <Card.Body>\r\n                    <Card.Title>Danger Card Title</Card.Title>\r\n                    <Card.Text>\r\n                      Some quick example text to build on the card title and\r\n                      make up the bulk of the card's content.\r\n                    </Card.Text>\r\n                  </Card.Body>\r\n                </Card>\r\n                <br />\r\n\r\n                <Card border=\"warning\" style={{ width: \"18rem\" }}>\r\n                  <Card.Header>Header</Card.Header>\r\n                  <Card.Body>\r\n                    <Card.Title>Warning Card Title</Card.Title>\r\n                    <Card.Text>\r\n                      Some quick example text to build on the card title and\r\n                      make up the bulk of the card's content.\r\n                    </Card.Text>\r\n                  </Card.Body>\r\n                </Card>\r\n                <br />\r\n\r\n                <Card border=\"info\" style={{ width: \"18rem\" }}>\r\n                  <Card.Header>Header</Card.Header>\r\n                  <Card.Body>\r\n                    <Card.Title>Info Card Title</Card.Title>\r\n                    <Card.Text>\r\n                      Some quick example text to build on the card title and\r\n                      make up the bulk of the card's content.\r\n                    </Card.Text>\r\n                  </Card.Body>\r\n                </Card>\r\n                <br />\r\n\r\n                <Card border=\"dark\" style={{ width: \"18rem\" }}>\r\n                  <Card.Header>Header</Card.Header>\r\n                  <Card.Body>\r\n                    <Card.Title>Dark Card Title</Card.Title>\r\n                    <Card.Text>\r\n                      Some quick example text to build on the card title and\r\n                      make up the bulk of the card's content.\r\n                    </Card.Text>\r\n                  </Card.Body>\r\n                </Card>\r\n                <br />\r\n\r\n                <Card border=\"light\" style={{ width: \"18rem\" }}>\r\n                  <Card.Header>Header</Card.Header>\r\n                  <Card.Body>\r\n                    <Card.Title>Light Card Title</Card.Title>\r\n                    <Card.Text>\r\n                      Some quick example text to build on the card title and\r\n                      make up the bulk of the card's content.\r\n                    </Card.Text>\r\n                  </Card.Body>\r\n                </Card>\r\n                <br />\r\n              </>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode9} beforeCodeTitle=\"Navigation\">\r\n              <span>\r\n                Add some navigation to a card’s header (or block) with React\r\n                Bootstrap’s Nav components.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <Card>\r\n                <Card.Header>\r\n                  <Nav variant=\"tabs\" defaultActiveKey=\"#first\">\r\n                    <Nav.Item>\r\n                      <Nav.Link href=\"#first\">Active</Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                      <Nav.Link href=\"#link\">Link</Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                      <Nav.Link href=\"#disabled\" disabled>\r\n                        Disabled\r\n                      </Nav.Link>\r\n                    </Nav.Item>\r\n                  </Nav>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                  <Card.Title>Special title treatment</Card.Title>\r\n                  <Card.Text>\r\n                    With supporting text below as a natural lead-in to\r\n                    additional content.\r\n                  </Card.Text>\r\n                  <Button variant=\"primary\">Go somewhere</Button>\r\n                </Card.Body>\r\n              </Card>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample\r\n              jsCode={jsCode13}\r\n              beforeCodeTitle=\"Card Deck\"\r\n              codeBlockHeight=\"400px\"\r\n            >\r\n              <CardDeck>\r\n                <Card>\r\n                  <Card.Img\r\n                    variant=\"top\"\r\n                    src=\"data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22260%22%20height%3D%22160%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20260%20160%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_16bbcb2cc23%20text%20%7B%20fill%3A%23999%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A13pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_16bbcb2cc23%22%3E%3Crect%20width%3D%22260%22%20height%3D%22160%22%20fill%3D%22%23373940%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%2296.75%22%20y%3D%2286%22%3E260x160%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\"\r\n                  />\r\n                  <Card.Body>\r\n                    <Card.Title>Card title</Card.Title>\r\n                    <Card.Text>\r\n                      This is a wider card with supporting text below as a\r\n                      natural lead-in to additional content. This content is a\r\n                      little bit longer.\r\n                    </Card.Text>\r\n                  </Card.Body>\r\n                  <Card.Footer>\r\n                    <small className=\"text-muted\">\r\n                      Last updated 3 mins ago\r\n                    </small>\r\n                  </Card.Footer>\r\n                </Card>\r\n                <Card>\r\n                  <Card.Img\r\n                    variant=\"top\"\r\n                    src=\"data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22260%22%20height%3D%22160%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20260%20160%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_16bbcb2cc23%20text%20%7B%20fill%3A%23999%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A13pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_16bbcb2cc23%22%3E%3Crect%20width%3D%22260%22%20height%3D%22160%22%20fill%3D%22%23373940%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%2296.75%22%20y%3D%2286%22%3E260x160%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\"\r\n                  />\r\n                  <Card.Body>\r\n                    <Card.Title>Card title</Card.Title>\r\n                    <Card.Text>\r\n                      This card has supporting text below as a natural lead-in\r\n                      to additional content.{\" \"}\r\n                    </Card.Text>\r\n                  </Card.Body>\r\n                  <Card.Footer>\r\n                    <small className=\"text-muted\">\r\n                      Last updated 3 mins ago\r\n                    </small>\r\n                  </Card.Footer>\r\n                </Card>\r\n                <Card>\r\n                  <Card.Img\r\n                    variant=\"top\"\r\n                    src=\"data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22260%22%20height%3D%22160%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20260%20160%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_16bbcb2cc23%20text%20%7B%20fill%3A%23999%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A13pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_16bbcb2cc23%22%3E%3Crect%20width%3D%22260%22%20height%3D%22160%22%20fill%3D%22%23373940%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%2296.75%22%20y%3D%2286%22%3E260x160%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\"\r\n                  />\r\n                  <Card.Body>\r\n                    <Card.Title>Card title</Card.Title>\r\n                    <Card.Text>\r\n                      This is a wider card with supporting text below as a\r\n                      natural lead-in to additional content. This card has even\r\n                      longer content than the first to show that equal height\r\n                      action.\r\n                    </Card.Text>\r\n                  </Card.Body>\r\n                  <Card.Footer>\r\n                    <small className=\"text-muted\">\r\n                      Last updated 3 mins ago\r\n                    </small>\r\n                  </Card.Footer>\r\n                </Card>\r\n              </CardDeck>\r\n            </KTCodeExample>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <KTCodeExample\r\n              jsCode={jsCode7}\r\n              beforeCodeTitle=\"Image caps\"\r\n              codeBlockHeight=\"400px\"\r\n            >\r\n              <span>\r\n                Similar to headers and footers, cards can include top and bottom\r\n                “image caps”—images at the top or bottom of a card.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <>\r\n                <Card>\r\n                  <Card.Img\r\n                    variant=\"top\"\r\n                    src=\"data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22845%22%20height%3D%22180%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20845%20180%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_16bbcb13985%20text%20%7B%20fill%3A%23999%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A42pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_16bbcb13985%22%3E%3Crect%20width%3D%22845%22%20height%3D%22180%22%20fill%3D%22%23373940%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%22315.0625%22%20y%3D%22108.72187500000001%22%3E845x180%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\"\r\n                  />\r\n                  <Card.Body>\r\n                    <Card.Text>\r\n                      Some quick example text to build on the card title and\r\n                      make up the bulk of the card's content.\r\n                    </Card.Text>\r\n                  </Card.Body>\r\n                </Card>\r\n                <br />\r\n                <Card>\r\n                  <Card.Body>\r\n                    <Card.Text>\r\n                      Some quick example text to build on the card title and\r\n                      make up the bulk of the card's content.\r\n                    </Card.Text>\r\n                  </Card.Body>\r\n                  <Card.Img\r\n                    variant=\"bottom\"\r\n                    src=\"data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22845%22%20height%3D%22180%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20845%20180%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_16bbcb13985%20text%20%7B%20fill%3A%23999%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A42pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_16bbcb13985%22%3E%3Crect%20width%3D%22845%22%20height%3D%22180%22%20fill%3D%22%23373940%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%22315.0625%22%20y%3D%22108.72187500000001%22%3E845x180%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\"\r\n                  />\r\n                </Card>\r\n              </>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode4} beforeCodeTitle=\"List Groups\">\r\n              <span>\r\n                Create lists of content in a card with a flush list group.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <Card style={{ width: \"18rem\" }}>\r\n                <Card.Header>Featured</Card.Header>\r\n                <ListGroup variant=\"flush\">\r\n                  <ListGroup.Item>Cras justo odio</ListGroup.Item>\r\n                  <ListGroup.Item>Dapibus ac facilisis in</ListGroup.Item>\r\n                  <ListGroup.Item>Vestibulum at eros</ListGroup.Item>\r\n                </ListGroup>\r\n              </Card>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode6} beforeCodeTitle=\"Header and Footer\">\r\n              <span>\r\n                You may add a header by adding a{\" \"}\r\n                <code>&lt;Card.Header&gt;</code> component.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <Card>\r\n                <Card.Header>Featured</Card.Header>\r\n                <Card.Body>\r\n                  <Card.Title>Special title treatment</Card.Title>\r\n                  <Card.Text>\r\n                    With supporting text below as a natural lead-in to\r\n                    additional content.\r\n                  </Card.Text>\r\n                  <Button variant=\"primary\">Go somewhere</Button>\r\n                </Card.Body>\r\n              </Card>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode8} beforeCodeTitle=\"Image Overlays\">\r\n              <span>\r\n                Turn an image into a card background and overlay your card’s\r\n                text. Depending on the image, you may or may not need additional\r\n                styles or utilities.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <Card className=\"bg-dark text-white\">\r\n                <Card.Img\r\n                  src=\"data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22845%22%20height%3D%22180%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20845%20180%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_16bbcb13985%20text%20%7B%20fill%3A%23999%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A42pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_16bbcb13985%22%3E%3Crect%20width%3D%22845%22%20height%3D%22180%22%20fill%3D%22%23373940%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%22315.0625%22%20y%3D%22108.72187500000001%22%3E845x180%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\"\r\n                  alt=\"Card image\"\r\n                />\r\n                <Card.ImgOverlay>\r\n                  <Card.Title>Card title</Card.Title>\r\n                  <Card.Text>\r\n                    This is a wider card with supporting text below as a natural\r\n                    lead-in to additional content. This content is a little bit\r\n                    longer.\r\n                  </Card.Text>\r\n                  <Card.Text>Last updated 3 mins ago</Card.Text>\r\n                </Card.ImgOverlay>\r\n              </Card>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample\r\n              jsCode={jsCode10}\r\n              beforeCodeTitle=\"Background Color\"\r\n              codeBlockHeight=\"400px\"\r\n            >\r\n              <span>\r\n                You can change a card's appearance by changing their{\" \"}\r\n                <code>&lt;bg&gt;</code>, and <code>&lt;text&gt;</code> props.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <>\r\n                <Card bg=\"primary\" text=\"white\" style={{ width: \"18rem\" }}>\r\n                  <Card.Header>Header</Card.Header>\r\n                  <Card.Body>\r\n                    <Card.Title>Primary Card Title</Card.Title>\r\n                    <Card.Text>\r\n                      Some quick example text to build on the card title and\r\n                      make up the bulk of the card's content.\r\n                    </Card.Text>\r\n                  </Card.Body>\r\n                </Card>\r\n                <br />\r\n\r\n                <Card bg=\"secondary\" text=\"white\" style={{ width: \"18rem\" }}>\r\n                  <Card.Header>Header</Card.Header>\r\n                  <Card.Body>\r\n                    <Card.Title>Secondary Card Title</Card.Title>\r\n                    <Card.Text>\r\n                      Some quick example text to build on the card title and\r\n                      make up the bulk of the card's content.\r\n                    </Card.Text>\r\n                  </Card.Body>\r\n                </Card>\r\n                <br />\r\n\r\n                <Card bg=\"success\" text=\"white\" style={{ width: \"18rem\" }}>\r\n                  <Card.Header>Header</Card.Header>\r\n                  <Card.Body>\r\n                    <Card.Title>Success Card Title</Card.Title>\r\n                    <Card.Text>\r\n                      Some quick example text to build on the card title and\r\n                      make up the bulk of the card's content.\r\n                    </Card.Text>\r\n                  </Card.Body>\r\n                </Card>\r\n                <br />\r\n\r\n                <Card bg=\"danger\" text=\"white\" style={{ width: \"18rem\" }}>\r\n                  <Card.Header>Header</Card.Header>\r\n                  <Card.Body>\r\n                    <Card.Title>Danger Card Title</Card.Title>\r\n                    <Card.Text>\r\n                      Some quick example text to build on the card title and\r\n                      make up the bulk of the card's content.\r\n                    </Card.Text>\r\n                  </Card.Body>\r\n                </Card>\r\n                <br />\r\n\r\n                <Card bg=\"warning\" text=\"white\" style={{ width: \"18rem\" }}>\r\n                  <Card.Header>Header</Card.Header>\r\n                  <Card.Body>\r\n                    <Card.Title>Warning Card Title</Card.Title>\r\n                    <Card.Text>\r\n                      Some quick example text to build on the card title and\r\n                      make up the bulk of the card's content.\r\n                    </Card.Text>\r\n                  </Card.Body>\r\n                </Card>\r\n                <br />\r\n\r\n                <Card bg=\"info\" text=\"white\" style={{ width: \"18rem\" }}>\r\n                  <Card.Header>Header</Card.Header>\r\n                  <Card.Body>\r\n                    <Card.Title>Info Card Title</Card.Title>\r\n                    <Card.Text>\r\n                      Some quick example text to build on the card title and\r\n                      make up the bulk of the card's content.\r\n                    </Card.Text>\r\n                  </Card.Body>\r\n                </Card>\r\n                <br />\r\n\r\n                <Card bg=\"dark\" text=\"white\" style={{ width: \"18rem\" }}>\r\n                  <Card.Header>Header</Card.Header>\r\n                  <Card.Body>\r\n                    <Card.Title>Dark Card Title</Card.Title>\r\n                    <Card.Text>\r\n                      Some quick example text to build on the card title and\r\n                      make up the bulk of the card's content.\r\n                    </Card.Text>\r\n                  </Card.Body>\r\n                </Card>\r\n                <br />\r\n\r\n                <Card bg=\"light\" style={{ width: \"18rem\" }}>\r\n                  <Card.Header>Header</Card.Header>\r\n                  <Card.Body>\r\n                    <Card.Title>Light Card Title</Card.Title>\r\n                    <Card.Text>\r\n                      Some quick example text to build on the card title and\r\n                      make up the bulk of the card's content.\r\n                    </Card.Text>\r\n                  </Card.Body>\r\n                </Card>\r\n                <br />\r\n              </>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample\r\n              jsCode={jsCode12}\r\n              beforeCodeTitle=\"Card Groups\"\r\n              codeBlockHeight=\"400px\"\r\n            >\r\n              <CardGroup>\r\n                <Card>\r\n                  <Card.Img\r\n                    variant=\"top\"\r\n                    src=\"data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22281%22%20height%3D%22160%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20281%20160%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_16bbcb2cc1e%20text%20%7B%20fill%3A%23999%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A14pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_16bbcb2cc1e%22%3E%3Crect%20width%3D%22281%22%20height%3D%22160%22%20fill%3D%22%23373940%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%22104.6875%22%20y%3D%2286.24375%22%3E281x160%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\"\r\n                  />\r\n                  <Card.Body>\r\n                    <Card.Title>Card title</Card.Title>\r\n                    <Card.Text>\r\n                      This is a wider card with supporting text below as a\r\n                      natural lead-in to additional content. This content is a\r\n                      little bit longer.\r\n                    </Card.Text>\r\n                  </Card.Body>\r\n                  <Card.Footer>\r\n                    <small className=\"text-muted\">\r\n                      Last updated 3 mins ago\r\n                    </small>\r\n                  </Card.Footer>\r\n                </Card>\r\n                <Card>\r\n                  <Card.Img\r\n                    variant=\"top\"\r\n                    src=\"data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22281%22%20height%3D%22160%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20281%20160%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_16bbcb2cc1e%20text%20%7B%20fill%3A%23999%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A14pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_16bbcb2cc1e%22%3E%3Crect%20width%3D%22281%22%20height%3D%22160%22%20fill%3D%22%23373940%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%22104.6875%22%20y%3D%2286.24375%22%3E281x160%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\"\r\n                  />\r\n                  <Card.Body>\r\n                    <Card.Title>Card title</Card.Title>\r\n                    <Card.Text>\r\n                      This card has supporting text below as a natural lead-in\r\n                      to additional content.{\" \"}\r\n                    </Card.Text>\r\n                  </Card.Body>\r\n                  <Card.Footer>\r\n                    <small className=\"text-muted\">\r\n                      Last updated 3 mins ago\r\n                    </small>\r\n                  </Card.Footer>\r\n                </Card>\r\n                <Card>\r\n                  <Card.Img\r\n                    variant=\"top\"\r\n                    src=\"data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22281%22%20height%3D%22160%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20281%20160%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_16bbcb2cc1e%20text%20%7B%20fill%3A%23999%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A14pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_16bbcb2cc1e%22%3E%3Crect%20width%3D%22281%22%20height%3D%22160%22%20fill%3D%22%23373940%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%22104.6875%22%20y%3D%2286.24375%22%3E281x160%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E \"\r\n                  />\r\n                  <Card.Body>\r\n                    <Card.Title>Card title</Card.Title>\r\n                    <Card.Text>\r\n                      This is a wider card with supporting text below as a\r\n                      natural lead-in to additional content. This card has even\r\n                      longer content than the first to show that equal height\r\n                      action.\r\n                    </Card.Text>\r\n                  </Card.Body>\r\n                  <Card.Footer>\r\n                    <small className=\"text-muted\">\r\n                      Last updated 3 mins ago\r\n                    </small>\r\n                  </Card.Footer>\r\n                </Card>\r\n              </CardGroup>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample\r\n              jsCode={jsCode14}\r\n              beforeCodeTitle=\"Card Columns\"\r\n              codeBlockHeight=\"400px\"\r\n            >\r\n              <CardColumns>\r\n                <Card>\r\n                  <Card.Img\r\n                    variant=\"top\"\r\n                    src=\"data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22267%22%20height%3D%22160%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20267%20160%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_16bbcb2cc27%20text%20%7B%20fill%3A%23999%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A13pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_16bbcb2cc27%22%3E%3Crect%20width%3D%22267%22%20height%3D%22160%22%20fill%3D%22%23373940%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%22100.25%22%20y%3D%2286%22%3E267x160%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\"\r\n                  />\r\n                  <Card.Body>\r\n                    <Card.Title>Card title that wraps to a new line</Card.Title>\r\n                    <Card.Text>\r\n                      This is a longer card with supporting text below as a\r\n                      natural lead-in to additional content. This content is a\r\n                      little bit longer.\r\n                    </Card.Text>\r\n                  </Card.Body>\r\n                </Card>\r\n                <Card className=\"p-3\">\r\n                  <blockquote className=\"blockquote mb-0 card-body\">\r\n                    <p>\r\n                      Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n                      Integer posuere erat a ante.\r\n                    </p>\r\n                    <footer className=\"blockquote-footer\">\r\n                      <small className=\"text-muted\">\r\n                        Someone famous in{\" \"}\r\n                        <cite title=\"Source Title\">Source Title</cite>\r\n                      </small>\r\n                    </footer>\r\n                  </blockquote>\r\n                </Card>\r\n                <Card>\r\n                  <Card.Img\r\n                    variant=\"top\"\r\n                    src=\"data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22267%22%20height%3D%22160%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20267%20160%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_16bbcb2cc27%20text%20%7B%20fill%3A%23999%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A13pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_16bbcb2cc27%22%3E%3Crect%20width%3D%22267%22%20height%3D%22160%22%20fill%3D%22%23373940%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%22100.25%22%20y%3D%2286%22%3E267x160%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\"\r\n                  />\r\n                  <Card.Body>\r\n                    <Card.Title>Card title</Card.Title>\r\n                    <Card.Text>\r\n                      This card has supporting text below as a natural lead-in\r\n                      to additional content.{\" \"}\r\n                    </Card.Text>\r\n                  </Card.Body>\r\n                  <Card.Footer>\r\n                    <small className=\"text-muted\">\r\n                      Last updated 3 mins ago\r\n                    </small>\r\n                  </Card.Footer>\r\n                </Card>\r\n                <Card bg=\"primary\" text=\"white\" className=\"text-center p-3\">\r\n                  <blockquote className=\"blockquote mb-0 card-body\">\r\n                    <p>\r\n                      Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n                      Integer posuere erat a ante.\r\n                    </p>\r\n                    <footer className=\"blockquote-footer\">\r\n                      <small className=\"text-muted\">\r\n                        Someone famous in{\" \"}\r\n                        <cite title=\"Source Title\">Source Title</cite>\r\n                      </small>\r\n                    </footer>\r\n                  </blockquote>\r\n                </Card>\r\n                <Card className=\"text-center\">\r\n                  <Card.Body>\r\n                    <Card.Title>Card title</Card.Title>\r\n                    <Card.Text>\r\n                      This card has supporting text below as a natural lead-in\r\n                      to additional content.{\" \"}\r\n                    </Card.Text>\r\n                    <Card.Text>\r\n                      <small className=\"text-muted\">\r\n                        Last updated 3 mins ago\r\n                      </small>\r\n                    </Card.Text>\r\n                  </Card.Body>\r\n                </Card>\r\n                <Card>\r\n                  <Card.Img src=\"data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22267%22%20height%3D%22160%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20267%20160%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_16bbcb2cc27%20text%20%7B%20fill%3A%23999%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A13pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_16bbcb2cc27%22%3E%3Crect%20width%3D%22267%22%20height%3D%22160%22%20fill%3D%22%23373940%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%22100.25%22%20y%3D%2286%22%3E267x160%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\" />\r\n                </Card>\r\n                <Card className=\"text-right\">\r\n                  <blockquote className=\"blockquote mb-0 card-body\">\r\n                    <p>\r\n                      Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n                      Integer posuere erat a ante.\r\n                    </p>\r\n                    <footer className=\"blockquote-footer\">\r\n                      <small className=\"text-muted\">\r\n                        Someone famous in{\" \"}\r\n                        <cite title=\"Source Title\">Source Title</cite>\r\n                      </small>\r\n                    </footer>\r\n                  </blockquote>\r\n                </Card>\r\n                <Card>\r\n                  <Card.Body>\r\n                    <Card.Title>Card title</Card.Title>\r\n                    <Card.Text>\r\n                      This is a wider card with supporting text below as a\r\n                      natural lead-in to additional content. This card has even\r\n                      longer content than the first to show that equal height\r\n                      action.\r\n                    </Card.Text>\r\n                    <Card.Text>\r\n                      <small className=\"text-muted\">\r\n                        Last updated 3 mins ago\r\n                      </small>\r\n                    </Card.Text>\r\n                  </Card.Body>\r\n                </Card>\r\n              </CardColumns>\r\n            </KTCodeExample>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst jsCode1 = `\r\n<Card style={{ width: '18rem' }}>\r\n  <Card.Img variant=\"top\" src=\"holder.js/100px180\" />\r\n  <Card.Body>\r\n    <Card.Title>Card Title</Card.Title>\r\n    <Card.Text>\r\n      Some quick example text to build on the card title and make up the bulk of\r\n      the card's content.\r\n    </Card.Text>\r\n    <Button variant=\"primary\">Go somewhere</Button>\r\n  </Card.Body>\r\n</Card>\r\n`;\r\nconst jsCode2 = `\r\n<Card>\r\n  <Card.Body>This is some text within a card body.</Card.Body>\r\n</Card>\r\n`;\r\nconst jsCode3 = `\r\n<Card style={{ width: '18rem' }}>\r\n  <Card.Body>\r\n    <Card.Title>Card Title</Card.Title>\r\n    <Card.Subtitle className=\"mb-2 text-muted\">Card Subtitle</Card.Subtitle>\r\n    <Card.Text>\r\n      Some quick example text to build on the card title and make up the bulk of\r\n      the card's content.\r\n    </Card.Text>\r\n    <Card.Link href=\"#\">Card Link</Card.Link>\r\n    <Card.Link href=\"#\">Another Link</Card.Link>\r\n  </Card.Body>\r\n</Card>\r\n`;\r\nconst jsCode4 = `\r\n<Card style={{ width: '18rem' }}>\r\n  <Card.Header>Featured</Card.Header>\r\n  <ListGroup variant=\"flush\">\r\n    <ListGroup.Item>Cras justo odio</ListGroup.Item>\r\n    <ListGroup.Item>Dapibus ac facilisis in</ListGroup.Item>\r\n    <ListGroup.Item>Vestibulum at eros</ListGroup.Item>\r\n  </ListGroup>\r\n</Card>\r\n`;\r\nconst jsCode5 = `\r\n<Card style={{ width: '18rem' }}>\r\n  <Card.Img variant=\"top\" src=\"holder.js/100px180?text=Image cap\" />\r\n  <Card.Body>\r\n    <Card.Title>Card Title</Card.Title>\r\n    <Card.Text>\r\n      Some quick example text to build on the card title and make up the bulk of\r\n      the card's content.\r\n    </Card.Text>\r\n  </Card.Body>\r\n  <ListGroup className=\"list-group-flush\">\r\n    <ListGroupItem>Cras justo odio</ListGroupItem>\r\n    <ListGroupItem>Dapibus ac facilisis in</ListGroupItem>\r\n    <ListGroupItem>Vestibulum at eros</ListGroupItem>\r\n  </ListGroup>\r\n  <Card.Body>\r\n    <Card.Link href=\"#\">Card Link</Card.Link>\r\n    <Card.Link href=\"#\">Another Link</Card.Link>\r\n  </Card.Body>\r\n</Card>\r\n`;\r\nconst jsCode6 = `\r\n<Card>\r\n  <Card.Header>Featured</Card.Header>\r\n  <Card.Body>\r\n    <Card.Title>Special title treatment</Card.Title>\r\n    <Card.Text>\r\n      With supporting text below as a natural lead-in to additional content.\r\n    </Card.Text>\r\n    <Button variant=\"primary\">Go somewhere</Button>\r\n  </Card.Body>\r\n</Card>\r\n`;\r\nconst jsCode7 = `\r\n<>\r\n  <Card>\r\n    <Card.Img variant=\"top\" src=\"holder.js/100px180\" />\r\n    <Card.Body>\r\n      <Card.Text>\r\n        Some quick example text to build on the card title and make up the bulk\r\n        of the card's content.\r\n      </Card.Text>\r\n    </Card.Body>\r\n  </Card>\r\n  <br />\r\n  <Card>\r\n    <Card.Body>\r\n      <Card.Text>\r\n        Some quick example text to build on the card title and make up the bulk\r\n        of the card's content.\r\n      </Card.Text>\r\n    </Card.Body>\r\n    <Card.Img variant=\"bottom\" src=\"holder.js/100px180\" />\r\n  </Card>\r\n</> \r\n`;\r\nconst jsCode8 = `\r\n<Card className=\"bg-dark text-white\">\r\n  <Card.Img src=\"holder.js/100px270\" alt=\"Card image\" />\r\n  <Card.ImgOverlay>\r\n    <Card.Title>Card title</Card.Title>\r\n    <Card.Text>\r\n      This is a wider card with supporting text below as a natural lead-in to\r\n      additional content. This content is a little bit longer.\r\n    </Card.Text>\r\n    <Card.Text>Last updated 3 mins ago</Card.Text>\r\n  </Card.ImgOverlay>\r\n</Card>\r\n`;\r\nconst jsCode9 = `\r\n<Card>\r\n  <Card.Header>\r\n    <Nav variant=\"pills\" defaultActiveKey=\"#first\">\r\n      <Nav.Item>\r\n        <Nav.Link href=\"#first\">Active</Nav.Link>\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        <Nav.Link href=\"#link\">Link</Nav.Link>\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        <Nav.Link href=\"#disabled\" disabled>\r\n          Disabled\r\n        </Nav.Link>\r\n      </Nav.Item>\r\n    </Nav>\r\n  </Card.Header>\r\n  <Card.Body>\r\n    <Card.Title>Special title treatment</Card.Title>\r\n    <Card.Text>\r\n      With supporting text below as a natural lead-in to additional content.\r\n    </Card.Text>\r\n    <Button variant=\"primary\">Go somewhere</Button>\r\n  </Card.Body>\r\n</Card>\r\n`;\r\nconst jsCode10 = `\r\n<>\r\n  <Card bg=\"primary\" text=\"white\" style={{ width: '18rem' }}>\r\n    <Card.Header>Header</Card.Header>\r\n    <Card.Body>\r\n      <Card.Title>Primary Card Title</Card.Title>\r\n      <Card.Text>\r\n        Some quick example text to build on the card title and make up the bulk\r\n        of the card's content.\r\n      </Card.Text>\r\n    </Card.Body>\r\n  </Card>\r\n  <br />\r\n\r\n  <Card bg=\"secondary\" text=\"white\" style={{ width: '18rem' }}>\r\n    <Card.Header>Header</Card.Header>\r\n    <Card.Body>\r\n      <Card.Title>Secondary Card Title</Card.Title>\r\n      <Card.Text>\r\n        Some quick example text to build on the card title and make up the bulk\r\n        of the card's content.\r\n      </Card.Text>\r\n    </Card.Body>\r\n  </Card>\r\n  <br />\r\n\r\n  <Card bg=\"success\" text=\"white\" style={{ width: '18rem' }}>\r\n    <Card.Header>Header</Card.Header>\r\n    <Card.Body>\r\n      <Card.Title>Success Card Title</Card.Title>\r\n      <Card.Text>\r\n        Some quick example text to build on the card title and make up the bulk\r\n        of the card's content.\r\n      </Card.Text>\r\n    </Card.Body>\r\n  </Card>\r\n  <br />\r\n\r\n  <Card bg=\"danger\" text=\"white\" style={{ width: '18rem' }}>\r\n    <Card.Header>Header</Card.Header>\r\n    <Card.Body>\r\n      <Card.Title>Danger Card Title</Card.Title>\r\n      <Card.Text>\r\n        Some quick example text to build on the card title and make up the bulk\r\n        of the card's content.\r\n      </Card.Text>\r\n    </Card.Body>\r\n  </Card>\r\n  <br />\r\n\r\n  <Card bg=\"warning\" text=\"white\" style={{ width: '18rem' }}>\r\n    <Card.Header>Header</Card.Header>\r\n    <Card.Body>\r\n      <Card.Title>Warning Card Title</Card.Title>\r\n      <Card.Text>\r\n        Some quick example text to build on the card title and make up the bulk\r\n        of the card's content.\r\n      </Card.Text>\r\n    </Card.Body>\r\n  </Card>\r\n  <br />\r\n\r\n  <Card bg=\"info\" text=\"white\" style={{ width: '18rem' }}>\r\n    <Card.Header>Header</Card.Header>\r\n    <Card.Body>\r\n      <Card.Title>Info Card Title</Card.Title>\r\n      <Card.Text>\r\n        Some quick example text to build on the card title and make up the bulk\r\n        of the card's content.\r\n      </Card.Text>\r\n    </Card.Body>\r\n  </Card>\r\n  <br />\r\n\r\n  <Card bg=\"dark\" text=\"white\" style={{ width: '18rem' }}>\r\n    <Card.Header>Header</Card.Header>\r\n    <Card.Body>\r\n      <Card.Title>Dark Card Title</Card.Title>\r\n      <Card.Text>\r\n        Some quick example text to build on the card title and make up the bulk\r\n        of the card's content.\r\n      </Card.Text>\r\n    </Card.Body>\r\n  </Card>\r\n  <br />\r\n\r\n  <Card bg=\"light\" style={{ width: '18rem' }}>\r\n    <Card.Header>Header</Card.Header>\r\n    <Card.Body>\r\n      <Card.Title>Light Card Title</Card.Title>\r\n      <Card.Text>\r\n        Some quick example text to build on the card title and make up the bulk\r\n        of the card's content.\r\n      </Card.Text>\r\n    </Card.Body>\r\n  </Card>\r\n  <br />\r\n</>\r\n`;\r\nconst jsCode11 = `\r\n<>\r\n  <Card border=\"primary\" style={{ width: '18rem' }}>\r\n    <Card.Header>Header</Card.Header>\r\n    <Card.Body>\r\n      <Card.Title>Primary Card Title</Card.Title>\r\n      <Card.Text>\r\n        Some quick example text to build on the card title and make up the bulk\r\n        of the card's content.\r\n      </Card.Text>\r\n    </Card.Body>\r\n  </Card>\r\n  <br />\r\n\r\n  <Card border=\"secondary\" style={{ width: '18rem' }}>\r\n    <Card.Header>Header</Card.Header>\r\n    <Card.Body>\r\n      <Card.Title>Secondary Card Title</Card.Title>\r\n      <Card.Text>\r\n        Some quick example text to build on the card title and make up the bulk\r\n        of the card's content.\r\n      </Card.Text>\r\n    </Card.Body>\r\n  </Card>\r\n  <br />\r\n\r\n  <Card border=\"success\" style={{ width: '18rem' }}>\r\n    <Card.Header>Header</Card.Header>\r\n    <Card.Body>\r\n      <Card.Title>Success Card Title</Card.Title>\r\n      <Card.Text>\r\n        Some quick example text to build on the card title and make up the bulk\r\n        of the card's content.\r\n      </Card.Text>\r\n    </Card.Body>\r\n  </Card>\r\n  <br />\r\n\r\n  <Card border=\"danger\" style={{ width: '18rem' }}>\r\n    <Card.Header>Header</Card.Header>\r\n    <Card.Body>\r\n      <Card.Title>Danger Card Title</Card.Title>\r\n      <Card.Text>\r\n        Some quick example text to build on the card title and make up the bulk\r\n        of the card's content.\r\n      </Card.Text>\r\n    </Card.Body>\r\n  </Card>\r\n  <br />\r\n\r\n  <Card border=\"warning\" style={{ width: '18rem' }}>\r\n    <Card.Header>Header</Card.Header>\r\n    <Card.Body>\r\n      <Card.Title>Warning Card Title</Card.Title>\r\n      <Card.Text>\r\n        Some quick example text to build on the card title and make up the bulk\r\n        of the card's content.\r\n      </Card.Text>\r\n    </Card.Body>\r\n  </Card>\r\n  <br />\r\n\r\n  <Card border=\"info\" style={{ width: '18rem' }}>\r\n    <Card.Header>Header</Card.Header>\r\n    <Card.Body>\r\n      <Card.Title>Info Card Title</Card.Title>\r\n      <Card.Text>\r\n        Some quick example text to build on the card title and make up the bulk\r\n        of the card's content.\r\n      </Card.Text>\r\n    </Card.Body>\r\n  </Card>\r\n  <br />\r\n\r\n  <Card border=\"dark\" style={{ width: '18rem' }}>\r\n    <Card.Header>Header</Card.Header>\r\n    <Card.Body>\r\n      <Card.Title>Dark Card Title</Card.Title>\r\n      <Card.Text>\r\n        Some quick example text to build on the card title and make up the bulk\r\n        of the card's content.\r\n      </Card.Text>\r\n    </Card.Body>\r\n  </Card>\r\n  <br />\r\n\r\n  <Card border=\"light\" style={{ width: '18rem' }}>\r\n    <Card.Header>Header</Card.Header>\r\n    <Card.Body>\r\n      <Card.Title>Light Card Title</Card.Title>\r\n      <Card.Text>\r\n        Some quick example text to build on the card title and make up the bulk\r\n        of the card's content.\r\n      </Card.Text>\r\n    </Card.Body>\r\n  </Card>\r\n  <br />\r\n</>\r\n`;\r\nconst jsCode12 = `\r\n<CardGroup>\r\n  <Card>\r\n    <Card.Img variant=\"top\" src=\"holder.js/100px160\" />\r\n    <Card.Body>\r\n      <Card.Title>Card title</Card.Title>\r\n      <Card.Text>\r\n        This is a wider card with supporting text below as a natural lead-in to\r\n        additional content. This content is a little bit longer.\r\n      </Card.Text>\r\n    </Card.Body>\r\n    <Card.Footer>\r\n      <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n    </Card.Footer>\r\n  </Card>\r\n  <Card>\r\n    <Card.Img variant=\"top\" src=\"holder.js/100px160\" />\r\n    <Card.Body>\r\n      <Card.Title>Card title</Card.Title>\r\n      <Card.Text>\r\n        This card has supporting text below as a natural lead-in to additional\r\n        content.{' '}\r\n      </Card.Text>\r\n    </Card.Body>\r\n    <Card.Footer>\r\n      <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n    </Card.Footer>\r\n  </Card>\r\n  <Card>\r\n    <Card.Img variant=\"top\" src=\"holder.js/100px160\" />\r\n    <Card.Body>\r\n      <Card.Title>Card title</Card.Title>\r\n      <Card.Text>\r\n        This is a wider card with supporting text below as a natural lead-in to\r\n        additional content. This card has even longer content than the first to\r\n        show that equal height action.\r\n      </Card.Text>\r\n    </Card.Body>\r\n    <Card.Footer>\r\n      <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n    </Card.Footer>\r\n  </Card>\r\n</CardGroup>\r\n`;\r\nconst jsCode14 = `\r\n<CardDeck>\r\n  <Card>\r\n    <Card.Img variant=\"top\" src=\"holder.js/100px160\" />\r\n    <Card.Body>\r\n      <Card.Title>Card title</Card.Title>\r\n      <Card.Text>\r\n        This is a wider card with supporting text below as a natural lead-in to\r\n        additional content. This content is a little bit longer.\r\n      </Card.Text>\r\n    </Card.Body>\r\n    <Card.Footer>\r\n      <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n    </Card.Footer>\r\n  </Card>\r\n  <Card>\r\n    <Card.Img variant=\"top\" src=\"holder.js/100px160\" />\r\n    <Card.Body>\r\n      <Card.Title>Card title</Card.Title>\r\n      <Card.Text>\r\n        This card has supporting text below as a natural lead-in to additional\r\n        content.{' '}\r\n      </Card.Text>\r\n    </Card.Body>\r\n    <Card.Footer>\r\n      <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n    </Card.Footer>\r\n  </Card>\r\n  <Card>\r\n    <Card.Img variant=\"top\" src=\"holder.js/100px160\" />\r\n    <Card.Body>\r\n      <Card.Title>Card title</Card.Title>\r\n      <Card.Text>\r\n        This is a wider card with supporting text below as a natural lead-in to\r\n        additional content. This card has even longer content than the first to\r\n        show that equal height action.\r\n      </Card.Text>\r\n    </Card.Body>\r\n    <Card.Footer>\r\n      <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n    </Card.Footer>\r\n  </Card>\r\n</CardDeck>\r\n`;\r\nconst jsCode13 = `\r\n<CardColumns>\r\n  <Card>\r\n    <Card.Img variant=\"top\" src=\"holder.js/100px160\" />\r\n    <Card.Body>\r\n      <Card.Title>Card title that wraps to a new line</Card.Title>\r\n      <Card.Text>\r\n        This is a longer card with supporting text below as a natural lead-in to\r\n        additional content. This content is a little bit longer.\r\n      </Card.Text>\r\n    </Card.Body>\r\n  </Card>\r\n  <Card className=\"p-3\">\r\n    <blockquote className=\"blockquote mb-0 card-body\">\r\n      <p>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere\r\n        erat a ante.\r\n      </p>\r\n      <footer className=\"blockquote-footer\">\r\n        <small className=\"text-muted\">\r\n          Someone famous in <cite title=\"Source Title\">Source Title</cite>\r\n        </small>\r\n      </footer>\r\n    </blockquote>\r\n  </Card>\r\n  <Card>\r\n    <Card.Img variant=\"top\" src=\"holder.js/100px160\" />\r\n    <Card.Body>\r\n      <Card.Title>Card title</Card.Title>\r\n      <Card.Text>\r\n        This card has supporting text below as a natural lead-in to additional\r\n        content.{' '}\r\n      </Card.Text>\r\n    </Card.Body>\r\n    <Card.Footer>\r\n      <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n    </Card.Footer>\r\n  </Card>\r\n  <Card bg=\"primary\" text=\"white\" className=\"text-center p-3\">\r\n    <blockquote className=\"blockquote mb-0 card-body\">\r\n      <p>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere\r\n        erat a ante.\r\n      </p>\r\n      <footer className=\"blockquote-footer\">\r\n        <small className=\"text-muted\">\r\n          Someone famous in <cite title=\"Source Title\">Source Title</cite>\r\n        </small>\r\n      </footer>\r\n    </blockquote>\r\n  </Card>\r\n  <Card className=\"text-center\">\r\n    <Card.Body>\r\n      <Card.Title>Card title</Card.Title>\r\n      <Card.Text>\r\n        This card has supporting text below as a natural lead-in to additional\r\n        content.{' '}\r\n      </Card.Text>\r\n      <Card.Text>\r\n        <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n      </Card.Text>\r\n    </Card.Body>\r\n  </Card>\r\n  <Card>\r\n    <Card.Img src=\"holder.js/100px160\" />\r\n  </Card>\r\n  <Card className=\"text-right\">\r\n    <blockquote className=\"blockquote mb-0 card-body\">\r\n      <p>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere\r\n        erat a ante.\r\n      </p>\r\n      <footer className=\"blockquote-footer\">\r\n        <small className=\"text-muted\">\r\n          Someone famous in <cite title=\"Source Title\">Source Title</cite>\r\n        </small>\r\n      </footer>\r\n    </blockquote>\r\n  </Card>\r\n  <Card>\r\n    <Card.Body>\r\n      <Card.Title>Card title</Card.Title>\r\n      <Card.Text>\r\n        This is a wider card with supporting text below as a natural lead-in to\r\n        additional content. This card has even longer content than the first to\r\n        show that equal height action.\r\n      </Card.Text>\r\n      <Card.Text>\r\n        <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n      </Card.Text>\r\n    </Card.Body>\r\n  </Card>\r\n</CardColumns>\r\n`;\r\n","import React from \"react\";\r\nimport {Carousel} from \"react-bootstrap\";\r\nimport {Notice, KTCodeExample} from \"../../../_metronic/_partials/controls\";\r\n\r\nclass ControlledCarousel extends React.Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.handleSelect = this.handleSelect.bind(this);\r\n\r\n    this.state = {\r\n      index: 0,\r\n      direction: null\r\n    };\r\n  }\r\n\r\n  handleSelect(selectedIndex, e) {\r\n    this.setState({\r\n      index: selectedIndex,\r\n      direction: e.direction\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { index, direction } = this.state;\r\n\r\n    return (\r\n      <Carousel\r\n        activeIndex={index}\r\n        direction={direction}\r\n        onSelect={this.handleSelect}\r\n      >\r\n        <Carousel.Item>\r\n          <img\r\n            className=\"d-block w-100\"\r\n            src=\"data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22800%22%20height%3D%22400%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20800%20400%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_16bbcbfb1a8%20text%20%7B%20fill%3A%23ffffff%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A40pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_16bbcbfb1a8%22%3E%3Crect%20width%3D%22800%22%20height%3D%22400%22%20fill%3D%22%23373940%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%22285.921875%22%20y%3D%22217.7609375%22%3EFirst%20slide%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\"\r\n            alt=\"First slide\"\r\n          />\r\n          <Carousel.Caption>\r\n            <h3>First slide label</h3>\r\n            <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n        <Carousel.Item>\r\n          <img\r\n            className=\"d-block w-100\"\r\n            src=\"data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22800%22%20height%3D%22400%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20800%20400%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_16bbcbfb1a9%20text%20%7B%20fill%3A%23ffffff%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A40pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_16bbcbfb1a9%22%3E%3Crect%20width%3D%22800%22%20height%3D%22400%22%20fill%3D%22%23282c34%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%22247.3125%22%20y%3D%22217.7609375%22%3ESecond%20slide%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\"\r\n            alt=\"Second slide\"\r\n          />\r\n\r\n          <Carousel.Caption>\r\n            <h3>Second slide label</h3>\r\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n        <Carousel.Item>\r\n          <img\r\n            className=\"d-block w-100\"\r\n            src=\"data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22800%22%20height%3D%22400%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20800%20400%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_16bbcbfb1aa%20text%20%7B%20fill%3A%23ffffff%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A40pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_16bbcbfb1aa%22%3E%3Crect%20width%3D%22800%22%20height%3D%22400%22%20fill%3D%22%2320232a%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%22277%22%20y%3D%22217.7609375%22%3EThird%20slide%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\"\r\n            alt=\"Third slide\"\r\n          />\r\n\r\n          <Carousel.Caption>\r\n            <h3>Third slide label</h3>\r\n            <p>\r\n              Praesent commodo cursus magna, vel scelerisque nisl consectetur.\r\n            </p>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n      </Carousel>\r\n    );\r\n  }\r\n}\r\n\r\nexport default class CarouselExamplesPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Notice icon=\"flaticon-warning font-primary\">\r\n          <span>\r\n            A slideshow component for cycling through elements—images or slides\r\n            of text—like a carousel.\r\n          </span>{\" \"}\r\n          <span>\r\n            For more info please check the components's official{\" \"}\r\n            <a\r\n              target=\"_blank\"\r\n              className=\"font-weight-bold\"\r\n              rel=\"noopener noreferrer\"\r\n              href=\"https://react-bootstrap.github.io/components/carousel/\"\r\n            >\r\n              demos & documentation\r\n            </a>\r\n          </span>\r\n        </Notice>\r\n\r\n        <KTCodeExample jsCode={jsCode1} beforeCodeTitle=\"Example\">\r\n          <span>\r\n            Carousels don’t automatically normalize slide dimensions. As such,\r\n            you may need to use additional utilities or custom styles to\r\n            appropriately size content. While carousels support previous/next\r\n            controls and indicators, they’re not explicitly required. Add and\r\n            customize as you see fit.\r\n          </span>\r\n          <div className=\"separator separator-dashed my-7\"></div>\r\n          <Carousel>\r\n            <Carousel.Item>\r\n              <img\r\n                className=\"d-block w-100\"\r\n                src=\"data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22800%22%20height%3D%22400%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20800%20400%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_16bbcbfb1a8%20text%20%7B%20fill%3A%23ffffff%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A40pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_16bbcbfb1a8%22%3E%3Crect%20width%3D%22800%22%20height%3D%22400%22%20fill%3D%22%23373940%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%22285.921875%22%20y%3D%22217.7609375%22%3EFirst%20slide%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\"\r\n                alt=\"First slide\"\r\n              />\r\n              <Carousel.Caption>\r\n                <h3>First slide label</h3>\r\n                <p>\r\n                  Nulla vitae elit libero, a pharetra augue mollis interdum.\r\n                </p>\r\n              </Carousel.Caption>\r\n            </Carousel.Item>\r\n            <Carousel.Item>\r\n              <img\r\n                className=\"d-block w-100\"\r\n                src=\"data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22800%22%20height%3D%22400%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20800%20400%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_16bbcbfb1a9%20text%20%7B%20fill%3A%23ffffff%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A40pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_16bbcbfb1a9%22%3E%3Crect%20width%3D%22800%22%20height%3D%22400%22%20fill%3D%22%23282c34%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%22247.3125%22%20y%3D%22217.7609375%22%3ESecond%20slide%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\"\r\n                alt=\"Second slide\"\r\n              />\r\n\r\n              <Carousel.Caption>\r\n                <h3>Second slide label</h3>\r\n                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\r\n              </Carousel.Caption>\r\n            </Carousel.Item>\r\n            <Carousel.Item>\r\n              <img\r\n                className=\"d-block w-100\"\r\n                src=\"data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22800%22%20height%3D%22400%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20800%20400%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_16bbcbfb1aa%20text%20%7B%20fill%3A%23ffffff%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A40pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_16bbcbfb1aa%22%3E%3Crect%20width%3D%22800%22%20height%3D%22400%22%20fill%3D%22%2320232a%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%22277%22%20y%3D%22217.7609375%22%3EThird%20slide%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\"\r\n                alt=\"Third slide\"\r\n              />\r\n\r\n              <Carousel.Caption>\r\n                <h3>Third slide label</h3>\r\n                <p>\r\n                  Praesent commodo cursus magna, vel scelerisque nisl\r\n                  consectetur.\r\n                </p>\r\n              </Carousel.Caption>\r\n            </Carousel.Item>\r\n          </Carousel>\r\n        </KTCodeExample>\r\n\r\n        <KTCodeExample jsCode={jsCode2} beforeCodeTitle=\"Controlled\">\r\n          <span>\r\n            You can can also control the Carousel state, via the{\" \"}\r\n            <code>activeIndex</code> prop and <code>onSelect</code> handler.\r\n          </span>\r\n          <div className=\"separator separator-dashed my-7\"></div>\r\n          <ControlledCarousel />\r\n        </KTCodeExample>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst jsCode1 = `\r\n<Carousel>\r\n  <Carousel.Item>\r\n    <img\r\n      className=\"d-block w-100\"\r\n      src=\"holder.js/800x400?text=First slide&bg=373940\"\r\n      alt=\"First slide\"\r\n    />\r\n    <Carousel.Caption>\r\n      <h3>First slide label</h3>\r\n      <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\r\n    </Carousel.Caption>\r\n  </Carousel.Item>\r\n  <Carousel.Item>\r\n    <img\r\n      className=\"d-block w-100\"\r\n      src=\"holder.js/800x400?text=Second slide&bg=282c34\"\r\n      alt=\"Third slide\"\r\n    />\r\n\r\n    <Carousel.Caption>\r\n      <h3>Second slide label</h3>\r\n      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\r\n    </Carousel.Caption>\r\n  </Carousel.Item>\r\n  <Carousel.Item>\r\n    <img\r\n      className=\"d-block w-100\"\r\n      src=\"holder.js/800x400?text=Third slide&bg=20232a\"\r\n      alt=\"Third slide\"\r\n    />\r\n\r\n    <Carousel.Caption>\r\n      <h3>Third slide label</h3>\r\n      <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur.</p>\r\n    </Carousel.Caption>\r\n  </Carousel.Item>\r\n</Carousel>\r\n`;\r\nconst jsCode2 = `\r\nclass ControlledCarousel extends React.Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.handleSelect = this.handleSelect.bind(this);\r\n\r\n    this.state = {\r\n      index: 0,\r\n      direction: null,\r\n    };\r\n  }\r\n\r\n  handleSelect(selectedIndex, e) {\r\n    this.setState({\r\n      index: selectedIndex,\r\n      direction: e.direction,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { index, direction } = this.state;\r\n\r\n    return (\r\n      <Carousel\r\n        activeIndex={index}\r\n        direction={direction}\r\n        onSelect={this.handleSelect}\r\n      >\r\n        <Carousel.Item>\r\n          <img\r\n            className=\"d-block w-100\"\r\n            src=\"holder.js/800x400?text=First slide&bg=373940\"\r\n            alt=\"First slide\"\r\n          />\r\n          <Carousel.Caption>\r\n            <h3>First slide label</h3>\r\n            <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n        <Carousel.Item>\r\n          <img\r\n            className=\"d-block w-100\"\r\n            src=\"holder.js/800x400?text=Second slide&bg=282c34\"\r\n            alt=\"Third slide\"\r\n          />\r\n\r\n          <Carousel.Caption>\r\n            <h3>Second slide label</h3>\r\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n        <Carousel.Item>\r\n          <img\r\n            className=\"d-block w-100\"\r\n            src=\"holder.js/800x400?text=Third slide&bg=20232a\"\r\n            alt=\"Third slide\"\r\n          />\r\n\r\n          <Carousel.Caption>\r\n            <h3>Third slide label</h3>\r\n            <p>\r\n              Praesent commodo cursus magna, vel scelerisque nisl consectetur.\r\n            </p>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n      </Carousel>\r\n    );\r\n  }\r\n}\r\n\r\nrender(<ControlledCarousel />);\r\n`;\r\n","/* eslint-disable no-unused-vars */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport {\r\n  Button,\r\n  Dropdown,\r\n  FormControl,\r\n  ButtonGroup,\r\n  DropdownButton,\r\n  SplitButton,\r\n  ButtonToolbar\r\n} from \"react-bootstrap\";\r\nimport {Notice, KTCodeExample} from \"../../../_metronic/_partials/controls\";\r\n\r\nconst CustomToggle = React.forwardRef((props, ref) => {\r\n  return (\r\n    <a\r\n      href=\"\"\r\n      ref={ref}\r\n      onClick={e => {\r\n        e.preventDefault();\r\n        this.props.handleClick(e);\r\n      }}\r\n    >\r\n      {props.children}\r\n    </a>\r\n  );\r\n});\r\n\r\nclass CustomMenu extends React.Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n\r\n    this.state = { value: \"\" };\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({ value: e.target.value.toLowerCase().trim() });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      children,\r\n      style,\r\n      className,\r\n      \"aria-labelledby\": labeledBy\r\n    } = this.props;\r\n\r\n    const { value } = this.state;\r\n\r\n    return (\r\n      <div style={style} className={className} aria-labelledby={labeledBy}>\r\n        <FormControl\r\n          autoFocus\r\n          className=\"mx-3 my-2 w-auto\"\r\n          placeholder=\"Type to filter...\"\r\n          onChange={this.handleChange}\r\n          value={value}\r\n        />\r\n        <ul className=\"list-unstyled\">\r\n          {React.Children.toArray(children).filter(\r\n            child =>\r\n              !value || child.props.children.toLowerCase().startsWith(value)\r\n          )}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default class DropdownsExamplesPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Notice icon=\"flaticon-warning font-primary\">\r\n          <span>\r\n            Toggle contextual overlays for displaying lists of links and more\r\n            with the Bootstrap dropdown plugin.\r\n          </span>\r\n          <span>\r\n            For more info please check the components's official{\" \"}\r\n            <a\r\n              target=\"_blank\"\r\n              className=\"font-weight-bold\"\r\n              rel=\"noopener noreferrer\"\r\n              href=\"https://react-bootstrap.github.io/components/dropdowns/\"\r\n            >\r\n              demos & documentation\r\n            </a>\r\n          </span>\r\n        </Notice>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <KTCodeExample\r\n              jsCode={jsCode1}\r\n              beforeCodeTitle=\"Single button dropdowns\"\r\n            >\r\n              <span>\r\n                The basic Dropdown is composed of a wrapping Dropdown and inner{\" \"}\r\n                <code>&lt;DropdownMenu&gt;</code>, and{\" \"}\r\n                <code>&lt;DropdownToggle&gt;</code>. By default the{\" \"}\r\n                <code>&lt;DropdownToggle&gt;</code> will render a Button\r\n                component and accepts all the same props.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\" />\r\n              <Dropdown>\r\n                <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                  Dropdown Button\r\n                </Dropdown.Toggle>\r\n\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item href=\"#/action-1\">Action</Dropdown.Item>\r\n                  <Dropdown.Item href=\"#/action-2\">\r\n                    Another action\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item href=\"#/action-3\">\r\n                    Something else\r\n                  </Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </KTCodeExample>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <KTCodeExample\r\n              jsCode={jsCode2}\r\n              beforeCodeTitle=\"Split button dropdowns\"\r\n            >\r\n              <span>\r\n                Similarly, You create a split dropdown by combining the Dropdown\r\n                components with another Button and a ButtonGroup.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\" />\r\n              <Dropdown as={ButtonGroup}>\r\n                <Button variant=\"success\">Split Button</Button>\r\n\r\n                <Dropdown.Toggle\r\n                  split\r\n                  variant=\"success\"\r\n                  id=\"dropdown-split-basic\"\r\n                />\r\n\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item href=\"#/action-1\">Action</Dropdown.Item>\r\n                  <Dropdown.Item href=\"#/action-2\">\r\n                    Another action\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item href=\"#/action-3\">\r\n                    Something else\r\n                  </Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </KTCodeExample>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <KTCodeExample jsCode={jsCode3} beforeCodeTitle=\"Sizing\">\r\n              <span>Dropdowns work with buttons of all sizes.</span>\r\n              <div className=\"separator separator-dashed my-7\" />\r\n              <>\r\n                <ButtonToolbar>\r\n                  {[DropdownButton, SplitButton].map((DropdownType, idx) => (\r\n                    <div key={idx} className=\"pr-1\">\r\n                      <DropdownType\r\n                        size=\"lg\"\r\n                        title=\"Drop small\"\r\n                        id={`dropdown-button-drop-${idx}`}\r\n                        key={idx}\r\n                      >\r\n                        <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"2\">\r\n                          Another action\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"3\">\r\n                          Something else here\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Divider />\r\n                        <Dropdown.Item eventKey=\"4\">\r\n                          Separated link\r\n                        </Dropdown.Item>\r\n                      </DropdownType>\r\n                    </div>\r\n                  ))}\r\n                </ButtonToolbar>\r\n                <br />\r\n                <ButtonToolbar>\r\n                  {[DropdownButton, SplitButton].map((DropdownType, idx) => (\r\n                    <div key={idx} className=\"pr-1\">\r\n                      <DropdownType\r\n                        size=\"sm\"\r\n                        variant=\"secondary\"\r\n                        title=\"Drop small\"\r\n                        id={`dropdown-button-drop-${idx}`}\r\n                        key={idx}\r\n                      >\r\n                        <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"2\">\r\n                          Another action\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"3\">\r\n                          Something else here\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Divider />\r\n                        <Dropdown.Item eventKey=\"4\">\r\n                          Separated link\r\n                        </Dropdown.Item>\r\n                      </DropdownType>\r\n                    </div>\r\n                  ))}\r\n                </ButtonToolbar>\r\n              </>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode5} beforeCodeTitle=\"Dropdown items\">\r\n              <span>\r\n                Historically dropdown menu contents had to be links, but that’s\r\n                no longer the case with v4. Now you can optionally use{\" \"}\r\n                <code>&lt;button&gt;</code> elements in your dropdowns instead\r\n                of just <code>&lt;a&gt;</code>s.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\" />\r\n              <DropdownButton id=\"dropdown-item-button\" title=\"Dropdown button\">\r\n                <Dropdown.Item as=\"button\">Action</Dropdown.Item>\r\n                <Dropdown.Item as=\"button\">Another action</Dropdown.Item>\r\n                <Dropdown.Item as=\"button\">Something else</Dropdown.Item>\r\n              </DropdownButton>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode9} beforeCodeTitle=\"Customization\">\r\n              <span>\r\n                If the default handling of the dropdown menu and toggle\r\n                components aren't to your liking, you can customize them, by\r\n                using the more basic <code>&lt;Dropdown&gt;</code> Component to\r\n                explicitly specify the Toggle and Menu components\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\" />\r\n              <ButtonToolbar>\r\n                <div className=\"pr-1\">\r\n                  <Dropdown>\r\n                    <Dropdown.Toggle id=\"dropdown-custom-1\">\r\n                      Pow! Zoom!\r\n                    </Dropdown.Toggle>\r\n                    <Dropdown.Menu className=\"super-colors\">\r\n                      <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                      <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n                      <Dropdown.Item eventKey=\"3\" active>\r\n                        Active Item\r\n                      </Dropdown.Item>\r\n                      <Dropdown.Divider />\r\n                      <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n                    </Dropdown.Menu>\r\n                  </Dropdown>\r\n                </div>\r\n                <div className=\"pr-1\">\r\n                  <Dropdown as={ButtonGroup}>\r\n                    <Button variant=\"info\">mix it up style-wise</Button>\r\n                    <Dropdown.Toggle\r\n                      split\r\n                      variant=\"success\"\r\n                      id=\"dropdown-custom-2\"\r\n                    />\r\n                    <Dropdown.Menu className=\"super-colors\">\r\n                      <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                      <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n                      <Dropdown.Item eventKey=\"3\" active>\r\n                        Active Item\r\n                      </Dropdown.Item>\r\n                      <Dropdown.Divider />\r\n                      <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n                    </Dropdown.Menu>\r\n                  </Dropdown>\r\n                </div>\r\n              </ButtonToolbar>\r\n            </KTCodeExample>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <KTCodeExample jsCode={jsCode4} beforeCodeTitle=\"Drop directions\">\r\n              <span>\r\n                Trigger dropdown menus above, below, left, or to the right of\r\n                their toggle elements, with the <code>drop</code> prop.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\" />\r\n              <>\r\n                <ButtonToolbar>\r\n                  {[\"up\", \"down\", \"left\", \"right\"].map(direction => (\r\n                    <div className=\"pr-1 pb-1\" key={direction}>\r\n                      <DropdownButton\r\n                        drop={direction}\r\n                        variant=\"secondary\"\r\n                        title={` Drop ${direction} `}\r\n                        id={`dropdown-button-drop-${direction}`}\r\n                        key={direction}\r\n                      >\r\n                        <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"2\">\r\n                          Another action\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"3\">\r\n                          Something else here\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Divider />\r\n                        <Dropdown.Item eventKey=\"4\">\r\n                          Separated link\r\n                        </Dropdown.Item>\r\n                      </DropdownButton>\r\n                    </div>\r\n                  ))}\r\n                </ButtonToolbar>\r\n\r\n                <ButtonToolbar>\r\n                  {[\"up\", \"down\", \"left\", \"right\"].map(direction => (\r\n                    <div className=\"pr-1\" key={direction}>\r\n                      <SplitButton\r\n                        drop={direction}\r\n                        variant=\"secondary\"\r\n                        title={`Drop ${direction}`}\r\n                        id={`dropdown-button-drop-${direction}`}\r\n                        key={direction}\r\n                      >\r\n                        <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"2\">\r\n                          Another action\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"3\">\r\n                          Something else here\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Divider />\r\n                        <Dropdown.Item eventKey=\"4\">\r\n                          Separated link\r\n                        </Dropdown.Item>\r\n                      </SplitButton>\r\n                    </div>\r\n                  ))}\r\n                </ButtonToolbar>\r\n              </>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode6} beforeCodeTitle=\"Menu alignment\">\r\n              <span>\r\n                By default, a dropdown menu is aligned to the left, but you can\r\n                switch it by passing the <code>alignRight</code> prop.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\" />\r\n              <DropdownButton\r\n                alignRight\r\n                title=\"Dropdown right\"\r\n                id=\"dropdown-menu-align-right\"\r\n              >\r\n                <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n                <Dropdown.Item eventKey=\"3\">Something else here</Dropdown.Item>\r\n                <Dropdown.Divider />\r\n                <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n              </DropdownButton>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample\r\n              jsCode={jsCode10}\r\n              beforeCodeTitle=\"Custom Dropdown Components\"\r\n            >\r\n              <span>\r\n                For those that want to customize everything, you can forgo the\r\n                included Toggle and Menu components, and create your own. By\r\n                providing custom components to the <code>as</code> prop, you can\r\n                control how each component behaves. Custom toggle and menu\r\n                components must be able to accept refs.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\" />\r\n              <Dropdown>\r\n                <Dropdown.Toggle\r\n                  as={CustomToggle}\r\n                  id=\"dropdown-custom-components\"\r\n                >\r\n                  Custom toggle\r\n                </Dropdown.Toggle>\r\n\r\n                <Dropdown.Menu as={CustomMenu}>\r\n                  <Dropdown.Item eventKey=\"1\">Red</Dropdown.Item>\r\n                  <Dropdown.Item eventKey=\"2\">Blue</Dropdown.Item>\r\n                  <Dropdown.Item eventKey=\"3\" active>\r\n                    Orange\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item eventKey=\"1\">Red-Orange</Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </KTCodeExample>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst jsCode1 = `\r\n<Dropdown>\r\n  <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n    Dropdown Button\r\n  </Dropdown.Toggle>\r\n\r\n  <Dropdown.Menu>\r\n    <Dropdown.Item href=\"#/action-1\">Action</Dropdown.Item>\r\n    <Dropdown.Item href=\"#/action-2\">Another action</Dropdown.Item>\r\n    <Dropdown.Item href=\"#/action-3\">Something else</Dropdown.Item>\r\n  </Dropdown.Menu>\r\n</Dropdown>\r\n`;\r\nconst jsCode2 = `\r\n<Dropdown as={ButtonGroup}>\r\n  <Button variant=\"success\">Split Button</Button>\r\n\r\n  <Dropdown.Toggle split variant=\"success\" id=\"dropdown-split-basic\" />\r\n\r\n  <Dropdown.Menu>\r\n    <Dropdown.Item href=\"#/action-1\">Action</Dropdown.Item>\r\n    <Dropdown.Item href=\"#/action-2\">Another action</Dropdown.Item>\r\n    <Dropdown.Item href=\"#/action-3\">Something else</Dropdown.Item>\r\n  </Dropdown.Menu>\r\n</Dropdown>\r\n`;\r\nconst jsCode3 = `\r\n<>\r\n  <ButtonToolbar>\r\n    {[DropdownButton, SplitButton].map((DropdownType, idx) => (\r\n      <DropdownType\r\n        size=\"lg\"\r\n        title=\"Drop small\"\r\n        id={\\`dropdown-button-drop-\\${idx}\\`}\r\n        key={idx}\r\n      >\r\n        <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n        <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n        <Dropdown.Item eventKey=\"3\">Something else here</Dropdown.Item>\r\n        <Dropdown.Divider />\r\n        <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n      </DropdownType>\r\n    ))}\r\n  </ButtonToolbar>\r\n  <ButtonToolbar>\r\n    {[DropdownButton, SplitButton].map((DropdownType, idx) => (\r\n      <DropdownType\r\n        size=\"sm\"\r\n        variant=\"secondary\"\r\n        title=\"Drop small\"\r\n        id={\\`dropdown-button-drop-\\${idx}\\`}\r\n        key={idx}\r\n      >\r\n        <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n        <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n        <Dropdown.Item eventKey=\"3\">Something else here</Dropdown.Item>\r\n        <Dropdown.Divider />\r\n        <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n      </DropdownType>\r\n    ))}\r\n  </ButtonToolbar>\r\n</>\r\n`;\r\nconst jsCode4 = `\r\n<>\r\n  <ButtonToolbar>\r\n    {['up', 'down', 'left', 'right'].map(direction => (\r\n      <DropdownButton\r\n        drop={direction}\r\n        variant=\"secondary\"\r\n        title={\\` Drop \\${direction} \\`}\r\n        id={\\`dropdown-button-drop-\\${direction}\\`}\r\n        key={direction}\r\n      >\r\n        <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n        <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n        <Dropdown.Item eventKey=\"3\">Something else here</Dropdown.Item>\r\n        <Dropdown.Divider />\r\n        <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n      </DropdownButton>\r\n    ))}\r\n  </ButtonToolbar>\r\n\r\n  <ButtonToolbar>\r\n    {['up', 'down', 'left', 'right'].map(direction => (\r\n      <SplitButton\r\n        drop={direction}\r\n        variant=\"secondary\"\r\n        title={\\`Drop \\${direction}\\`}\r\n        id={\\`dropdown-button-drop-\\${direction}\\`}\r\n        key={direction}\r\n      >\r\n        <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n        <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n        <Dropdown.Item eventKey=\"3\">Something else here</Dropdown.Item>\r\n        <Dropdown.Divider />\r\n        <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n      </SplitButton>\r\n    ))}\r\n  </ButtonToolbar>\r\n</>\r\n`;\r\nconst jsCode5 = `\r\n<DropdownButton id=\"dropdown-item-button\" title=\"Dropdown button\">\r\n  <Dropdown.Item as=\"button\">Action</Dropdown.Item>\r\n  <Dropdown.Item as=\"button\">Another action</Dropdown.Item>\r\n  <Dropdown.Item as=\"button\">Something else</Dropdown.Item>\r\n</DropdownButton>\r\n`;\r\nconst jsCode6 = `\r\n<DropdownButton\r\n  alignRight\r\n  title=\"Dropdown right\"\r\n  id=\"dropdown-menu-align-right\"\r\n>\r\n  <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n  <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n  <Dropdown.Item eventKey=\"3\">Something else here</Dropdown.Item>\r\n  <Dropdown.Divider />\r\n  <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n</DropdownButton>\r\n`;\r\nconst jsCode7 = `\r\n<Dropdown.Menu show>\r\n  <Dropdown.Header>Dropdown header</Dropdown.Header>\r\n  <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n  <Dropdown.Item eventKey=\"3\">Something else here</Dropdown.Item>\r\n</Dropdown.Menu>\r\n`;\r\nconst jsCode8 = `\r\n<Dropdown.Menu show>\r\n  <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n  <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n  <Dropdown.Item eventKey=\"3\">Something else here</Dropdown.Item>\r\n  <Dropdown.Divider />\r\n  <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n</Dropdown.Menu>\r\n`;\r\nconst jsCode9 = `\r\n<ButtonToolbar>\r\n  <Dropdown>\r\n    <Dropdown.Toggle id=\"dropdown-custom-1\">Pow! Zoom!</Dropdown.Toggle>\r\n    <Dropdown.Menu className=\"super-colors\">\r\n      <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n      <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n      <Dropdown.Item eventKey=\"3\" active>\r\n        Active Item\r\n      </Dropdown.Item>\r\n      <Dropdown.Divider />\r\n      <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n    </Dropdown.Menu>\r\n  </Dropdown>\r\n\r\n  <Dropdown as={ButtonGroup}>\r\n    <Button variant=\"info\">mix it up style-wise</Button>\r\n    <Dropdown.Toggle split variant=\"success\" id=\"dropdown-custom-2\" />\r\n    <Dropdown.Menu className=\"super-colors\">\r\n      <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n      <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n      <Dropdown.Item eventKey=\"3\" active>\r\n        Active Item\r\n      </Dropdown.Item>\r\n      <Dropdown.Divider />\r\n      <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n    </Dropdown.Menu>\r\n  </Dropdown>\r\n</ButtonToolbar>\r\n`;\r\nconst jsCode10 = `\r\nclass CustomToggle extends React.Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick(e) {\r\n    e.preventDefault();\r\n\r\n    this.props.onClick(e);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <a href=\"\" onClick={this.handleClick}>\r\n        {this.props.children}\r\n      </a>\r\n    );\r\n  }\r\n}\r\n\r\nclass CustomMenu extends React.Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n\r\n    this.state = { value: '' };\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({ value: e.target.value.toLowerCase().trim() });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      children,\r\n      style,\r\n      className,\r\n      'aria-labelledby': labeledBy,\r\n    } = this.props;\r\n\r\n    const { value } = this.state;\r\n\r\n    return (\r\n      <div style={style} className={className} aria-labelledby={labeledBy}>\r\n        <FormControl\r\n          autoFocus\r\n          className=\"mx-3 my-2 w-auto\"\r\n          placeholder=\"Type to filter...\"\r\n          onChange={this.handleChange}\r\n          value={value}\r\n        />\r\n        <ul className=\"list-unstyled\">\r\n          {React.Children.toArray(children).filter(\r\n            child =>\r\n              !value || child.props.children.toLowerCase().startsWith(value),\r\n          )}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nrender(\r\n  <Dropdown>\r\n    <Dropdown.Toggle as={CustomToggle} id=\"dropdown-custom-components\">\r\n      Custom toggle\r\n    </Dropdown.Toggle>\r\n\r\n    <Dropdown.Menu as={CustomMenu}>\r\n      <Dropdown.Item eventKey=\"1\">Red</Dropdown.Item>\r\n      <Dropdown.Item eventKey=\"2\">Blue</Dropdown.Item>\r\n      <Dropdown.Item eventKey=\"3\" active>\r\n        Orange\r\n      </Dropdown.Item>\r\n      <Dropdown.Item eventKey=\"1\">Red-Orange</Dropdown.Item>\r\n    </Dropdown.Menu>\r\n  </Dropdown>,\r\n);\r\n`;\r\n","import React from \"react\";\r\nimport {Button, Form, InputGroup, Col, Row} from \"react-bootstrap\";\r\nimport {Notice, KTCodeExample} from \"../../../_metronic/_partials/controls\";\r\n\r\nclass FormExample extends React.Component {\r\n  constructor(...args) {\r\n    super(...args);\r\n\r\n    this.state = { validated: false };\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n    this.setState({ validated: true });\r\n  }\r\n\r\n  render() {\r\n    const { validated } = this.state;\r\n    return (\r\n      <Form\r\n        noValidate\r\n        validated={validated}\r\n        onSubmit={e => this.handleSubmit(e)}\r\n      >\r\n        <Form.Row>\r\n          <Form.Group as={Col} md=\"4\" controlId=\"validationCustom01\">\r\n            <Form.Label>First name</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type=\"text\"\r\n              placeholder=\"First name\"\r\n              defaultValue=\"Mark\"\r\n            />\r\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Form.Group as={Col} md=\"4\" controlId=\"validationCustom02\">\r\n            <Form.Label>Last name</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type=\"text\"\r\n              placeholder=\"Last name\"\r\n              defaultValue=\"Otto\"\r\n            />\r\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Form.Group as={Col} md=\"4\" controlId=\"validationCustomUsername\">\r\n            <Form.Label>Username</Form.Label>\r\n            <InputGroup>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Username\"\r\n                aria-describedby=\"inputGroupPrepend\"\r\n                required\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                Please choose a username.\r\n              </Form.Control.Feedback>\r\n            </InputGroup>\r\n          </Form.Group>\r\n        </Form.Row>\r\n        <Form.Row>\r\n          <Form.Group as={Col} md=\"6\" controlId=\"validationCustom03\">\r\n            <Form.Label>City</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"City\" required />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please provide a valid city.\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Form.Group as={Col} md=\"3\" controlId=\"validationCustom04\">\r\n            <Form.Label>State</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"State\" required />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please provide a valid state.\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Form.Group as={Col} md=\"3\" controlId=\"validationCustom05\">\r\n            <Form.Label>Zip</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"Zip\" required />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please provide a valid zip.\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n        </Form.Row>\r\n        <Form.Group>\r\n          <Form.Check\r\n            required\r\n            label=\"Agree to terms and conditions\"\r\n            feedback=\"You must agree before submitting.\"\r\n          />\r\n        </Form.Group>\r\n        <Button type=\"submit\">Submit form</Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default class FormsExamplesPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Notice icon=\"flaticon-warning font-primary\">\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"font-weight-bold\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://react-bootstrap.github.io/components/forms/\"\r\n          >\r\n            demos & documentation\r\n          </a>\r\n        </Notice>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <KTCodeExample jsCode={jsCode1} beforeCodeTitle=\"Basic Example\">\r\n              <span>\r\n                The <code>&lt;FormControl&gt;</code> component renders a form\r\n                control with Bootstrap styling. The{\" \"}\r\n                <code>&lt;FormGroup&gt;</code> component wraps a form control\r\n                with proper spacing, along with support for a label, help text,\r\n                and validation state. To ensure accessibility, set controlId on{\" \"}\r\n                <code>&lt;FormGroup&gt;</code>, and use{\" \"}\r\n                <code>&lt;FormLabel&gt;</code> for the label.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <Form>\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                  <Form.Label>Email address</Form.Label>\r\n                  <Form.Control type=\"email\" placeholder=\"Enter email\" />\r\n                  <Form.Text className=\"text-muted\">\r\n                    We'll never share your email with anyone else.\r\n                  </Form.Text>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                  <Form.Label>Password</Form.Label>\r\n                  <Form.Control type=\"password\" placeholder=\"Password\" />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBasicChecbox\">\r\n                  <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n                </Form.Group>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                  Submit\r\n                </Button>\r\n              </Form>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode3} beforeCodeTitle=\"Sizing\">\r\n              <span>\r\n                Use <code>size</code> on <code>&lt;FormControl&gt;</code> to\r\n                change the size of inputs.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <>\r\n                <Form.Control size=\"lg\" type=\"text\" placeholder=\"Large text\" />\r\n                <br />\r\n                <Form.Control type=\"text\" placeholder=\"Normal text\" />\r\n                <br />\r\n                <Form.Control size=\"sm\" type=\"text\" placeholder=\"Small text\" />\r\n              </>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode5} beforeCodeTitle=\"Default (stacked)\">\r\n              <span>\r\n                By default, any number of checkboxes and radios that are\r\n                immediate sibling will be vertically stacked and appropriately\r\n                spaced with FormCheck.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <Form>\r\n                {[\"checkbox\", \"radio\"].map(type => (\r\n                  <div key={`default-${type}`} className=\"mb-3\">\r\n                    <Form.Check\r\n                      type={type}\r\n                      id={`default-${type}`}\r\n                      label={`default ${type}`}\r\n                    />\r\n\r\n                    <Form.Check\r\n                      disabled\r\n                      type={type}\r\n                      label={`disabled ${type}`}\r\n                      id={`disabled-default-${type}`}\r\n                    />\r\n                  </div>\r\n                ))}\r\n              </Form>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode7} beforeCodeTitle=\"Without labels\">\r\n              <span>\r\n                When you render a FormCheck without a label (no{\" \"}\r\n                <code>children</code>) some additional styling is applied to\r\n                keep the inputs from collapsing.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <>\r\n                <Form.Check aria-label=\"option 1\" />\r\n                <Form.Check type=\"radio\" aria-label=\"radio 1\" />\r\n              </>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode9} beforeCodeTitle=\"Form group\">\r\n              <span className=\"mb-3\">\r\n                The <code>FormGroup</code> component is the easiest way to add\r\n                some structure to forms. It provides a flexible container for\r\n                grouping of labels, controls, optional help text, and form\r\n                validation messaging.\r\n              </span>\r\n              <div>\r\n                You also add the <code>controlId</code> prop to accessibly wire\r\n                the nested label and input together via the <code>id</code>.\r\n              </div>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <Form>\r\n                <Form.Group controlId=\"formGroupEmail\">\r\n                  <Form.Label>Email address</Form.Label>\r\n                  <Form.Control type=\"email\" placeholder=\"Enter email\" />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formGroupPassword\">\r\n                  <Form.Label>Password</Form.Label>\r\n                  <Form.Control type=\"password\" placeholder=\"Password\" />\r\n                </Form.Group>\r\n              </Form>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample\r\n              jsCode={jsCode11}\r\n              beforeCodeTitle=\"Form row\"\r\n              codeBlockHeight=\"400px\"\r\n            >\r\n              <span>\r\n                You may also swap <code>&lt;Row&gt;</code> for{\" \"}\r\n                <code>&lt;Form.Row&gt;</code>, a variation of the standard grid\r\n                row that overrides the default column gutters for tighter and\r\n                more compact layouts.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <Form>\r\n                <Form.Row>\r\n                  <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                    <Form.Label>Email</Form.Label>\r\n                    <Form.Control type=\"email\" placeholder=\"Enter email\" />\r\n                  </Form.Group>\r\n\r\n                  <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type=\"password\" placeholder=\"Password\" />\r\n                  </Form.Group>\r\n                </Form.Row>\r\n\r\n                <Form.Group controlId=\"formGridAddress1\">\r\n                  <Form.Label>Address</Form.Label>\r\n                  <Form.Control placeholder=\"1234 Main St\" />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formGridAddress2\">\r\n                  <Form.Label>Address 2</Form.Label>\r\n                  <Form.Control placeholder=\"Apartment, studio, or floor\" />\r\n                </Form.Group>\r\n\r\n                <Form.Row>\r\n                  <Form.Group as={Col} controlId=\"formGridCity\">\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control />\r\n                  </Form.Group>\r\n\r\n                  <Form.Group as={Col} controlId=\"formGridState\">\r\n                    <Form.Label>State</Form.Label>\r\n                    <Form.Control as=\"select\">\r\n                      <option>Choose...</option>\r\n                      <option>...</option>\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group as={Col} controlId=\"formGridZip\">\r\n                    <Form.Label>Zip</Form.Label>\r\n                    <Form.Control />\r\n                  </Form.Group>\r\n                </Form.Row>\r\n\r\n                <Form.Group id=\"formGridCheckbox\">\r\n                  <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n                </Form.Group>\r\n\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                  Submit\r\n                </Button>\r\n              </Form>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample\r\n              jsCode={jsCode13}\r\n              beforeCodeTitle=\"Native HTML5 form validation\"\r\n              codeBlockHeight=\"400px\"\r\n            >\r\n              <span>\r\n                For native HTML form validation–available in all our supported\r\n                browsers, the <code>:valid</code> and <code>:invalid</code>{\" \"}\r\n                pseudo selectors are used to apply validation styles as well as\r\n                display feedback messages.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <FormExample />\r\n            </KTCodeExample>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <KTCodeExample jsCode={jsCode2} beforeCodeTitle=\"Form controls\">\r\n              <span>\r\n                For textual form controls—like <code>input</code>s,{\" \"}\r\n                <code>select</code>s, and <code>textarea</code>s—use the\r\n                FormControl component. FormControl adds some additional styles\r\n                for general appearance, focus state, sizing, and more.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <Form>\r\n                <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                  <Form.Label>Email address</Form.Label>\r\n                  <Form.Control type=\"email\" placeholder=\"name@example.com\" />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                  <Form.Label>Example select</Form.Label>\r\n                  <Form.Control as=\"select\">\r\n                    <option>1</option>\r\n                    <option>2</option>\r\n                    <option>3</option>\r\n                    <option>4</option>\r\n                    <option>5</option>\r\n                  </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"exampleForm.ControlSelect2\">\r\n                  <Form.Label>Example multiple select</Form.Label>\r\n                  <Form.Control as=\"select\" multiple>\r\n                    <option>1</option>\r\n                    <option>2</option>\r\n                    <option>3</option>\r\n                    <option>4</option>\r\n                    <option>5</option>\r\n                  </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                  <Form.Label>Example textarea</Form.Label>\r\n                  <Form.Control as=\"textarea\" rows=\"3\" />\r\n                </Form.Group>\r\n              </Form>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode4} beforeCodeTitle=\"Plaintext\">\r\n              <span>\r\n                If you want to have elements in your form styled as plain text,\r\n                use the <code>plaintext</code> prop on FormControls to remove\r\n                the default form field styling and preserve the correct margin\r\n                and padding.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <Form>\r\n                <Form.Group as={Row} controlId=\"formPlaintextEmail\">\r\n                  <Form.Label column sm=\"2\">\r\n                    Email\r\n                  </Form.Label>\r\n                  <Col sm=\"10\">\r\n                    <Form.Control\r\n                      plaintext\r\n                      readOnly\r\n                      defaultValue=\"email@example.com\"\r\n                    />\r\n                  </Col>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Row} controlId=\"formPlaintextPassword\">\r\n                  <Form.Label column sm=\"2\">\r\n                    Password\r\n                  </Form.Label>\r\n                  <Col sm=\"10\">\r\n                    <Form.Control type=\"password\" placeholder=\"Password\" />\r\n                  </Col>\r\n                </Form.Group>\r\n              </Form>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode6} beforeCodeTitle=\"Inline\">\r\n              <span>\r\n                Group checkboxes or radios on the same horizontal row by adding\r\n                the <code>inline</code> prop.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <Form>\r\n                {[\"checkbox\", \"radio\"].map(type => (\r\n                  <div key={`inline-${type}`} className=\"mb-3\">\r\n                    <Form.Check\r\n                      inline\r\n                      label=\"1\"\r\n                      type={type}\r\n                      id={`inline-${type}-1`}\r\n                    />\r\n                    <Form.Check\r\n                      inline\r\n                      label=\"2\"\r\n                      type={type}\r\n                      id={`inline-${type}-2`}\r\n                    />\r\n                    <Form.Check\r\n                      inline\r\n                      disabled\r\n                      label=\"3 (disabled)\"\r\n                      type={type}\r\n                      id={`inline-${type}-3`}\r\n                    />\r\n                  </div>\r\n                ))}\r\n              </Form>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample\r\n              jsCode={jsCode8}\r\n              beforeCodeTitle=\"Customizing FormCheck rendering\"\r\n            >\r\n              <span className=\"mb-3\">\r\n                When you need tighter control, or want to customize how the{\" \"}\r\n                <code>FormCheck</code> component renders, it may better to use\r\n                it's constituent parts directly.\r\n              </span>\r\n              <div>\r\n                By provided <code>children</code> to the <code>FormCheck</code>{\" \"}\r\n                you can forgo the default rendering and handle it yourself.\r\n              </div>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <Form>\r\n                {[\"checkbox\", \"radio\"].map(type => (\r\n                  <div key={type} className=\"mb-3\">\r\n                    <Form.Check type={type} id={`check-api-${type}`}>\r\n                      <Form.Check.Input type={type} isValid />\r\n                      <Form.Check.Label>{`Custom api ${type}`}</Form.Check.Label>\r\n                      <Form.Control.Feedback type=\"valid\">\r\n                        You did it!\r\n                      </Form.Control.Feedback>\r\n                    </Form.Check>\r\n                  </div>\r\n                ))}\r\n              </Form>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode10} beforeCodeTitle=\"Form grid\">\r\n              <span>\r\n                More complex forms can be built using the grid components. Use\r\n                these for form layouts that require multiple columns, varied\r\n                widths, and additional alignment options.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <Form>\r\n                <Row>\r\n                  <Col>\r\n                    <Form.Control placeholder=\"First name\" />\r\n                  </Col>\r\n                  <Col>\r\n                    <Form.Control placeholder=\"Last name\" />\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample\r\n              jsCode={jsCode12}\r\n              beforeCodeTitle=\"Horizontal forms\"\r\n              codeBlockHeight=\"400px\"\r\n            >\r\n              <span>\r\n                You may also swap <code>&lt;Row&gt;</code> for{\" \"}\r\n                <code>&lt;Form.Row&gt;</code>, a variation of the standard grid\r\n                row that overrides the default column gutters for tighter and\r\n                more compact layouts.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <Form>\r\n                <Form.Group as={Row} controlId=\"formHorizontalEmail\">\r\n                  <Form.Label column sm={2}>\r\n                    Email\r\n                  </Form.Label>\r\n                  <Col sm={10}>\r\n                    <Form.Control type=\"email\" placeholder=\"Email\" />\r\n                  </Col>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Row} controlId=\"formHorizontalPassword\">\r\n                  <Form.Label column sm={2}>\r\n                    Password\r\n                  </Form.Label>\r\n                  <Col sm={10}>\r\n                    <Form.Control type=\"password\" placeholder=\"Password\" />\r\n                  </Col>\r\n                </Form.Group>\r\n                <fieldset>\r\n                  <Form.Group as={Row}>\r\n                    <Form.Label as=\"legend\" column sm={2}>\r\n                      Radios\r\n                    </Form.Label>\r\n                    <Col sm={10}>\r\n                      <Form.Check\r\n                        type=\"radio\"\r\n                        label=\"first radio\"\r\n                        name=\"formHorizontalRadios\"\r\n                        id=\"formHorizontalRadios1\"\r\n                      />\r\n                      <Form.Check\r\n                        type=\"radio\"\r\n                        label=\"second radio\"\r\n                        name=\"formHorizontalRadios\"\r\n                        id=\"formHorizontalRadios2\"\r\n                      />\r\n                      <Form.Check\r\n                        type=\"radio\"\r\n                        label=\"third radio\"\r\n                        name=\"formHorizontalRadios\"\r\n                        id=\"formHorizontalRadios3\"\r\n                      />\r\n                    </Col>\r\n                  </Form.Group>\r\n                </fieldset>\r\n                <Form.Group as={Row} controlId=\"formHorizontalCheck\">\r\n                  <Col sm={{ span: 10, offset: 2 }}>\r\n                    <Form.Check label=\"Remember me\" />\r\n                  </Col>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Row}>\r\n                  <Col sm={{ span: 10, offset: 2 }}>\r\n                    <Button type=\"submit\">Sign in</Button>\r\n                  </Col>\r\n                </Form.Group>\r\n              </Form>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode16} beforeCodeTitle=\"Inline\">\r\n              <Form>\r\n                {[\"checkbox\", \"radio\"].map(type => (\r\n                  <div key={`custom-inline-${type}`} className=\"mb-3\">\r\n                    <Form.Check\r\n                      custom\r\n                      inline\r\n                      label=\"1\"\r\n                      type={type}\r\n                      id={`custom-inline-${type}-1`}\r\n                    />\r\n                    <Form.Check\r\n                      custom\r\n                      inline\r\n                      label=\"2\"\r\n                      type={type}\r\n                      id={`custom-inline-${type}-2`}\r\n                    />\r\n                    <Form.Check\r\n                      custom\r\n                      inline\r\n                      disabled\r\n                      label=\"3 (disabled)\"\r\n                      type={type}\r\n                      id={`custom-inline-${type}-3`}\r\n                    />\r\n                  </div>\r\n                ))}\r\n              </Form>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample\r\n              jsCode={jsCode15}\r\n              beforeCodeTitle=\"Checkboxes and radios\"\r\n            >\r\n              <span>\r\n                Custom checkbox and radio styles are achieved with a resourceful\r\n                use of the <code>:checked</code> selector and{\" \"}\r\n                <code>:after</code> psuedo elements, but are Structurally\r\n                similar to the default <code>FormCheck</code>.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <Form>\r\n                {[\"checkbox\", \"radio\"].map(type => (\r\n                  <div key={`custom-${type}`} className=\"mb-3\">\r\n                    <Form.Check\r\n                      custom\r\n                      type={type}\r\n                      id={`custom-${type}`}\r\n                      label={`Check this custom ${type}`}\r\n                    />\r\n\r\n                    <Form.Check\r\n                      custom\r\n                      disabled\r\n                      type={type}\r\n                      label={`disabled ${type}`}\r\n                      id={`disabled-custom-${type}`}\r\n                    />\r\n                  </div>\r\n                ))}\r\n              </Form>\r\n            </KTCodeExample>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst jsCode1 = `\r\n<Form>\r\n  <Form.Group controlId=\"formBasicEmail\">\r\n    <Form.Label>Email address</Form.Label>\r\n    <Form.Control type=\"email\" placeholder=\"Enter email\" />\r\n    <Form.Text className=\"text-muted\">\r\n      We'll never share your email with anyone else.\r\n    </Form.Text>\r\n  </Form.Group>\r\n\r\n  <Form.Group controlId=\"formBasicPassword\">\r\n    <Form.Label>Password</Form.Label>\r\n    <Form.Control type=\"password\" placeholder=\"Password\" />\r\n  </Form.Group>\r\n  <Form.Group controlId=\"formBasicChecbox\">\r\n    <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n  </Form.Group>\r\n  <Button variant=\"primary\" type=\"submit\">\r\n    Submit\r\n  </Button>\r\n</Form>\r\n`;\r\nconst jsCode2 = `\r\n<Form>\r\n  <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n    <Form.Label>Email address</Form.Label>\r\n    <Form.Control type=\"email\" placeholder=\"name@example.com\" />\r\n  </Form.Group>\r\n  <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n    <Form.Label>Example select</Form.Label>\r\n    <Form.Control as=\"select\">\r\n      <option>1</option>\r\n      <option>2</option>\r\n      <option>3</option>\r\n      <option>4</option>\r\n      <option>5</option>\r\n    </Form.Control>\r\n  </Form.Group>\r\n  <Form.Group controlId=\"exampleForm.ControlSelect2\">\r\n    <Form.Label>Example multiple select</Form.Label>\r\n    <Form.Control as=\"select\" multiple>\r\n      <option>1</option>\r\n      <option>2</option>\r\n      <option>3</option>\r\n      <option>4</option>\r\n      <option>5</option>\r\n    </Form.Control>\r\n  </Form.Group>\r\n  <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n    <Form.Label>Example textarea</Form.Label>\r\n    <Form.Control as=\"textarea\" rows=\"3\" />\r\n  </Form.Group>\r\n</Form>\r\n`;\r\nconst jsCode3 = `\r\n<>\r\n  <Form.Control size=\"lg\" type=\"text\" placeholder=\"Large text\" />\r\n  <br />\r\n  <Form.Control type=\"text\" placeholder=\"Normal text\" />\r\n  <br />\r\n  <Form.Control size=\"sm\" type=\"text\" placeholder=\"Small text\" />\r\n</>\r\n`;\r\nconst jsCode4 = `\r\n<Form>\r\n  <Form.Group as={Row} controlId=\"formPlaintextEmail\">\r\n    <Form.Label column sm=\"2\">\r\n      Email\r\n    </Form.Label>\r\n    <Col sm=\"10\">\r\n      <Form.Control plaintext readOnly defaultValue=\"email@example.com\" />\r\n    </Col>\r\n  </Form.Group>\r\n\r\n  <Form.Group as={Row} controlId=\"formPlaintextPassword\">\r\n    <Form.Label column sm=\"2\">\r\n      Password\r\n    </Form.Label>\r\n    <Col sm=\"10\">\r\n      <Form.Control type=\"password\" placeholder=\"Password\" />\r\n    </Col>\r\n  </Form.Group>\r\n</Form>\r\n`;\r\nconst jsCode5 = `\r\n<Form>\r\n  {['checkbox', 'radio'].map(type => (\r\n    <div key={\\`default-\\${type}\\`} className=\"mb-3\">\r\n      <Form.Check \r\n        type={type}\r\n        id={\\`default-\\${type}\\`}\r\n        label={\\`default \\${type}\\`}\r\n      />\r\n\r\n      <Form.Check\r\n        disabled\r\n        type={type}\r\n        label={\\`disabled \\${type}\\`}\r\n        id={\\`disabled-default-\\${type}\\`}\r\n      />\r\n    </div>\r\n  ))}\r\n</Form>\r\n`;\r\nconst jsCode6 = `\r\n<Form>\r\n  {['checkbox', 'radio'].map(type => (\r\n    <div key={\\`inline-\\${type}\\`} className=\"mb-3\">\r\n      <Form.Check inline label=\"1\" type={type} id={\\`inline-\\${type}-1\\`} />\r\n      <Form.Check inline label=\"2\" type={type} id={\\`inline-\\${type}-2\\`} />\r\n      <Form.Check\r\n        inline\r\n        disabled\r\n        label=\"3 (disabled)\"\r\n        type={type}\r\n        id={\\`inline-\\${type}-3\\`}\r\n      />\r\n    </div>\r\n  ))}\r\n</Form>\r\n`;\r\nconst jsCode7 = `\r\n<>\r\n  <Form.Check aria-label=\"option 1\" />\r\n  <Form.Check type=\"radio\" aria-label=\"radio 1\" />\r\n</>\r\n`;\r\nconst jsCode8 = `\r\n<Form>\r\n  {['checkbox', 'radio'].map(type => (\r\n    <div key={type} className=\"mb-3\">\r\n      <Form.Check type={type} id={\\`check-api-\\${type}\\`}>\r\n        <Form.Check.Input type={type} isValid />\r\n        <Form.Check.Label>{\\`Custom api \\${type}\\`}</Form.Check.Label>\r\n        <Form.Control.Feedback type=\"valid\">You did it!</Form.Control.Feedback>\r\n      </Form.Check>\r\n    </div>\r\n  ))}\r\n</Form>\r\n`;\r\nconst jsCode9 = `\r\n<Form>\r\n  <Form.Group controlId=\"formGroupEmail\">\r\n    <Form.Label>Email address</Form.Label>\r\n    <Form.Control type=\"email\" placeholder=\"Enter email\" />\r\n  </Form.Group>\r\n  <Form.Group controlId=\"formGroupPassword\">\r\n    <Form.Label>Password</Form.Label>\r\n    <Form.Control type=\"password\" placeholder=\"Password\" />\r\n  </Form.Group>\r\n</Form>\r\n`;\r\nconst jsCode10 = `\r\n<Form>\r\n  <Row>\r\n    <Col>\r\n      <Form.Control placeholder=\"First name\" />\r\n    </Col>\r\n    <Col>\r\n      <Form.Control placeholder=\"Last name\" />\r\n    </Col>\r\n  </Row>\r\n</Form>\r\n`;\r\nconst jsCode11 = `\r\n<Form>\r\n  <Form.Row>\r\n    <Form.Group as={Col} controlId=\"formGridEmail\">\r\n      <Form.Label>Email</Form.Label>\r\n      <Form.Control type=\"email\" placeholder=\"Enter email\" />\r\n    </Form.Group>\r\n\r\n    <Form.Group as={Col} controlId=\"formGridPassword\">\r\n      <Form.Label>Password</Form.Label>\r\n      <Form.Control type=\"password\" placeholder=\"Password\" />\r\n    </Form.Group>\r\n  </Form.Row>\r\n\r\n  <Form.Group controlId=\"formGridAddress1\">\r\n    <Form.Label>Address</Form.Label>\r\n    <Form.Control placeholder=\"1234 Main St\" />\r\n  </Form.Group>\r\n\r\n  <Form.Group controlId=\"formGridAddress2\">\r\n    <Form.Label>Address 2</Form.Label>\r\n    <Form.Control placeholder=\"Apartment, studio, or floor\" />\r\n  </Form.Group>\r\n\r\n  <Form.Row>\r\n    <Form.Group as={Col} controlId=\"formGridCity\">\r\n      <Form.Label>City</Form.Label>\r\n      <Form.Control />\r\n    </Form.Group>\r\n\r\n    <Form.Group as={Col} controlId=\"formGridState\">\r\n      <Form.Label>State</Form.Label>\r\n      <Form.Control as=\"select\">\r\n        <option>Choose...</option>\r\n        <option>...</option>\r\n      </Form.Control>\r\n    </Form.Group>\r\n\r\n    <Form.Group as={Col} controlId=\"formGridZip\">\r\n      <Form.Label>Zip</Form.Label>\r\n      <Form.Control />\r\n    </Form.Group>\r\n  </Form.Row>\r\n\r\n  <Form.Group id=\"formGridCheckbox\">\r\n    <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n  </Form.Group>\r\n\r\n  <Button variant=\"primary\" type=\"submit\">\r\n    Submit\r\n  </Button>\r\n</Form>\r\n`;\r\nconst jsCode12 = `\r\n<Form>\r\n  <Form.Group as={Row} controlId=\"formHorizontalEmail\">\r\n    <Form.Label column sm={2}>\r\n      Email\r\n    </Form.Label>\r\n    <Col sm={10}>\r\n      <Form.Control type=\"email\" placeholder=\"Email\" />\r\n    </Col>\r\n  </Form.Group>\r\n\r\n  <Form.Group as={Row} controlId=\"formHorizontalPassword\">\r\n    <Form.Label column sm={2}>\r\n      Password\r\n    </Form.Label>\r\n    <Col sm={10}>\r\n      <Form.Control type=\"password\" placeholder=\"Password\" />\r\n    </Col>\r\n  </Form.Group>\r\n  <fieldset>\r\n    <Form.Group as={Row}>\r\n      <Form.Label as=\"legend\" column sm={2}>\r\n        Radios\r\n      </Form.Label>\r\n      <Col sm={10}>\r\n        <Form.Check\r\n          type=\"radio\"\r\n          label=\"first radio\"\r\n          name=\"formHorizontalRadios\"\r\n          id=\"formHorizontalRadios1\"\r\n        />\r\n        <Form.Check\r\n          type=\"radio\"\r\n          label=\"second radio\"\r\n          name=\"formHorizontalRadios\"\r\n          id=\"formHorizontalRadios2\"\r\n        />\r\n        <Form.Check\r\n          type=\"radio\"\r\n          label=\"third radio\"\r\n          name=\"formHorizontalRadios\"\r\n          id=\"formHorizontalRadios3\"\r\n        />\r\n      </Col>\r\n    </Form.Group>\r\n  </fieldset>\r\n  <Form.Group as={Row} controlId=\"formHorizontalCheck\">\r\n    <Col sm={{ span: 10, offset: 2 }}>\r\n      <Form.Check label=\"Remember me\" />\r\n    </Col>\r\n  </Form.Group>\r\n\r\n  <Form.Group as={Row}>\r\n    <Col sm={{ span: 10, offset: 2 }}>\r\n      <Button type=\"submit\">Sign in</Button>\r\n    </Col>\r\n  </Form.Group>\r\n</Form>\r\n`;\r\nconst jsCode13 = `\r\nclass FormExample extends React.Component {\r\n  constructor(...args) {\r\n    super(...args);\r\n\r\n    this.state = { validated: false };\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n    this.setState({ validated: true });\r\n  }\r\n\r\n  render() {\r\n    const { validated } = this.state;\r\n    return (\r\n      <Form\r\n        noValidate\r\n        validated={validated}\r\n        onSubmit={e => this.handleSubmit(e)}\r\n      >\r\n        <Form.Row>\r\n          <Form.Group as={Col} md=\"4\" controlId=\"validationCustom01\">\r\n            <Form.Label>First name</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type=\"text\"\r\n              placeholder=\"First name\"\r\n              defaultValue=\"Mark\"\r\n            />\r\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Form.Group as={Col} md=\"4\" controlId=\"validationCustom02\">\r\n            <Form.Label>Last name</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type=\"text\"\r\n              placeholder=\"Last name\"\r\n              defaultValue=\"Otto\"\r\n            />\r\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Form.Group as={Col} md=\"4\" controlId=\"validationCustomUsername\">\r\n            <Form.Label>Username</Form.Label>\r\n            <InputGroup>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Username\"\r\n                aria-describedby=\"inputGroupPrepend\"\r\n                required\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                Please choose a username.\r\n              </Form.Control.Feedback>\r\n            </InputGroup>\r\n          </Form.Group>\r\n        </Form.Row>\r\n        <Form.Row>\r\n          <Form.Group as={Col} md=\"6\" controlId=\"validationCustom03\">\r\n            <Form.Label>City</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"City\" required />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please provide a valid city.\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Form.Group as={Col} md=\"3\" controlId=\"validationCustom04\">\r\n            <Form.Label>State</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"State\" required />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please provide a valid state.\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Form.Group as={Col} md=\"3\" controlId=\"validationCustom05\">\r\n            <Form.Label>Zip</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"Zip\" required />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please provide a valid zip.\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n        </Form.Row>\r\n        <Form.Group>\r\n          <Form.Check\r\n            required\r\n            label=\"Agree to terms and conditions\"\r\n            feedback=\"You must agree before submitting.\"\r\n          />\r\n        </Form.Group>\r\n        <Button type=\"submit\">Submit form</Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nrender(<FormExample />);\r\n`;\r\n\r\nconst jsCode15 = `\r\n<Form>\r\n  {['checkbox', 'radio'].map(type => (\r\n    <div key={\\`custom-\\${type}\\`} className=\"mb-3\">\r\n      <Form.Check \r\n        custom\r\n        type={type}\r\n        id={\\`custom-\\${type}\\`}\r\n        label={\\`Check this custom \\${type}\\`}\r\n      />\r\n\r\n      <Form.Check\r\n        custom\r\n        disabled\r\n        type={type}\r\n        label={\\`disabled \\${type}\\`}\r\n        id={\\`disabled-custom-\\${type}\\`}\r\n      />\r\n    </div>\r\n  ))}\r\n</Form>\r\n`;\r\nconst jsCode16 = `\r\n<Form>\r\n  {['checkbox', 'radio'].map(type => (\r\n    <div key={\\`custom-inline-\\${type}\\`} className=\"mb-3\">\r\n      <Form.Check\r\n        custom\r\n        inline\r\n        label=\"1\"\r\n        type={type}\r\n        id={\\`custom-inline-\\${type}-1\\`}\r\n      />\r\n      <Form.Check\r\n        custom\r\n        inline\r\n        label=\"2\"\r\n        type={type}\r\n        id={\\`custom-inline-\\${type}-2\\`}\r\n      />\r\n      <Form.Check\r\n        custom\r\n        inline\r\n        disabled\r\n        label=\"3 (disabled)\"\r\n        type={type}\r\n        id={\\`custom-inline-\\${type}-3\\`}\r\n      />\r\n    </div>\r\n  ))}\r\n</Form>\r\n`;\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  InputGroup,\r\n  FormControl,\r\n  DropdownButton,\r\n  Dropdown\r\n} from \"react-bootstrap\";\r\nimport {Notice, KTCodeExample} from \"../../../_metronic/_partials/controls\";\r\n\r\nexport default class InputGroupExamplesPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Notice icon=\"flaticon-warning font-primary\">\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"font-weight-bold\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://react-bootstrap.github.io/components/input-group/\"\r\n          >\r\n            demos & documentation.\r\n          </a>\r\n        </Notice>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <KTCodeExample\r\n              jsCode={jsCode1}\r\n              beforeCodeTitle=\"Basic Example\"\r\n              codeBlockHeight=\"400px\"\r\n            >\r\n              <span>\r\n                Place one add-on or button on either side of an input. You may\r\n                also place one on both sides of an input. Remember to place{\" \"}\r\n                <code>&lt;label&gt;</code>s outside the input group.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <div>\r\n                <InputGroup className=\"mb-3\">\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text id=\"basic-addon1\">@</InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <FormControl\r\n                    placeholder=\"Username\"\r\n                    aria-label=\"Username\"\r\n                    aria-describedby=\"basic-addon1\"\r\n                  />\r\n                </InputGroup>\r\n\r\n                <InputGroup className=\"mb-3\">\r\n                  <FormControl\r\n                    placeholder=\"Recipient's username\"\r\n                    aria-label=\"Recipient's username\"\r\n                    aria-describedby=\"basic-addon2\"\r\n                  />\r\n                  <InputGroup.Append>\r\n                    <InputGroup.Text id=\"basic-addon2\">\r\n                      @example.com\r\n                    </InputGroup.Text>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n\r\n                <label htmlFor=\"basic-url\">Your vanity URL</label>\r\n                <InputGroup className=\"mb-3\">\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text id=\"basic-addon3\">\r\n                      https://example.com/users/\r\n                    </InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <FormControl id=\"basic-url\" aria-describedby=\"basic-addon3\" />\r\n                </InputGroup>\r\n\r\n                <InputGroup className=\"mb-3\">\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text>$</InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <FormControl aria-label=\"Amount (to the nearest dollar)\" />\r\n                  <InputGroup.Append>\r\n                    <InputGroup.Text>.00</InputGroup.Text>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n\r\n                <InputGroup>\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text>With textarea</InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <FormControl as=\"textarea\" aria-label=\"With textarea\" />\r\n                </InputGroup>\r\n              </div>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample\r\n              jsCode={jsCode3}\r\n              beforeCodeTitle=\"Checkboxes and radios\"\r\n            >\r\n              <span>\r\n                Use the <code>InputGroup.Radio</code> or{\" \"}\r\n                <code>InputGroup.Checkbox</code> to add options to an input\r\n                group.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <div>\r\n                <InputGroup className=\"mb-3\">\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Checkbox aria-label=\"Checkbox for following text input\" />\r\n                  </InputGroup.Prepend>\r\n                  <FormControl aria-label=\"Text input with checkbox\" />\r\n                </InputGroup>\r\n                <InputGroup>\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Radio aria-label=\"Radio button for following text input\" />\r\n                  </InputGroup.Prepend>\r\n                  <FormControl aria-label=\"Text input with radio button\" />\r\n                </InputGroup>\r\n              </div>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode5} beforeCodeTitle=\"Multiple addons\">\r\n              <span>Multiple add-ons are supported and can be mixed</span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <div>\r\n                <InputGroup className=\"mb-3\">\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text>$</InputGroup.Text>\r\n                    <InputGroup.Text>0.00</InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <FormControl\r\n                    placeholder=\"Recipient's username\"\r\n                    aria-label=\"Amount (to the nearest dollar)\"\r\n                  />\r\n                </InputGroup>\r\n                <InputGroup className=\"mb-3\">\r\n                  <FormControl\r\n                    placeholder=\"Recipient's username\"\r\n                    aria-label=\"Amount (to the nearest dollar)\"\r\n                  />\r\n                  <InputGroup.Append>\r\n                    <InputGroup.Text>$</InputGroup.Text>\r\n                    <InputGroup.Text>0.00</InputGroup.Text>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n              </div>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample\r\n              jsCode={jsCode7}\r\n              beforeCodeTitle=\"Buttons with Dropdowns\"\r\n              codeBlockHeight=\"400px\"\r\n            >\r\n              <>\r\n                <InputGroup className=\"mb-3\">\r\n                  <DropdownButton\r\n                    as={InputGroup.Prepend}\r\n                    variant=\"outline-secondary\"\r\n                    title=\"Dropdown\"\r\n                    id=\"input-group-dropdown-1\"\r\n                  >\r\n                    <Dropdown.Item href=\"#\">Action</Dropdown.Item>\r\n                    <Dropdown.Item href=\"#\">Another action</Dropdown.Item>\r\n                    <Dropdown.Item href=\"#\">Something else here</Dropdown.Item>\r\n                    <Dropdown.Divider />\r\n                    <Dropdown.Item href=\"#\">Separated link</Dropdown.Item>\r\n                  </DropdownButton>\r\n                  <FormControl aria-describedby=\"basic-addon1\" />\r\n                </InputGroup>\r\n\r\n                <InputGroup>\r\n                  <FormControl\r\n                    placeholder=\"Recipient's username\"\r\n                    aria-label=\"Recipient's username\"\r\n                    aria-describedby=\"basic-addon2\"\r\n                  />\r\n\r\n                  <DropdownButton\r\n                    as={InputGroup.Append}\r\n                    variant=\"outline-secondary\"\r\n                    title=\"Dropdown\"\r\n                    id=\"input-group-dropdown-2\"\r\n                  >\r\n                    <Dropdown.Item href=\"#\">Action</Dropdown.Item>\r\n                    <Dropdown.Item href=\"#\">Another action</Dropdown.Item>\r\n                    <Dropdown.Item href=\"#\">Something else here</Dropdown.Item>\r\n                    <Dropdown.Divider />\r\n                    <Dropdown.Item href=\"#\">Separated link</Dropdown.Item>\r\n                  </DropdownButton>\r\n                </InputGroup>\r\n              </>\r\n            </KTCodeExample>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <KTCodeExample jsCode={jsCode2} beforeCodeTitle=\"Sizing\">\r\n              <span>\r\n                Add the relative form sizing classes to the{\" \"}\r\n                <code>InputGroup</code> and contents within will automatically\r\n                resize—no need for repeating the form control size classes on\r\n                each element.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <div>\r\n                <InputGroup size=\"sm\" className=\"mb-3\">\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text id=\"inputGroup-sizing-sm\">\r\n                      Small\r\n                    </InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <FormControl\r\n                    aria-label=\"Small\"\r\n                    aria-describedby=\"inputGroup-sizing-sm\"\r\n                  />\r\n                </InputGroup>\r\n                <br />\r\n                <InputGroup className=\"mb-3\">\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text id=\"inputGroup-sizing-default\">\r\n                      Default\r\n                    </InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <FormControl\r\n                    aria-label=\"Default\"\r\n                    aria-describedby=\"inputGroup-sizing-default\"\r\n                  />\r\n                </InputGroup>\r\n                <br />\r\n                <InputGroup size=\"lg\">\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text id=\"inputGroup-sizing-lg\">\r\n                      Large\r\n                    </InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <FormControl\r\n                    aria-label=\"Large\"\r\n                    aria-describedby=\"inputGroup-sizing-sm\"\r\n                  />\r\n                </InputGroup>\r\n              </div>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode4} beforeCodeTitle=\"Multiple inputs\">\r\n              <span>\r\n                While multiple inputss are supported visually, validation styles\r\n                are only available for input groups with a single input.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <InputGroup className=\"mb-3\">\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text>First and last name</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl />\r\n                <FormControl />\r\n              </InputGroup>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample\r\n              jsCode={jsCode6}\r\n              beforeCodeTitle=\"Button addons\"\r\n              codeBlockHeight=\"400px\"\r\n            >\r\n              <div>\r\n                <InputGroup className=\"mb-3\">\r\n                  <InputGroup.Prepend>\r\n                    <Button variant=\"outline-secondary\">Button</Button>\r\n                  </InputGroup.Prepend>\r\n                  <FormControl aria-describedby=\"basic-addon1\" />\r\n                </InputGroup>\r\n\r\n                <InputGroup className=\"mb-3\">\r\n                  <FormControl\r\n                    placeholder=\"Recipient's username\"\r\n                    aria-label=\"Recipient's username\"\r\n                    aria-describedby=\"basic-addon2\"\r\n                  />\r\n                  <InputGroup.Append>\r\n                    <Button variant=\"outline-secondary\">Button</Button>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n\r\n                <InputGroup className=\"mb-3\">\r\n                  <InputGroup.Prepend>\r\n                    <Button variant=\"outline-secondary\">Button</Button>\r\n                    <Button variant=\"outline-secondary\">Button</Button>\r\n                  </InputGroup.Prepend>\r\n                  <FormControl aria-describedby=\"basic-addon1\" />\r\n                </InputGroup>\r\n\r\n                <InputGroup>\r\n                  <FormControl\r\n                    placeholder=\"Recipient's username\"\r\n                    aria-label=\"Recipient's username\"\r\n                    aria-describedby=\"basic-addon2\"\r\n                  />\r\n                  <InputGroup.Append>\r\n                    <Button variant=\"outline-secondary\">Button</Button>\r\n                    <Button variant=\"outline-secondary\">Button</Button>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n              </div>\r\n            </KTCodeExample>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst jsCode1 = `\r\n<div>\r\n  <InputGroup className=\"mb-3\">\r\n    <InputGroup.Prepend>\r\n      <InputGroup.Text id=\"basic-addon1\">@</InputGroup.Text>\r\n    </InputGroup.Prepend>\r\n    <FormControl\r\n      placeholder=\"Username\"\r\n      aria-label=\"Username\"\r\n      aria-describedby=\"basic-addon1\"\r\n    />\r\n  </InputGroup>\r\n\r\n  <InputGroup className=\"mb-3\">\r\n    <FormControl\r\n      placeholder=\"Recipient's username\"\r\n      aria-label=\"Recipient's username\"\r\n      aria-describedby=\"basic-addon2\"\r\n    />\r\n    <InputGroup.Append>\r\n      <InputGroup.Text id=\"basic-addon2\">@example.com</InputGroup.Text>\r\n    </InputGroup.Append>\r\n  </InputGroup>\r\n\r\n  <label htmlFor=\"basic-url\">Your vanity URL</label>\r\n  <InputGroup className=\"mb-3\">\r\n    <InputGroup.Prepend>\r\n      <InputGroup.Text id=\"basic-addon3\">\r\n        https://example.com/users/\r\n      </InputGroup.Text>\r\n    </InputGroup.Prepend>\r\n    <FormControl id=\"basic-url\" aria-describedby=\"basic-addon3\" />\r\n  </InputGroup>\r\n\r\n  <InputGroup className=\"mb-3\">\r\n    <InputGroup.Prepend>\r\n      <InputGroup.Text>$</InputGroup.Text>\r\n    </InputGroup.Prepend>\r\n    <FormControl aria-label=\"Amount (to the nearest dollar)\" />\r\n    <InputGroup.Append>\r\n      <InputGroup.Text>.00</InputGroup.Text>\r\n    </InputGroup.Append>\r\n  </InputGroup>\r\n\r\n  <InputGroup>\r\n    <InputGroup.Prepend>\r\n      <InputGroup.Text>With textarea</InputGroup.Text>\r\n    </InputGroup.Prepend>\r\n    <FormControl as=\"textarea\" aria-label=\"With textarea\" />\r\n  </InputGroup>\r\n</div>\r\n`;\r\nconst jsCode2 = `\r\n<div>\r\n  <InputGroup size=\"sm\" className=\"mb-3\">\r\n    <InputGroup.Prepend>\r\n      <InputGroup.Text id=\"inputGroup-sizing-sm\">Small</InputGroup.Text>\r\n    </InputGroup.Prepend>\r\n    <FormControl aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" />\r\n  </InputGroup>\r\n  <br />\r\n  <InputGroup className=\"mb-3\">\r\n    <InputGroup.Prepend>\r\n      <InputGroup.Text id=\"inputGroup-sizing-default\">Default</InputGroup.Text>\r\n    </InputGroup.Prepend>\r\n    <FormControl\r\n      aria-label=\"Default\"\r\n      aria-describedby=\"inputGroup-sizing-default\"\r\n    />\r\n  </InputGroup>\r\n  <br />\r\n  <InputGroup size=\"lg\">\r\n    <InputGroup.Prepend>\r\n      <InputGroup.Text id=\"inputGroup-sizing-lg\">Large</InputGroup.Text>\r\n    </InputGroup.Prepend>\r\n    <FormControl aria-label=\"Large\" aria-describedby=\"inputGroup-sizing-sm\" />\r\n  </InputGroup>\r\n</div>\r\n`;\r\nconst jsCode3 = `\r\n<div>\r\n  <InputGroup className=\"mb-3\">\r\n    <InputGroup.Prepend>\r\n      <InputGroup.Checkbox aria-label=\"Checkbox for following text input\" />\r\n    </InputGroup.Prepend>\r\n    <FormControl aria-label=\"Text input with checkbox\" />\r\n  </InputGroup>\r\n  <InputGroup>\r\n    <InputGroup.Prepend>\r\n      <InputGroup.Radio aria-label=\"Radio button for following text input\" />\r\n    </InputGroup.Prepend>\r\n    <FormControl aria-label=\"Text input with radio button\" />\r\n  </InputGroup>\r\n</div>\r\n`;\r\nconst jsCode4 = `\r\n<InputGroup className=\"mb-3\">\r\n  <InputGroup.Prepend>\r\n    <InputGroup.Text>First and last name</InputGroup.Text>\r\n  </InputGroup.Prepend>\r\n  <FormControl />\r\n  <FormControl />\r\n</InputGroup>\r\n`;\r\nconst jsCode5 = `\r\n<div>\r\n  <InputGroup className=\"mb-3\">\r\n    <InputGroup.Prepend>\r\n      <InputGroup.Text>$</InputGroup.Text>\r\n      <InputGroup.Text>0.00</InputGroup.Text>\r\n    </InputGroup.Prepend>\r\n    <FormControl\r\n      placeholder=\"Recipient's username\"\r\n      aria-label=\"Amount (to the nearest dollar)\"\r\n    />\r\n  </InputGroup>\r\n  <InputGroup className=\"mb-3\">\r\n    <FormControl\r\n      placeholder=\"Recipient's username\"\r\n      aria-label=\"Amount (to the nearest dollar)\"\r\n    />\r\n    <InputGroup.Append>\r\n      <InputGroup.Text>$</InputGroup.Text>\r\n      <InputGroup.Text>0.00</InputGroup.Text>\r\n    </InputGroup.Append>\r\n  </InputGroup>\r\n</div>\r\n`;\r\nconst jsCode6 = `\r\n<div>\r\n  <InputGroup className=\"mb-3\">\r\n    <InputGroup.Prepend>\r\n      <Button variant=\"outline-secondary\">Button</Button>\r\n    </InputGroup.Prepend>\r\n    <FormControl aria-describedby=\"basic-addon1\" />\r\n  </InputGroup>\r\n\r\n  <InputGroup className=\"mb-3\">\r\n    <FormControl\r\n      placeholder=\"Recipient's username\"\r\n      aria-label=\"Recipient's username\"\r\n      aria-describedby=\"basic-addon2\"\r\n    />\r\n    <InputGroup.Append>\r\n      <Button variant=\"outline-secondary\">Button</Button>\r\n    </InputGroup.Append>\r\n  </InputGroup>\r\n\r\n  <InputGroup className=\"mb-3\">\r\n    <InputGroup.Prepend>\r\n      <Button variant=\"outline-secondary\">Button</Button>\r\n      <Button variant=\"outline-secondary\">Button</Button>\r\n    </InputGroup.Prepend>\r\n    <FormControl aria-describedby=\"basic-addon1\" />\r\n  </InputGroup>\r\n\r\n  <InputGroup>\r\n    <FormControl\r\n      placeholder=\"Recipient's username\"\r\n      aria-label=\"Recipient's username\"\r\n      aria-describedby=\"basic-addon2\"\r\n    />\r\n    <InputGroup.Append>\r\n      <Button variant=\"outline-secondary\">Button</Button>\r\n      <Button variant=\"outline-secondary\">Button</Button>\r\n    </InputGroup.Append>\r\n  </InputGroup>\r\n</div>\r\n`;\r\nconst jsCode7 = `\r\n<>\r\n  <InputGroup className=\"mb-3\">\r\n    <DropdownButton\r\n      as={InputGroup.Prepend}\r\n      variant=\"outline-secondary\"\r\n      title=\"Dropdown\"\r\n      id=\"input-group-dropdown-1\"\r\n    >\r\n      <Dropdown.Item href=\"#\">Action</Dropdown.Item>\r\n      <Dropdown.Item href=\"#\">Another action</Dropdown.Item>\r\n      <Dropdown.Item href=\"#\">Something else here</Dropdown.Item>\r\n      <Dropdown.Divider />\r\n      <Dropdown.Item href=\"#\">Separated link</Dropdown.Item>\r\n    </DropdownButton>\r\n    <FormControl aria-describedby=\"basic-addon1\" />\r\n  </InputGroup>\r\n\r\n  <InputGroup>\r\n    <FormControl\r\n      placeholder=\"Recipient's username\"\r\n      aria-label=\"Recipient's username\"\r\n      aria-describedby=\"basic-addon2\"\r\n    />\r\n\r\n    <DropdownButton\r\n      as={InputGroup.Append}\r\n      variant=\"outline-secondary\"\r\n      title=\"Dropdown\"\r\n      id=\"input-group-dropdown-2\"\r\n    >\r\n      <Dropdown.Item href=\"#\">Action</Dropdown.Item>\r\n      <Dropdown.Item href=\"#\">Another action</Dropdown.Item>\r\n      <Dropdown.Item href=\"#\">Something else here</Dropdown.Item>\r\n      <Dropdown.Divider />\r\n      <Dropdown.Item href=\"#\">Separated link</Dropdown.Item>\r\n    </DropdownButton>\r\n  </InputGroup>\r\n</>\r\n`;\r\n","import React from \"react\";\r\nimport {Image, Container, Row, Col} from \"react-bootstrap\";\r\nimport {Notice, KTCodeExample} from \"../../../_metronic/_partials/controls\";\r\n\r\nexport default class ImagesExamplesPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Notice icon=\"flaticon-warning font-primary\">\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"font-weight-bold\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://react-bootstrap.github.io/components/images/\"\r\n          >\r\n            demos & documentation.\r\n          </a>\r\n        </Notice>\r\n\r\n        <KTCodeExample jsCode={jsCode1} beforeCodeTitle=\"Shape\">\r\n          <span>\r\n            Use the <code>rounded</code>, <code>roundedCircle</code> and{\" \"}\r\n            <code>thumbnail</code> props to customise the image.\r\n          </span>\r\n          <div className=\"separator separator-dashed my-7\"></div>\r\n          <Container>\r\n            <Row>\r\n              <Col xs={6} md={4}>\r\n                <Image\r\n                  src=\"data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22171%22%20height%3D%22180%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20171%20180%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_16bc0bfc086%20text%20%7B%20fill%3A%23999%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A10pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_16bc0bfc086%22%3E%3Crect%20width%3D%22171%22%20height%3D%22180%22%20fill%3D%22%23373940%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%2259.9296875%22%20y%3D%2294.5609375%22%3E171x180%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\"\r\n                  rounded\r\n                />\r\n              </Col>\r\n              <Col xs={6} md={4}>\r\n                <Image\r\n                  src=\"data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22171%22%20height%3D%22180%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20171%20180%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_16bc0bfc088%20text%20%7B%20fill%3A%23999%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A10pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_16bc0bfc088%22%3E%3Crect%20width%3D%22171%22%20height%3D%22180%22%20fill%3D%22%23373940%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%2259.9296875%22%20y%3D%2294.5609375%22%3E171x180%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\"\r\n                  roundedCircle\r\n                />\r\n              </Col>\r\n              <Col xs={6} md={4}>\r\n                <Image\r\n                  src=\"data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22171%22%20height%3D%22180%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20171%20180%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_16bc0bfc088%20text%20%7B%20fill%3A%23999%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A10pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_16bc0bfc088%22%3E%3Crect%20width%3D%22171%22%20height%3D%22180%22%20fill%3D%22%23373940%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%2259.9296875%22%20y%3D%2294.5609375%22%3E171x180%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\"\r\n                  thumbnail\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </KTCodeExample>\r\n\r\n        <KTCodeExample jsCode={jsCode2} beforeCodeTitle=\"Fluid\">\r\n          <span>\r\n            Use the <code>fluid</code> to scale image nicely to the parent\r\n            element.\r\n          </span>\r\n          <div className=\"separator separator-dashed my-7\"></div>\r\n          <Image\r\n            src=\"data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22846%22%20height%3D%22250%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20846%20250%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_16bc0c12be0%20text%20%7B%20fill%3A%23999%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A42pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_16bc0c12be0%22%3E%3Crect%20width%3D%22846%22%20height%3D%22250%22%20fill%3D%22%23373940%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%22315.5625%22%20y%3D%22143.721875%22%3E846x250%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\"\r\n            fluid\r\n          />\r\n        </KTCodeExample>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst jsCode1 = `\r\n<Container>\r\n  <Row>\r\n    <Col xs={6} md={4}>\r\n      <Image src=\"holder.js/171x180\" rounded />\r\n    </Col>\r\n    <Col xs={6} md={4}>\r\n      <Image src=\"holder.js/171x180\" roundedCircle />\r\n    </Col>\r\n    <Col xs={6} md={4}>\r\n      <Image src=\"holder.js/171x180\" thumbnail />\r\n    </Col>\r\n  </Row>\r\n</Container>\r\n`;\r\nconst jsCode2 = `\r\n<Image src=\"holder.js/100px250\" fluid />\r\n`;\r\n","import React from \"react\";\r\nimport {Figure} from \"react-bootstrap\";\r\nimport {Notice, KTCodeExample} from \"../../../_metronic/_partials/controls\";\r\n\r\nexport default class FiguresExamplesPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Notice icon=\"flaticon-warning font-primary\">\r\n          <span>\r\n            Anytime you need to display a piece of content, like an image with\r\n            an optional caption, consider using a <code>Figure</code>.\r\n          </span>{\" \"}\r\n          <span>\r\n            For more info please check the components's official{\" \"}\r\n            <a\r\n              target=\"_blank\"\r\n              className=\"font-weight-bold\"\r\n              rel=\"noopener noreferrer\"\r\n              href=\"https://react-bootstrap.github.io/components/figures/\"\r\n            >\r\n              demos & documentation\r\n            </a>\r\n          </span>\r\n        </Notice>\r\n\r\n        <KTCodeExample jsCode={jsCode1} beforeCodeTitle=\"Figure\">\r\n          <span>\r\n            Displaying related images and text with the Figure component.\r\n          </span>\r\n          <div className=\"separator separator-dashed my-7\"></div>\r\n          <Figure>\r\n            <Figure.Image\r\n              width={171}\r\n              height={180}\r\n              alt=\"171x180\"\r\n              src=\"data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22171%22%20height%3D%22180%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20171%20180%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_16bc0e8c8ae%20text%20%7B%20fill%3A%23999%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A10pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_16bc0e8c8ae%22%3E%3Crect%20width%3D%22171%22%20height%3D%22180%22%20fill%3D%22%23373940%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%2259.9296875%22%20y%3D%2294.5609375%22%3E171x180%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\"\r\n            />\r\n            <Figure.Caption>\r\n              Nulla vitae elit libero, a pharetra augue mollis interdum.\r\n            </Figure.Caption>\r\n          </Figure>\r\n        </KTCodeExample>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst jsCode1 = `\r\n<Figure>\r\n  <Figure.Image\r\n    width={171}\r\n    height={180}\r\n    alt=\"171x180\"\r\n    src=\"holder.js/171x180\"\r\n  />\r\n  <Figure.Caption>\r\n    Nulla vitae elit libero, a pharetra augue mollis interdum.\r\n  </Figure.Caption>\r\n</Figure>\r\n`;\r\n","import React from \"react\";\r\nimport {Jumbotron, Container, Button} from \"react-bootstrap\";\r\nimport {Notice, KTCodeExample} from \"../../../_metronic/_partials/controls\";\r\n\r\nexport default class JumbotronExamplesPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Notice icon=\"flaticon-warning font-primary\">\r\n          <span>\r\n            A lightweight, flexible component that can optionally extend the\r\n            entire viewport to showcase key content on your site.\r\n          </span>{\" \"}\r\n          <span>\r\n            For more info please check the components's official{\" \"}\r\n            <a\r\n              target=\"_blank\"\r\n              className=\"font-weight-bold\"\r\n              rel=\"noopener noreferrer\"\r\n              href=\"https://react-bootstrap.github.io/components/jumbotron/\"\r\n            >\r\n              demos & documentation\r\n            </a>\r\n          </span>\r\n        </Notice>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <KTCodeExample jsCode={jsCode1} beforeCodeTitle=\"Basic Example\">\r\n              <Jumbotron>\r\n                <h1>Hello, world!</h1>\r\n                <p>\r\n                  This is a simple hero unit, a simple jumbotron-style component\r\n                  for calling extra attention to featured content or\r\n                  information.\r\n                </p>\r\n                <p>\r\n                  <Button variant=\"primary\">Learn more</Button>\r\n                </p>\r\n              </Jumbotron>\r\n            </KTCodeExample>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <KTCodeExample jsCode={jsCode2} beforeCodeTitle=\"Fluid\">\r\n              <Jumbotron fluid>\r\n                <Container>\r\n                  <h1>Fluid jumbotron</h1>\r\n                  <p>\r\n                    This is a modified jumbotron that occupies the entire\r\n                    horizontal space of its parent.\r\n                  </p>\r\n                </Container>\r\n              </Jumbotron>\r\n            </KTCodeExample>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst jsCode1 = `\r\n<Jumbotron>\r\n  <h1>Hello, world!</h1>\r\n  <p>\r\n    This is a simple hero unit, a simple jumbotron-style component for calling\r\n    extra attention to featured content or information.\r\n  </p>\r\n  <p>\r\n    <Button variant=\"primary\">Learn more</Button>\r\n  </p>\r\n</Jumbotron>\r\n`;\r\nconst jsCode2 = `\r\n<Jumbotron fluid>\r\n  <Container>\r\n    <h1>Fluid jumbotron</h1>\r\n    <p>\r\n      This is a modified jumbotron that occupies the entire horizontal space of\r\n      its parent.\r\n    </p>\r\n  </Container>\r\n</Jumbotron>\r\n`;\r\n","import React from \"react\";\r\nimport {ListGroup, Row, Col, Tab} from \"react-bootstrap\";\r\nimport {Notice, KTCodeExample} from \"../../../_metronic/_partials/controls\";\r\n\r\nfunction alertClicked() {\r\n  alert(\"You clicked the third ListGroupItem\");\r\n}\r\n\r\nexport default class ListGroupExamplesPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Notice icon=\"flaticon-warning font-primary\">\r\n          <span>\r\n            List groups are a flexible and powerful component for displaying a\r\n            series of content. Modify and extend them to support just about any\r\n            content within.\r\n          </span>{\" \"}\r\n          <span>\r\n            For more info please check the components's official{\" \"}\r\n            <a\r\n              target=\"_blank\"\r\n              className=\"font-weight-bold\"\r\n              rel=\"noopener noreferrer\"\r\n              href=\"https://react-bootstrap.github.io/components/list-group/\"\r\n            >\r\n              demos & documentation\r\n            </a>\r\n          </span>\r\n        </Notice>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <KTCodeExample jsCode={jsCode1} beforeCodeTitle=\"Basic Example\">\r\n              <ListGroup>\r\n                <ListGroup.Item>Cras justo odio</ListGroup.Item>\r\n                <ListGroup.Item>Dapibus ac facilisis in</ListGroup.Item>\r\n                <ListGroup.Item>Morbi leo risus</ListGroup.Item>\r\n                <ListGroup.Item>Porta ac consectetur ac</ListGroup.Item>\r\n                <ListGroup.Item>Vestibulum at eros</ListGroup.Item>\r\n              </ListGroup>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode3} beforeCodeTitle=\"Disabled items\">\r\n              <span>\r\n                Set the <code>disabled</code> prop to prevent actions on a{\" \"}\r\n                <code>&lt;List.Item&gt;</code>. For elements that aren't\r\n                naturally disable-able (like anchors) <code>onClick</code>{\" \"}\r\n                handlers are added that call <code>preventDefault</code> to\r\n                mimick disabled behavior.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <ListGroup>\r\n                <ListGroup.Item disabled>Cras justo odio</ListGroup.Item>\r\n                <ListGroup.Item>Dapibus ac facilisis in</ListGroup.Item>\r\n                <ListGroup.Item>Morbi leo risus</ListGroup.Item>\r\n                <ListGroup.Item>Porta ac consectetur ac</ListGroup.Item>\r\n              </ListGroup>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode5} beforeCodeTitle=\"Flush\">\r\n              <span>\r\n                Add the <code>flush</code> variant to remove outer borders and\r\n                rounded corners to render list group items edge-to-edge in a\r\n                parent container such as a Card.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>Cras justo odio</ListGroup.Item>\r\n                <ListGroup.Item>Dapibus ac facilisis in</ListGroup.Item>\r\n                <ListGroup.Item>Morbi leo risus</ListGroup.Item>\r\n                <ListGroup.Item>Porta ac consectetur ac</ListGroup.Item>\r\n              </ListGroup>\r\n            </KTCodeExample>\r\n            <KTCodeExample jsCode={jsCode7} beforeCodeTitle=\"Tabbed Interfaces\">\r\n              <span>\r\n                You can also use the Tab components to create ARIA compliant\r\n                tabbable interfaces with the <code>&lt;ListGroup&gt;</code>{\" \"}\r\n                component. Swap out the <code>&lt;Nav&gt;</code> component for\r\n                the list group and you are good to go.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <Tab.Container\r\n                id=\"list-group-tabs-example\"\r\n                defaultActiveKey=\"#link1\"\r\n              >\r\n                <Row>\r\n                  <Col sm={4}>\r\n                    <ListGroup>\r\n                      <ListGroup.Item action href=\"#link1\">\r\n                        Link 1\r\n                      </ListGroup.Item>\r\n                      <ListGroup.Item action href=\"#link2\">\r\n                        Link 2\r\n                      </ListGroup.Item>\r\n                    </ListGroup>\r\n                  </Col>\r\n                  <Col sm={8}>\r\n                    <Tab.Content>\r\n                      <Tab.Pane eventKey=\"#link1\"></Tab.Pane>\r\n                      <Tab.Pane eventKey=\"#link2\"></Tab.Pane>\r\n                    </Tab.Content>\r\n                  </Col>\r\n                </Row>\r\n              </Tab.Container>\r\n            </KTCodeExample>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <KTCodeExample jsCode={jsCode2} beforeCodeTitle=\"Active items\">\r\n              <span>\r\n                Set the <code>active</code> prop to indicate the list groups\r\n                current active selection.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <ListGroup as=\"ul\">\r\n                <ListGroup.Item as=\"li\" active>\r\n                  Cras justo odio\r\n                </ListGroup.Item>\r\n                <ListGroup.Item as=\"li\">Dapibus ac facilisis in</ListGroup.Item>\r\n                <ListGroup.Item as=\"li\" disabled>\r\n                  Morbi leo risus\r\n                </ListGroup.Item>\r\n                <ListGroup.Item as=\"li\">Porta ac consectetur ac</ListGroup.Item>\r\n              </ListGroup>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode4} beforeCodeTitle=\"Actionable items\">\r\n              <span>\r\n                Toggle the <code>action</code> prop to create actionable list\r\n                group items, with disabled, hover and active styles. List item\r\n                actions will render a <code>&lt;button&gt;</code> or{\" \"}\r\n                <code>&lt;a&gt;</code> (depending on the presence of an{\" \"}\r\n                <code>href</code>) by default but can be overriden by setting\r\n                the <code>as</code> prop as usual.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <ListGroup defaultActiveKey=\"#link1\">\r\n                <ListGroup.Item action href=\"#link1\">\r\n                  Link 1\r\n                </ListGroup.Item>\r\n                <ListGroup.Item action href=\"#link2\" disabled>\r\n                  Link 2\r\n                </ListGroup.Item>\r\n                <ListGroup.Item action onClick={alertClicked}>\r\n                  This one is a button\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample\r\n              jsCode={jsCode6}\r\n              beforeCodeTitle=\"Contextual classes\"\r\n            >\r\n              <span>\r\n                Use contextual variants on <code>&lt;List.Item&gt;</code>s to\r\n                style them with a stateful background and color.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <ListGroup>\r\n                <ListGroup.Item>No style</ListGroup.Item>\r\n                <ListGroup.Item variant=\"primary\">Primary</ListGroup.Item>\r\n                <ListGroup.Item action variant=\"secondary\">\r\n                  Secondary\r\n                </ListGroup.Item>\r\n                <ListGroup.Item action variant=\"success\">\r\n                  Success\r\n                </ListGroup.Item>\r\n                <ListGroup.Item action variant=\"danger\">\r\n                  Danger\r\n                </ListGroup.Item>\r\n                <ListGroup.Item action variant=\"warning\">\r\n                  Warning\r\n                </ListGroup.Item>\r\n                <ListGroup.Item action variant=\"info\">\r\n                  Info\r\n                </ListGroup.Item>\r\n                <ListGroup.Item action variant=\"light\">\r\n                  Light\r\n                </ListGroup.Item>\r\n                <ListGroup.Item action variant=\"dark\">\r\n                  Dark\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </KTCodeExample>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst jsCode1 = `\r\n<ListGroup>\r\n  <ListGroup.Item>Cras justo odio</ListGroup.Item>\r\n  <ListGroup.Item>Dapibus ac facilisis in</ListGroup.Item>\r\n  <ListGroup.Item>Morbi leo risus</ListGroup.Item>\r\n  <ListGroup.Item>Porta ac consectetur ac</ListGroup.Item>\r\n  <ListGroup.Item>Vestibulum at eros</ListGroup.Item>\r\n</ListGroup>\r\n`;\r\nconst jsCode2 = `\r\n<ListGroup as=\"ul\">\r\n  <ListGroup.Item as=\"li\" active>\r\n    Cras justo odio\r\n  </ListGroup.Item>\r\n  <ListGroup.Item as=\"li\">Dapibus ac facilisis in</ListGroup.Item>\r\n  <ListGroup.Item as=\"li\" disabled>\r\n    Morbi leo risus\r\n  </ListGroup.Item>\r\n  <ListGroup.Item as=\"li\">Porta ac consectetur ac</ListGroup.Item>\r\n</ListGroup>\r\n`;\r\n\r\nconst jsCode3 = `\r\n<ListGroup>\r\n  <ListGroup.Item disabled>Cras justo odio</ListGroup.Item>\r\n  <ListGroup.Item>Dapibus ac facilisis in</ListGroup.Item>\r\n  <ListGroup.Item>Morbi leo risus</ListGroup.Item>\r\n  <ListGroup.Item>Porta ac consectetur ac</ListGroup.Item>\r\n</ListGroup>\r\n`;\r\nconst jsCode4 = `\r\nfunction alertClicked() {\r\n  alert('You clicked the third ListGroupItem');\r\n}\r\n\r\nrender(\r\n  <ListGroup defaultActiveKey=\"#link1\">\r\n    <ListGroup.Item action href=\"#link1\">\r\n      Link 1\r\n    </ListGroup.Item>\r\n    <ListGroup.Item action href=\"#link2\" disabled>\r\n      Link 2\r\n    </ListGroup.Item>\r\n    <ListGroup.Item action onClick={alertClicked}>\r\n      This one is a button\r\n    </ListGroup.Item>\r\n  </ListGroup>,\r\n);\r\n`;\r\nconst jsCode5 = `\r\n<ListGroup variant=\"flush\">\r\n  <ListGroup.Item>Cras justo odio</ListGroup.Item>\r\n  <ListGroup.Item>Dapibus ac facilisis in</ListGroup.Item>\r\n  <ListGroup.Item>Morbi leo risus</ListGroup.Item>\r\n  <ListGroup.Item>Porta ac consectetur ac</ListGroup.Item>\r\n</ListGroup>\r\n`;\r\nconst jsCode6 = `\r\n<ListGroup>\r\n  <ListGroup.Item>No style</ListGroup.Item>\r\n  <ListGroup.Item variant=\"primary\">Primary</ListGroup.Item>\r\n  <ListGroup.Item action variant=\"secondary\">\r\n    Secondary\r\n  </ListGroup.Item>\r\n  <ListGroup.Item action variant=\"success\">\r\n    Success\r\n  </ListGroup.Item>\r\n  <ListGroup.Item action variant=\"danger\">\r\n    Danger\r\n  </ListGroup.Item>\r\n  <ListGroup.Item action variant=\"warning\">\r\n    Warning\r\n  </ListGroup.Item>\r\n  <ListGroup.Item action variant=\"info\">\r\n    Info\r\n  </ListGroup.Item>\r\n  <ListGroup.Item action variant=\"light\">\r\n    Light\r\n  </ListGroup.Item>\r\n  <ListGroup.Item action variant=\"dark\">\r\n    Dark\r\n  </ListGroup.Item>\r\n</ListGroup>\r\n`;\r\nconst jsCode7 = `\r\n<Tab.Container id=\"list-group-tabs-example\" defaultActiveKey=\"#link1\">\r\n  <Row>\r\n    <Col sm={4}>\r\n      <ListGroup>\r\n        <ListGroup.Item action href=\"#link1\">\r\n          Link 1\r\n        </ListGroup.Item>\r\n        <ListGroup.Item action href=\"#link2\">\r\n          Link 2\r\n        </ListGroup.Item>\r\n      </ListGroup>\r\n    </Col>\r\n    <Col sm={8}>\r\n      <Tab.Content>\r\n        <Tab.Pane eventKey=\"#link1\">\r\n          <Sonnet />\r\n        </Tab.Pane>\r\n        <Tab.Pane eventKey=\"#link2\">\r\n          <Sonnet />\r\n        </Tab.Pane>\r\n      </Tab.Content>\r\n    </Col>\r\n  </Row>\r\n</Tab.Container>\r\n`;\r\n","import React from \"react\";\r\nimport {Pagination} from \"react-bootstrap\";\r\nimport {Notice, KTCodeExample} from \"../../../_metronic/_partials/controls\";\r\n\r\nlet active = 2;\r\nlet items = [];\r\nfor (let number = 1; number <= 5; number++) {\r\n  items.push(\r\n    <Pagination.Item key={number} active={number === active}>\r\n      {number}\r\n    </Pagination.Item>\r\n  );\r\n}\r\n\r\nconst paginationBasic = (\r\n  <div>\r\n    <Pagination>{items}</Pagination>\r\n    <br />\r\n\r\n    <Pagination size=\"lg\">{items}</Pagination>\r\n    <br />\r\n\r\n    <Pagination size=\"sm\">{items}</Pagination>\r\n  </div>\r\n);\r\n\r\nexport default class PaginationExamplesPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Notice icon=\"flaticon-warning font-primary\">\r\n          <span>\r\n            A set of presentational components for building pagination UI.\r\n          </span>{\" \"}\r\n          <span>\r\n            For more info please check the components's official{\" \"}\r\n            <a\r\n              target=\"_blank\"\r\n              className=\"font-weight-bold\"\r\n              rel=\"noopener noreferrer\"\r\n              href=\"https://react-bootstrap.github.io/components/pagination/\"\r\n            >\r\n              demos & documentation\r\n            </a>\r\n          </span>\r\n        </Notice>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <KTCodeExample jsCode={jsCode1} beforeCodeTitle=\"Basic Example\">\r\n              {paginationBasic}\r\n            </KTCodeExample>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <KTCodeExample jsCode={jsCode2} beforeCodeTitle=\"More options\">\r\n              <span>\r\n                For building more complex pagination UI, there are few\r\n                convenient sub-components for adding \"First\", \"Previous\",\r\n                \"Next\", and \"Last\" buttons, as well as an <code>Ellipsis</code>{\" \"}\r\n                item for indicating previous or continuing results.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <Pagination>\r\n                <Pagination.First />\r\n                <Pagination.Prev />\r\n                <Pagination.Item>{1}</Pagination.Item>\r\n                <Pagination.Ellipsis />\r\n\r\n                <Pagination.Item>{10}</Pagination.Item>\r\n                <Pagination.Item>{11}</Pagination.Item>\r\n                <Pagination.Item active>{12}</Pagination.Item>\r\n                <Pagination.Item>{13}</Pagination.Item>\r\n                <Pagination.Item disabled>{14}</Pagination.Item>\r\n\r\n                <Pagination.Ellipsis />\r\n                <Pagination.Item>{20}</Pagination.Item>\r\n                <Pagination.Next />\r\n                <Pagination.Last />\r\n              </Pagination>\r\n            </KTCodeExample>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst jsCode1 = `\r\nlet active = 2;\r\nlet items = [];\r\nfor (let number = 1; number <= 5; number++) {\r\n  items.push(\r\n    <Pagination.Item key={number} active={number === active}>\r\n      {number}\r\n    </Pagination.Item>,\r\n  );\r\n}\r\n\r\nconst paginationBasic = (\r\n  <div>\r\n    <Pagination>{items}</Pagination>\r\n    <br />\r\n\r\n    <Pagination size=\"lg\">{items}</Pagination>\r\n    <br />\r\n\r\n    <Pagination size=\"sm\">{items}</Pagination>\r\n  </div>\r\n);\r\n\r\nrender(paginationBasic);\r\n`;\r\nconst jsCode2 = `\r\n<Pagination>\r\n  <Pagination.First />\r\n  <Pagination.Prev />\r\n  <Pagination.Item>{1}</Pagination.Item>\r\n  <Pagination.Ellipsis />\r\n\r\n  <Pagination.Item>{10}</Pagination.Item>\r\n  <Pagination.Item>{11}</Pagination.Item>\r\n  <Pagination.Item active>{12}</Pagination.Item>\r\n  <Pagination.Item>{13}</Pagination.Item>\r\n  <Pagination.Item disabled>{14}</Pagination.Item>\r\n\r\n  <Pagination.Ellipsis />\r\n  <Pagination.Item>{20}</Pagination.Item>\r\n  <Pagination.Next />\r\n  <Pagination.Last />\r\n</Pagination>\r\n`;\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ButtonToolbar,\r\n  Col,\r\n  Container,\r\n  Row\r\n} from \"react-bootstrap\";\r\nimport {Notice, KTCodeExample} from \"../../../_metronic/_partials/controls\";\r\n\r\nclass Example extends React.Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.handleShow = this.handleShow.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n\r\n    this.state = {\r\n      show: false\r\n    };\r\n  }\r\n\r\n  handleClose() {\r\n    this.setState({ show: false });\r\n  }\r\n\r\n  handleShow() {\r\n    this.setState({ show: true });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Button variant=\"primary\" onClick={this.handleShow}>\r\n          Launch demo modal\r\n        </Button>\r\n\r\n        <Modal show={this.state.show} onHide={this.handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Modal heading</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={this.handleClose}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={this.handleClose}>\r\n              Save Changes\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nclass MyVerticallyCenteredModal extends React.Component {\r\n  render() {\r\n    return (\r\n      <Modal\r\n        {...this.props}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Modal heading\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4>Centered Modal</h4>\r\n          <p>\r\n            Cras mattis consectetur purus sit amet fermentum. Cras justo odio,\r\n            dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta\r\n            ac consectetur ac, vestibulum at eros.\r\n          </p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button onClick={this.props.onHide}>Close</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nclass App extends React.Component {\r\n  constructor(...args) {\r\n    super(...args);\r\n\r\n    this.state = { modalShow: false };\r\n  }\r\n\r\n  render() {\r\n    let modalClose = () => this.setState({ modalShow: false });\r\n\r\n    return (\r\n      <ButtonToolbar>\r\n        <Button\r\n          variant=\"primary\"\r\n          onClick={() => this.setState({ modalShow: true })}\r\n        >\r\n          Launch vertically centered modal\r\n        </Button>\r\n\r\n        <MyVerticallyCenteredModal\r\n          show={this.state.modalShow}\r\n          onHide={modalClose}\r\n        />\r\n      </ButtonToolbar>\r\n    );\r\n  }\r\n}\r\n\r\nclass MydModalWithGrid extends React.Component {\r\n  render() {\r\n    return (\r\n      <Modal {...this.props} aria-labelledby=\"contained-modal-title-vcenter\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Using Grid in Modal\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Container>\r\n            <Row className=\"show-grid\">\r\n              <Col xs={12} md={8}>\r\n                <code>.col-xs-12 .col-md-8</code>\r\n              </Col>\r\n              <Col xs={6} md={4}>\r\n                <code>.col-xs-6 .col-md-4</code>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row className=\"show-grid\">\r\n              <Col xs={6} md={4}>\r\n                <code>.col-xs-6 .col-md-4</code>\r\n              </Col>\r\n              <Col xs={6} md={4}>\r\n                <code>.col-xs-6 .col-md-4</code>\r\n              </Col>\r\n              <Col xs={6} md={4}>\r\n                <code>.col-xs-6 .col-md-4</code>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button onClick={this.props.onHide}>Close</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nclass App1 extends React.Component {\r\n  constructor(...args) {\r\n    super(...args);\r\n\r\n    this.state = { modalShow: false };\r\n  }\r\n\r\n  render() {\r\n    let modalClose = () => this.setState({ modalShow: false });\r\n\r\n    return (\r\n      <ButtonToolbar>\r\n        <Button\r\n          variant=\"primary\"\r\n          onClick={() => this.setState({ modalShow: true })}\r\n        >\r\n          Launch modal with grid\r\n        </Button>\r\n\r\n        <MydModalWithGrid show={this.state.modalShow} onHide={modalClose} />\r\n      </ButtonToolbar>\r\n    );\r\n  }\r\n}\r\n\r\nclass Example1 extends React.Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.state = {\r\n      smShow: false,\r\n      lgShow: false\r\n    };\r\n  }\r\n\r\n  render() {\r\n    let smClose = () => this.setState({ smShow: false });\r\n    let lgClose = () => this.setState({ lgShow: false });\r\n\r\n    return (\r\n      <ButtonToolbar>\r\n        <Button\r\n          onClick={() => this.setState({ smShow: true })}\r\n          className=\"pr-3\"\r\n        >\r\n          Small modal\r\n        </Button>\r\n        &nbsp;\r\n        <Button onClick={() => this.setState({ lgShow: true })}>\r\n          Large modal\r\n        </Button>\r\n        <Modal\r\n          size=\"sm\"\r\n          show={this.state.smShow}\r\n          onHide={smClose}\r\n          aria-labelledby=\"example-modal-sizes-title-sm\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"example-modal-sizes-title-sm\">\r\n              Small Modal\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>...</Modal.Body>\r\n        </Modal>\r\n        <Modal\r\n          size=\"lg\"\r\n          show={this.state.lgShow}\r\n          onHide={lgClose}\r\n          aria-labelledby=\"example-modal-sizes-title-lg\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n              Large Modal\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>...</Modal.Body>\r\n        </Modal>\r\n      </ButtonToolbar>\r\n    );\r\n  }\r\n}\r\n\r\nclass Example2 extends React.Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.state = {\r\n      show: false\r\n    };\r\n\r\n    this.handleShow = () => {\r\n      this.setState({ show: true });\r\n    };\r\n\r\n    this.handleHide = () => {\r\n      this.setState({ show: false });\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Button variant=\"primary\" onClick={this.handleShow}>\r\n          Custom Width Modal\r\n        </Button>\r\n\r\n        <Modal\r\n          show={this.state.show}\r\n          onHide={this.handleHide}\r\n          dialogClassName=\"modal-90w\"\r\n          aria-labelledby=\"example-custom-modal-styling-title\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"example-custom-modal-styling-title\">\r\n              Custom Modal Styling\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <p>\r\n              Ipsum molestiae natus adipisci modi eligendi? Debitis amet quae\r\n              unde commodi aspernatur enim, consectetur. Cumque deleniti\r\n              temporibus ipsam atque a dolores quisquam quisquam adipisci\r\n              possimus laboriosam. Quibusdam facilis doloribus debitis! Sit\r\n              quasi quod accusamus eos quod. Ab quos consequuntur eaque quo rem!\r\n              Mollitia reiciendis porro quo magni incidunt dolore amet atque\r\n              facilis ipsum deleniti rem!\r\n            </p>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default class ModalExamplesPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Notice icon=\"flaticon-warning font-primary\">\r\n          <span>\r\n            Add dialogs to your site for lightboxes, user notifications, or\r\n            completely custom content.\r\n          </span>{\" \"}\r\n          <span>\r\n            For more info please check the components's official{\" \"}\r\n            <a\r\n              target=\"_blank\"\r\n              className=\"font-weight-bold\"\r\n              rel=\"noopener noreferrer\"\r\n              href=\"https://react-bootstrap.github.io/components/modal/\"\r\n            >\r\n              demos & documentation\r\n            </a>\r\n          </span>\r\n        </Notice>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <KTCodeExample jsCode={jsCode1} beforeCodeTitle=\"Static Markup\">\r\n              <span>\r\n                Below is a static modal dialog (without the positioning) to\r\n                demostrate the look and feel of the Modal.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <Modal.Dialog>\r\n                <Modal.Header closeButton>\r\n                  <Modal.Title>Modal title</Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n                  <p>Modal body text goes here.</p>\r\n                </Modal.Body>\r\n\r\n                <Modal.Footer>\r\n                  <Button variant=\"secondary\">Close</Button>\r\n                  <Button variant=\"primary\">Save changes</Button>\r\n                </Modal.Footer>\r\n              </Modal.Dialog>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample\r\n              jsCode={jsCode3}\r\n              beforeCodeTitle=\"Vertically centered\"\r\n              codeBlockHeight=\"400px\"\r\n            >\r\n              <span>\r\n                You can vertically center a modal by passing the \"centered\"\r\n                prop.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <App />\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample\r\n              jsCode={jsCode6}\r\n              beforeCodeTitle=\"Sizing modals using custom CSS\"\r\n              codeBlockHeight=\"400px\"\r\n            >\r\n              <span>\r\n                You can apply custom css to the modal dialog div using the\r\n                \"dialogClassName\" prop. Example is using a custom css class with\r\n                width set to 90%.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <Example2 />\r\n            </KTCodeExample>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <KTCodeExample\r\n              jsCode={jsCode2}\r\n              beforeCodeTitle=\"Live demo\"\r\n              codeBlockHeight=\"400px\"\r\n            >\r\n              <span>\r\n                A modal with header, body, and set of actions in the footer.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <Example />\r\n            </KTCodeExample>\r\n            <KTCodeExample\r\n              jsCode={jsCode5}\r\n              beforeCodeTitle=\"Optional Sizes\"\r\n              codeBlockHeight=\"400px\"\r\n            >\r\n              <span>\r\n                You can specify a bootstrap large or small modal by using the\r\n                \"size\" prop.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <Example1 />\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample\r\n              jsCode={jsCode4}\r\n              beforeCodeTitle=\"Using the grid\"\r\n              codeBlockHeight=\"400px\"\r\n            >\r\n              <span>\r\n                You can use grid layouts within a model using regular grid\r\n                components inside the modal content.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <App1 />\r\n            </KTCodeExample>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst jsCode1 = `\r\n<Modal.Dialog>\r\n  <Modal.Header closeButton>\r\n    <Modal.Title>Modal title</Modal.Title>\r\n  </Modal.Header>\r\n\r\n  <Modal.Body>\r\n    <p>Modal body text goes here.</p>\r\n  </Modal.Body>\r\n\r\n  <Modal.Footer>\r\n    <Button variant=\"secondary\">Close</Button>\r\n    <Button variant=\"primary\">Save changes</Button>\r\n  </Modal.Footer>\r\n</Modal.Dialog>\r\n`;\r\nconst jsCode2 = `\r\nclass Example extends React.Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.handleShow = this.handleShow.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n\r\n    this.state = {\r\n      show: false,\r\n    };\r\n  }\r\n\r\n  handleClose() {\r\n    this.setState({ show: false });\r\n  }\r\n\r\n  handleShow() {\r\n    this.setState({ show: true });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Button variant=\"primary\" onClick={this.handleShow}>\r\n          Launch demo modal\r\n        </Button>\r\n\r\n        <Modal show={this.state.show} onHide={this.handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Modal heading</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={this.handleClose}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={this.handleClose}>\r\n              Save Changes\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nrender(<Example />);\r\n`;\r\nconst jsCode3 = `\r\nclass MyVerticallyCenteredModal extends React.Component {\r\n  render() {\r\n    return (\r\n      <Modal\r\n        {...this.props}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Modal heading\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4>Centered Modal</h4>\r\n          <p>\r\n            Cras mattis consectetur purus sit amet fermentum. Cras justo odio,\r\n            dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta\r\n            ac consectetur ac, vestibulum at eros.\r\n          </p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button onClick={this.props.onHide}>Close</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nclass App extends React.Component {\r\n  constructor(...args) {\r\n    super(...args);\r\n\r\n    this.state = { modalShow: false };\r\n  }\r\n\r\n  render() {\r\n    let modalClose = () => this.setState({ modalShow: false });\r\n\r\n    return (\r\n      <ButtonToolbar>\r\n        <Button\r\n          variant=\"primary\"\r\n          onClick={() => this.setState({ modalShow: true })}\r\n        >\r\n          Launch vertically centered modal\r\n        </Button>\r\n\r\n        <MyVerticallyCenteredModal\r\n          show={this.state.modalShow}\r\n          onHide={modalClose}\r\n        />\r\n      </ButtonToolbar>\r\n    );\r\n  }\r\n}\r\n\r\nrender(<App />);\r\n`;\r\nconst jsCode4 = `\r\nclass MydModalWithGrid extends React.Component {\r\n  render() {\r\n    return (\r\n      <Modal {...this.props} aria-labelledby=\"contained-modal-title-vcenter\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Using Grid in Modal\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Container>\r\n            <Row className=\"show-grid\">\r\n              <Col xs={12} md={8}>\r\n                <code>.col-xs-12 .col-md-8</code>\r\n              </Col>\r\n              <Col xs={6} md={4}>\r\n                <code>.col-xs-6 .col-md-4</code>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row className=\"show-grid\">\r\n              <Col xs={6} md={4}>\r\n                <code>.col-xs-6 .col-md-4</code>\r\n              </Col>\r\n              <Col xs={6} md={4}>\r\n                <code>.col-xs-6 .col-md-4</code>\r\n              </Col>\r\n              <Col xs={6} md={4}>\r\n                <code>.col-xs-6 .col-md-4</code>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button onClick={this.props.onHide}>Close</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nclass App extends React.Component {\r\n  constructor(...args) {\r\n    super(...args);\r\n\r\n    this.state = { modalShow: false };\r\n  }\r\n\r\n  render() {\r\n    let modalClose = () => this.setState({ modalShow: false });\r\n\r\n    return (\r\n      <ButtonToolbar>\r\n        <Button\r\n          variant=\"primary\"\r\n          onClick={() => this.setState({ modalShow: true })}\r\n        >\r\n          Launch modal with grid\r\n        </Button>\r\n\r\n        <MydModalWithGrid show={this.state.modalShow} onHide={modalClose} />\r\n      </ButtonToolbar>\r\n    );\r\n  }\r\n}\r\n\r\nrender(<App />);\r\n`;\r\nconst jsCode5 = `\r\nclass Example extends React.Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.state = {\r\n      smShow: false,\r\n      lgShow: false,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    let smClose = () => this.setState({ smShow: false });\r\n    let lgClose = () => this.setState({ lgShow: false });\r\n\r\n    return (\r\n      <ButtonToolbar>\r\n        <Button onClick={() => this.setState({ smShow: true })}>\r\n          Small modal\r\n        </Button>\r\n        <Button onClick={() => this.setState({ lgShow: true })}>\r\n          Large modal\r\n        </Button>\r\n\r\n        <Modal\r\n          size=\"sm\"\r\n          show={this.state.smShow}\r\n          onHide={smClose}\r\n          aria-labelledby=\"example-modal-sizes-title-sm\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"example-modal-sizes-title-sm\">\r\n              Small Modal\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>...</Modal.Body>\r\n        </Modal>\r\n\r\n        <Modal\r\n          size=\"lg\"\r\n          show={this.state.lgShow}\r\n          onHide={lgClose}\r\n          aria-labelledby=\"example-modal-sizes-title-lg\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n              Large Modal\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>...</Modal.Body>\r\n        </Modal>\r\n      </ButtonToolbar>\r\n    );\r\n  }\r\n}\r\n\r\nrender(<Example />);\r\n`;\r\nconst jsCode6 = `\r\nclass Example extends React.Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.state = {\r\n      show: false,\r\n    };\r\n\r\n    this.handleShow = () => {\r\n      this.setState({ show: true });\r\n    };\r\n\r\n    this.handleHide = () => {\r\n      this.setState({ show: false });\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Button variant=\"primary\" onClick={this.handleShow}>\r\n          Custom Width Modal\r\n        </Button>\r\n\r\n        <Modal\r\n          show={this.state.show}\r\n          onHide={this.handleHide}\r\n          dialogClassName=\"modal-90w\"\r\n          aria-labelledby=\"example-custom-modal-styling-title\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"example-custom-modal-styling-title\">\r\n              Custom Modal Styling\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <p>\r\n              Ipsum molestiae natus adipisci modi eligendi? Debitis amet quae\r\n              unde commodi aspernatur enim, consectetur. Cumque deleniti\r\n              temporibus ipsam atque a dolores quisquam quisquam adipisci\r\n              possimus laboriosam. Quibusdam facilis doloribus debitis! Sit\r\n              quasi quod accusamus eos quod. Ab quos consequuntur eaque quo rem!\r\n              Mollitia reiciendis porro quo magni incidunt dolore amet atque\r\n              facilis ipsum deleniti rem!\r\n            </p>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nrender(<Example />);\r\n`;\r\n","import React from \"react\";\r\nimport {Nav, NavDropdown} from \"react-bootstrap\";\r\nimport {Notice, KTCodeExample} from \"../../../_metronic/_partials/controls\";\r\n\r\nclass NavDropdownExample extends React.Component {\r\n  handleSelect(eventKey) {\r\n    alert(`selected ${eventKey}`);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Nav variant=\"pills\" activeKey=\"1\" onSelect={k => this.handleSelect(k)}>\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"1\" href=\"#/home\">\r\n            NavLink 1 content\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"2\" title=\"Item\">\r\n            NavLink 2 content\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"3\" disabled>\r\n            NavLink 3 content\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n        <NavDropdown title=\"Dropdown\" id=\"nav-dropdown\">\r\n          <NavDropdown.Item eventKey=\"4.1\">Action</NavDropdown.Item>\r\n          <NavDropdown.Item eventKey=\"4.2\">Another action</NavDropdown.Item>\r\n          <NavDropdown.Item eventKey=\"4.3\">\r\n            Something else here\r\n          </NavDropdown.Item>\r\n          <NavDropdown.Divider />\r\n          <NavDropdown.Item eventKey=\"4.4\">Separated link</NavDropdown.Item>\r\n        </NavDropdown>\r\n      </Nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default class NavsExamplesPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Notice icon=\"flaticon-warning font-primary\">\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"font-weight-bold\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://react-bootstrap.github.io/components/navs/\"\r\n          >\r\n            demos & documentation.\r\n          </a>\r\n        </Notice>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <KTCodeExample jsCode={jsCode1} beforeCodeTitle=\"Base Nav\">\r\n              <span>\r\n                Navigation bits in Bootstrap all share a general{\" \"}\r\n                <code>Nav</code> component and styles. Swap <code>variant</code>\r\n                s to switch between each style. The base <code>Nav</code>{\" \"}\r\n                component is built with flexbox and provide a strong foundation\r\n                for building all types of navigation components.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <Nav\r\n                activeKey=\"/home\"\r\n                onSelect={selectedKey => alert(`selected ${selectedKey}`)}\r\n              >\r\n                <Nav.Item>\r\n                  <Nav.Link href=\"/home\">Active</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                  <Nav.Link eventKey=\"link-1\">Link</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                  <Nav.Link eventKey=\"link-2\">Link</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                  <Nav.Link eventKey=\"disabled\" disabled>\r\n                    Disabled\r\n                  </Nav.Link>\r\n                </Nav.Item>\r\n              </Nav>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode3} beforeCodeTitle=\"Vertical\">\r\n              <span>\r\n                Create stacked navs by changing the flex item direction with the{\" \"}\r\n                <code>.flex-column</code> class, or your own css.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <Nav defaultActiveKey=\"/home\" className=\"flex-column\">\r\n                <Nav.Link href=\"/home\">Active</Nav.Link>\r\n                <Nav.Link eventKey=\"link-1\">Link</Nav.Link>\r\n                <Nav.Link eventKey=\"link-2\">Link</Nav.Link>\r\n                <Nav.Link eventKey=\"disabled\" disabled>\r\n                  Disabled\r\n                </Nav.Link>\r\n              </Nav>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode5} beforeCodeTitle=\"Pills\">\r\n              <span>An alternative visual variant.</span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <Nav variant=\"pills\" defaultActiveKey=\"/home\">\r\n                <Nav.Item>\r\n                  <Nav.Link href=\"/home\">Active</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                  <Nav.Link eventKey=\"link-1\">Option 2</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                  <Nav.Link eventKey=\"disabled\" disabled>\r\n                    Disabled\r\n                  </Nav.Link>\r\n                </Nav.Item>\r\n              </Nav>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode7} beforeCodeTitle=\"Using dropdowns\">\r\n              <span>\r\n                You can mix and match the Dropdown components with the NavLink\r\n                and NavItem components to create a Dropdown that plays well in a\r\n                Nav component\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <NavDropdownExample />\r\n            </KTCodeExample>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <KTCodeExample\r\n              jsCode={jsCode2}\r\n              beforeCodeTitle=\"Alignment and orientation\"\r\n            >\r\n              <span>\r\n                You can control the the direction and orientation of the{\" \"}\r\n                <code>Nav</code> by making use of the flexbox layout utility\r\n                classes. By default, navs are left-aligned, but that is easily\r\n                changed to center or right-aligned.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <>\r\n                <Nav className=\"justify-content-center\" activeKey=\"/home\">\r\n                  <Nav.Item>\r\n                    <Nav.Link href=\"/home\">Active</Nav.Link>\r\n                  </Nav.Item>\r\n                  <Nav.Item>\r\n                    <Nav.Link eventKey=\"link-1\">Link</Nav.Link>\r\n                  </Nav.Item>\r\n                  <Nav.Item>\r\n                    <Nav.Link eventKey=\"link-2\">Link</Nav.Link>\r\n                  </Nav.Item>\r\n                  <Nav.Item>\r\n                    <Nav.Link eventKey=\"disabled\" disabled>\r\n                      Disabled\r\n                    </Nav.Link>\r\n                  </Nav.Item>\r\n                </Nav>\r\n                <p className=\"text-center mt-4 mb-4\">Or right-aligned</p>\r\n                <Nav className=\"justify-content-end\" activeKey=\"/home\">\r\n                  <Nav.Item>\r\n                    <Nav.Link href=\"/home\">Active</Nav.Link>\r\n                  </Nav.Item>\r\n                  <Nav.Item>\r\n                    <Nav.Link eventKey=\"link-1\">Link</Nav.Link>\r\n                  </Nav.Item>\r\n                  <Nav.Item>\r\n                    <Nav.Link eventKey=\"link-2\">Link</Nav.Link>\r\n                  </Nav.Item>\r\n                  <Nav.Item>\r\n                    <Nav.Link eventKey=\"disabled\" disabled>\r\n                      Disabled\r\n                    </Nav.Link>\r\n                  </Nav.Item>\r\n                </Nav>\r\n              </>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode4} beforeCodeTitle=\"Tabs\">\r\n              <span>\r\n                Visually represent nav items as \"tabs\". This style pairs nicely\r\n                with tabbable regions created by our Tab components\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <Nav variant=\"tabs\" defaultActiveKey=\"/home\">\r\n                <Nav.Item>\r\n                  <Nav.Link href=\"/home\">Active</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                  <Nav.Link eventKey=\"link-1\">Option 2</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                  <Nav.Link eventKey=\"disabled\" disabled>\r\n                    Disabled\r\n                  </Nav.Link>\r\n                </Nav.Item>\r\n              </Nav>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode6} beforeCodeTitle=\"Fill and justify\">\r\n              <span>\r\n                Force the contents of your nav to extend the full available\r\n                width. To proportionately fill the space use <code>fill</code>.\r\n                Notice that the nav is the entire width but each nav item is a\r\n                different size.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <Nav fill variant=\"tabs\" defaultActiveKey=\"/home\">\r\n                <Nav.Item>\r\n                  <Nav.Link href=\"/home\">Active</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                  <Nav.Link eventKey=\"link-1\">Loooonger NavLink</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                  <Nav.Link eventKey=\"link-2\">Link</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                  <Nav.Link eventKey=\"disabled\" disabled>\r\n                    Disabled\r\n                  </Nav.Link>\r\n                </Nav.Item>\r\n              </Nav>\r\n            </KTCodeExample>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst jsCode1 = `\r\n<Nav\r\n  activeKey=\"/home\"\r\n  onSelect={selectedKey => alert(\\`selected \\${selectedKey}\\`)}\r\n>\r\n  <Nav.Item>\r\n    <Nav.Link href=\"/home\">Active</Nav.Link>\r\n  </Nav.Item>\r\n  <Nav.Item>\r\n    <Nav.Link eventKey=\"link-1\">Link</Nav.Link>\r\n  </Nav.Item>\r\n  <Nav.Item>\r\n    <Nav.Link eventKey=\"link-2\">Link</Nav.Link>\r\n  </Nav.Item>\r\n  <Nav.Item>\r\n    <Nav.Link eventKey=\"disabled\" disabled>\r\n      Disabled\r\n    </Nav.Link>\r\n  </Nav.Item>\r\n</Nav>\r\n`;\r\nconst jsCode2 = `\r\n<>\r\n  <Nav className=\"justify-content-center\" activeKey=\"/home\">\r\n    <Nav.Item>\r\n      <Nav.Link href=\"/home\">Active</Nav.Link>\r\n    </Nav.Item>\r\n    <Nav.Item>\r\n      <Nav.Link eventKey=\"link-1\">Link</Nav.Link>\r\n    </Nav.Item>\r\n    <Nav.Item>\r\n      <Nav.Link eventKey=\"link-2\">Link</Nav.Link>\r\n    </Nav.Item>\r\n    <Nav.Item>\r\n      <Nav.Link eventKey=\"disabled\" disabled>\r\n        Disabled\r\n      </Nav.Link>\r\n    </Nav.Item>\r\n  </Nav>\r\n  <p className=\"text-center mt-4 mb-4\">Or right-aligned</p>\r\n  <Nav className=\"justify-content-end\" activeKey=\"/home\">\r\n    <Nav.Item>\r\n      <Nav.Link href=\"/home\">Active</Nav.Link>\r\n    </Nav.Item>\r\n    <Nav.Item>\r\n      <Nav.Link eventKey=\"link-1\">Link</Nav.Link>\r\n    </Nav.Item>\r\n    <Nav.Item>\r\n      <Nav.Link eventKey=\"link-2\">Link</Nav.Link>\r\n    </Nav.Item>\r\n    <Nav.Item>\r\n      <Nav.Link eventKey=\"disabled\" disabled>\r\n        Disabled\r\n      </Nav.Link>\r\n    </Nav.Item>\r\n  </Nav>\r\n</>\r\n`;\r\nconst jsCode3 = `\r\n<Nav defaultActiveKey=\"/home\" className=\"flex-column\">\r\n  <Nav.Link href=\"/home\">Active</Nav.Link>\r\n  <Nav.Link eventKey=\"link-1\">Link</Nav.Link>\r\n  <Nav.Link eventKey=\"link-2\">Link</Nav.Link>\r\n  <Nav.Link eventKey=\"disabled\" disabled>\r\n    Disabled\r\n  </Nav.Link>\r\n</Nav>\r\n`;\r\nconst jsCode4 = `\r\n<Nav variant=\"tabs\" defaultActiveKey=\"/home\">\r\n  <Nav.Item>\r\n    <Nav.Link href=\"/home\">Active</Nav.Link>\r\n  </Nav.Item>\r\n  <Nav.Item>\r\n    <Nav.Link eventKey=\"link-1\">Option 2</Nav.Link>\r\n  </Nav.Item>\r\n  <Nav.Item>\r\n    <Nav.Link eventKey=\"disabled\" disabled>\r\n      Disabled\r\n    </Nav.Link>\r\n  </Nav.Item>\r\n</Nav>\r\n`;\r\nconst jsCode5 = `\r\n<Nav variant=\"pills\" defaultActiveKey=\"/home\">\r\n  <Nav.Item>\r\n    <Nav.Link href=\"/home\">Active</Nav.Link>\r\n  </Nav.Item>\r\n  <Nav.Item>\r\n    <Nav.Link eventKey=\"link-1\">Option 2</Nav.Link>\r\n  </Nav.Item>\r\n  <Nav.Item>\r\n    <Nav.Link eventKey=\"disabled\" disabled>\r\n      Disabled\r\n    </Nav.Link>\r\n  </Nav.Item>\r\n</Nav>\r\n`;\r\nconst jsCode6 = `\r\n<Nav fill variant=\"tabs\" defaultActiveKey=\"/home\">\r\n  <Nav.Item>\r\n    <Nav.Link href=\"/home\">Active</Nav.Link>\r\n  </Nav.Item>\r\n  <Nav.Item>\r\n    <Nav.Link eventKey=\"link-1\">Loooonger NavLink</Nav.Link>\r\n  </Nav.Item>\r\n  <Nav.Item>\r\n    <Nav.Link eventKey=\"link-2\">Link</Nav.Link>\r\n  </Nav.Item>\r\n  <Nav.Item>\r\n    <Nav.Link eventKey=\"disabled\" disabled>\r\n      Disabled\r\n    </Nav.Link>\r\n  </Nav.Item>\r\n</Nav>\r\n`;\r\nconst jsCode7 = `\r\nclass NavDropdownExample extends React.Component {\r\n  handleSelect(eventKey) {\r\n    alert(\\`selected \\${eventKey}\\`);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Nav variant=\"pills\" activeKey=\"1\" onSelect={k => this.handleSelect(k)}>\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"1\" href=\"#/home\">\r\n            NavLink 1 content\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"2\" title=\"Item\">\r\n            NavLink 2 content\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"3\" disabled>\r\n            NavLink 3 content\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n        <NavDropdown title=\"Dropdown\" id=\"nav-dropdown\">\r\n          <NavDropdown.Item eventKey=\"4.1\">Action</NavDropdown.Item>\r\n          <NavDropdown.Item eventKey=\"4.2\">Another action</NavDropdown.Item>\r\n          <NavDropdown.Item eventKey=\"4.3\">\r\n            Something else here\r\n          </NavDropdown.Item>\r\n          <NavDropdown.Divider />\r\n          <NavDropdown.Item eventKey=\"4.4\">Separated link</NavDropdown.Item>\r\n        </NavDropdown>\r\n      </Nav>\r\n    );\r\n  }\r\n}\r\n\r\nrender(<NavDropdownExample />);\r\n`;\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Navbar,\r\n  Nav,\r\n  NavDropdown,\r\n  Form,\r\n  FormControl,\r\n  InputGroup,\r\n  Container\r\n} from \"react-bootstrap\";\r\nimport {Notice, KTCodeExample} from \"../../../_metronic/_partials/controls\";\r\n\r\nexport default class NavbarExamplesPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Notice icon=\"flaticon-warning font-primary\">\r\n          <span>\r\n            A powerful, responsive navigation header, the navbar. Includes\r\n            support for branding, navigation, and more.\r\n          </span>{\" \"}\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"font-weight-bold\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://react-bootstrap.github.io/components/navbar/\"\r\n          >\r\n            demos & documentation.\r\n          </a>\r\n        </Notice>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <KTCodeExample jsCode={jsCode1} beforeCodeTitle=\"Overview\">\r\n              <span>\r\n                A responsive navigation header, including support for branding,\r\n                navigation, and more. Here’s an example of all the\r\n                sub-components included in a responsive light-themed navbar that\r\n                automatically collapses at the lg (large) breakpoint.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <Navbar bg=\"light\" expand=\"lg\">\r\n                <Navbar.Brand href=\"#home\">React-Bootstrap</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                  <Nav className=\"mr-auto\">\r\n                    <Nav.Link href=\"#home\">Home</Nav.Link>\r\n                    <Nav.Link href=\"#link\">Link</Nav.Link>\r\n                    <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\r\n                      <NavDropdown.Item href=\"#action/3.1\">\r\n                        Action\r\n                      </NavDropdown.Item>\r\n                      <NavDropdown.Item href=\"#action/3.2\">\r\n                        Another action\r\n                      </NavDropdown.Item>\r\n                      <NavDropdown.Item href=\"#action/3.3\">\r\n                        Something\r\n                      </NavDropdown.Item>\r\n                      <NavDropdown.Divider />\r\n                      <NavDropdown.Item href=\"#action/3.4\">\r\n                        Separated link\r\n                      </NavDropdown.Item>\r\n                    </NavDropdown>\r\n                  </Nav>\r\n                  <Form inline>\r\n                    <FormControl\r\n                      type=\"text\"\r\n                      placeholder=\"Search\"\r\n                      className=\"mr-sm-2\"\r\n                    />\r\n                    <Button variant=\"outline-success\">Search</Button>\r\n                  </Form>\r\n                </Navbar.Collapse>\r\n              </Navbar>\r\n            </KTCodeExample>\r\n            <KTCodeExample\r\n              jsCode={jsCode4}\r\n              beforeCodeTitle=\"Text and Non-nav links\"\r\n            >\r\n              <span>\r\n                Loose text and links can be wrapped <code>Navbar.Text</code> in\r\n                order to correctly align it vertically.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <Navbar>\r\n                <Navbar.Brand href=\"#home\">Navbar with text</Navbar.Brand>\r\n                <Navbar.Toggle />\r\n                <Navbar.Collapse className=\"justify-content-end\">\r\n                  <Navbar.Text>\r\n                    Signed in as: <a href=\"#login\">Mark Otto</a>\r\n                  </Navbar.Text>\r\n                </Navbar.Collapse>\r\n              </Navbar>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode3} beforeCodeTitle=\"Forms\">\r\n              <span>\r\n                Use <code>&lt;Form inline&gt;</code> and your various form\r\n                controls within the Navbar. Align the contents as needed with\r\n                utility classes.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <Navbar className=\"bg-light justify-content-between\">\r\n                <Form inline>\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                      <InputGroup.Text id=\"basic-addon1\">@</InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <FormControl\r\n                      placeholder=\"Username\"\r\n                      aria-label=\"Username\"\r\n                      aria-describedby=\"basic-addon1\"\r\n                    />\r\n                  </InputGroup>\r\n                </Form>\r\n                <Form inline>\r\n                  <FormControl\r\n                    type=\"text\"\r\n                    placeholder=\"Search\"\r\n                    className=\" mr-sm-2\"\r\n                  />\r\n                  <Button type=\"submit\">Submit</Button>\r\n                </Form>\r\n              </Navbar>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample\r\n              jsCode={jsCode7}\r\n              beforeCodeTitle=\"Responsive behaviors\"\r\n            >\r\n              <span className=\"mb-3\">\r\n                Use the <code>expand</code> prop as well as the{\" \"}\r\n                <code>Navbar.Toggle</code> and <code>Navbar.Collapse</code>{\" \"}\r\n                components to control when content collapses behind a button.\r\n              </span>\r\n              <div>\r\n                Set the <code>defaultExpanded</code> prop to make the Navbar\r\n                start expanded. Set <code>collapseOnSelect</code> to make the\r\n                Navbar collapse automatically when the user selects an item. You\r\n                can also finely control the collapsing behavior by using the{\" \"}\r\n                <code>expanded</code> and <code>onToggle</code> props.\r\n              </div>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n                <Navbar.Brand href=\"#home\">React-Bootstrap</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                  <Nav className=\"mr-auto\">\r\n                    <Nav.Link href=\"#features\">Features</Nav.Link>\r\n                    <Nav.Link href=\"#pricing\">Pricing</Nav.Link>\r\n                    <NavDropdown title=\"Dropdown\" id=\"collasible-nav-dropdown\">\r\n                      <NavDropdown.Item href=\"#action/3.1\">\r\n                        Action\r\n                      </NavDropdown.Item>\r\n                      <NavDropdown.Item href=\"#action/3.2\">\r\n                        Another action\r\n                      </NavDropdown.Item>\r\n                      <NavDropdown.Item href=\"#action/3.3\">\r\n                        Something\r\n                      </NavDropdown.Item>\r\n                      <NavDropdown.Divider />\r\n                      <NavDropdown.Item href=\"#action/3.4\">\r\n                        Separated link\r\n                      </NavDropdown.Item>\r\n                    </NavDropdown>\r\n                  </Nav>\r\n                  <Nav>\r\n                    <Nav.Link href=\"#deets\">More deets</Nav.Link>\r\n                    <Nav.Link eventKey={2} href=\"#memes\">\r\n                      Dank memes\r\n                    </Nav.Link>\r\n                  </Nav>\r\n                </Navbar.Collapse>\r\n              </Navbar>\r\n            </KTCodeExample>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <KTCodeExample jsCode={jsCode2} beforeCodeTitle=\"Brand\">\r\n              <span>\r\n                A simple flexible branding component. Images are supported but\r\n                will likely require custom styling to work well.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <>\r\n                <Navbar bg=\"light\">\r\n                  <Navbar.Brand href=\"#home\">Brand link</Navbar.Brand>\r\n                </Navbar>\r\n                <br />\r\n                <Navbar bg=\"light\">\r\n                  <Navbar.Brand>Brand text</Navbar.Brand>\r\n                </Navbar>\r\n                <br />\r\n                <Navbar bg=\"dark\">\r\n                  <Navbar.Brand href=\"#home\">\r\n                    <img\r\n                      src=\"https://react-bootstrap.github.io/logo.svg\"\r\n                      width=\"30\"\r\n                      height=\"30\"\r\n                      className=\"d-inline-block align-top\"\r\n                      alt=\"React Bootstrap logo\"\r\n                    />\r\n                  </Navbar.Brand>\r\n                </Navbar>\r\n                <br />\r\n                <Navbar bg=\"dark\" variant=\"dark\">\r\n                  <Navbar.Brand href=\"#home\">\r\n                    <img\r\n                      alt=\"\"\r\n                      src=\"https://react-bootstrap.github.io/logo.svg\"\r\n                      width=\"30\"\r\n                      height=\"30\"\r\n                      className=\"d-inline-block align-top\"\r\n                    />\r\n                    {\" React Bootstrap\"}\r\n                  </Navbar.Brand>\r\n                </Navbar>\r\n              </>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode5} beforeCodeTitle=\"Color schemes\">\r\n              <span>\r\n                Theming the navbar has never been easier thanks to the\r\n                combination of theming classes and background-color utilities.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <>\r\n                <Navbar bg=\"dark\" variant=\"dark\">\r\n                  <Navbar.Brand href=\"#home\">Navbar</Navbar.Brand>\r\n                  <Nav className=\"mr-auto\">\r\n                    <Nav.Link href=\"#home\">Home</Nav.Link>\r\n                    <Nav.Link href=\"#features\">Features</Nav.Link>\r\n                    <Nav.Link href=\"#pricing\">Pricing</Nav.Link>\r\n                  </Nav>\r\n                  <Form inline>\r\n                    <FormControl\r\n                      type=\"text\"\r\n                      placeholder=\"Search\"\r\n                      className=\"mr-sm-2\"\r\n                    />\r\n                    <Button variant=\"outline-info\">Search</Button>\r\n                  </Form>\r\n                </Navbar>\r\n                <br />\r\n                <Navbar bg=\"primary\" variant=\"dark\">\r\n                  <Navbar.Brand href=\"#home\">Navbar</Navbar.Brand>\r\n                  <Nav className=\"mr-auto\">\r\n                    <Nav.Link href=\"#home\">Home</Nav.Link>\r\n                    <Nav.Link href=\"#features\">Features</Nav.Link>\r\n                    <Nav.Link href=\"#pricing\">Pricing</Nav.Link>\r\n                  </Nav>\r\n                  <Form inline>\r\n                    <FormControl\r\n                      type=\"text\"\r\n                      placeholder=\"Search\"\r\n                      className=\"mr-sm-2\"\r\n                    />\r\n                    <Button variant=\"outline-light\">Search</Button>\r\n                  </Form>\r\n                </Navbar>\r\n\r\n                <br />\r\n                <Navbar bg=\"light\" variant=\"light\">\r\n                  <Navbar.Brand href=\"#home\">Navbar</Navbar.Brand>\r\n                  <Nav className=\"mr-auto\">\r\n                    <Nav.Link href=\"#home\">Home</Nav.Link>\r\n                    <Nav.Link href=\"#features\">Features</Nav.Link>\r\n                    <Nav.Link href=\"#pricing\">Pricing</Nav.Link>\r\n                  </Nav>\r\n                  <Form inline>\r\n                    <FormControl\r\n                      type=\"text\"\r\n                      placeholder=\"Search\"\r\n                      className=\"mr-sm-2\"\r\n                    />\r\n                    <Button variant=\"outline-primary\">Search</Button>\r\n                  </Form>\r\n                </Navbar>\r\n              </>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode6} beforeCodeTitle=\"Containers\">\r\n              <span>\r\n                While not required, you can wrap the Navbar in a{\" \"}\r\n                <code>&lt;Container&gt;</code> component to center it on a page,\r\n                or add one within to only center the contents of a fixed or\r\n                static top navbar.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <Container>\r\n                <Navbar expand=\"lg\" variant=\"light\" bg=\"light\">\r\n                  <Navbar.Brand href=\"#\">Navbar</Navbar.Brand>\r\n                </Navbar>\r\n              </Container>\r\n            </KTCodeExample>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst jsCode1 = `\r\n<Navbar bg=\"light\" expand=\"lg\">\r\n  <Navbar.Brand href=\"#home\">React-Bootstrap</Navbar.Brand>\r\n  <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n  <Navbar.Collapse id=\"basic-navbar-nav\">\r\n    <Nav className=\"mr-auto\">\r\n      <Nav.Link href=\"#home\">Home</Nav.Link>\r\n      <Nav.Link href=\"#link\">Link</Nav.Link>\r\n      <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\r\n        <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n        <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n        <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n        <NavDropdown.Divider />\r\n        <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n      </NavDropdown>\r\n    </Nav>\r\n    <Form inline>\r\n      <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n      <Button variant=\"outline-success\">Search</Button>\r\n    </Form>\r\n  </Navbar.Collapse>\r\n</Navbar>\r\n`;\r\nconst jsCode2 = `\r\n<>\r\n  <Navbar bg=\"light\">\r\n    <Navbar.Brand href=\"#home\">Brand link</Navbar.Brand>\r\n  </Navbar>\r\n  <br />\r\n  <Navbar bg=\"light\">\r\n    <Navbar.Brand>Brand text</Navbar.Brand>\r\n  </Navbar>\r\n  <br />\r\n  <Navbar bg=\"dark\">\r\n    <Navbar.Brand href=\"#home\">\r\n      <img\r\n        src=\"/logo.svg\"\r\n        width=\"30\"\r\n        height=\"30\"\r\n        className=\"d-inline-block align-top\"\r\n        alt=\"React Bootstrap logo\"\r\n      />\r\n    </Navbar.Brand>\r\n  </Navbar>\r\n  <br />\r\n  <Navbar bg=\"dark\" variant=\"dark\">\r\n    <Navbar.Brand href=\"#home\">\r\n      <img\r\n        alt=\"\"\r\n        src=\"/logo.svg\"\r\n        width=\"30\"\r\n        height=\"30\"\r\n        className=\"d-inline-block align-top\"\r\n      />\r\n      {' React Bootstrap'}\r\n    </Navbar.Brand>\r\n  </Navbar>\r\n</>\r\n`;\r\nconst jsCode3 = `\r\n<Navbar className=\"bg-light justify-content-between\">\r\n  <Form inline>\r\n    <InputGroup>\r\n      <InputGroup.Prepend>\r\n        <InputGroup.Text id=\"basic-addon1\">@</InputGroup.Text>\r\n      </InputGroup.Prepend>\r\n      <FormControl\r\n        placeholder=\"Username\"\r\n        aria-label=\"Username\"\r\n        aria-describedby=\"basic-addon1\"\r\n      />\r\n    </InputGroup>\r\n  </Form>\r\n  <Form inline>\r\n    <FormControl type=\"text\" placeholder=\"Search\" className=\" mr-sm-2\" />\r\n    <Button type=\"submit\">Submit</Button>\r\n  </Form>\r\n</Navbar>\r\n`;\r\nconst jsCode4 = `\r\n<Navbar>\r\n  <Navbar.Brand href=\"#home\">Navbar with text</Navbar.Brand>\r\n  <Navbar.Toggle />\r\n  <Navbar.Collapse className=\"justify-content-end\">\r\n    <Navbar.Text>\r\n      Signed in as: <a href=\"#login\">Mark Otto</a>\r\n    </Navbar.Text>\r\n  </Navbar.Collapse>\r\n</Navbar>\r\n`;\r\nconst jsCode5 = `\r\n<>\r\n  <Navbar bg=\"dark\" variant=\"dark\">\r\n    <Navbar.Brand href=\"#home\">Navbar</Navbar.Brand>\r\n    <Nav className=\"mr-auto\">\r\n      <Nav.Link href=\"#home\">Home</Nav.Link>\r\n      <Nav.Link href=\"#features\">Features</Nav.Link>\r\n      <Nav.Link href=\"#pricing\">Pricing</Nav.Link>\r\n    </Nav>\r\n    <Form inline>\r\n      <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n      <Button variant=\"outline-info\">Search</Button>\r\n    </Form>\r\n  </Navbar>\r\n  <br />\r\n  <Navbar bg=\"primary\" variant=\"dark\">\r\n    <Navbar.Brand href=\"#home\">Navbar</Navbar.Brand>\r\n    <Nav className=\"mr-auto\">\r\n      <Nav.Link href=\"#home\">Home</Nav.Link>\r\n      <Nav.Link href=\"#features\">Features</Nav.Link>\r\n      <Nav.Link href=\"#pricing\">Pricing</Nav.Link>\r\n    </Nav>\r\n    <Form inline>\r\n      <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n      <Button variant=\"outline-light\">Search</Button>\r\n    </Form>\r\n  </Navbar>\r\n\r\n  <br />\r\n  <Navbar bg=\"light\" variant=\"light\">\r\n    <Navbar.Brand href=\"#home\">Navbar</Navbar.Brand>\r\n    <Nav className=\"mr-auto\">\r\n      <Nav.Link href=\"#home\">Home</Nav.Link>\r\n      <Nav.Link href=\"#features\">Features</Nav.Link>\r\n      <Nav.Link href=\"#pricing\">Pricing</Nav.Link>\r\n    </Nav>\r\n    <Form inline>\r\n      <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n      <Button variant=\"outline-primary\">Search</Button>\r\n    </Form>\r\n  </Navbar>\r\n</>\r\n`;\r\nconst jsCode6 = `\r\n<Container>\r\n  <Navbar expand=\"lg\" variant=\"light\" bg=\"light\">\r\n    <Navbar.Brand href=\"#\">Navbar</Navbar.Brand>\r\n  </Navbar>\r\n</Container>\r\n`;\r\nconst jsCode7 = `\r\n<Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n  <Navbar.Brand href=\"#home\">React-Bootstrap</Navbar.Brand>\r\n  <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n  <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n    <Nav className=\"mr-auto\">\r\n      <Nav.Link href=\"#features\">Features</Nav.Link>\r\n      <Nav.Link href=\"#pricing\">Pricing</Nav.Link>\r\n      <NavDropdown title=\"Dropdown\" id=\"collasible-nav-dropdown\">\r\n        <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n        <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n        <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n        <NavDropdown.Divider />\r\n        <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n      </NavDropdown>\r\n    </Nav>\r\n    <Nav>\r\n      <Nav.Link href=\"#deets\">More deets</Nav.Link>\r\n      <Nav.Link eventKey={2} href=\"#memes\">\r\n        Dank memes\r\n      </Nav.Link>\r\n    </Nav>\r\n  </Navbar.Collapse>\r\n</Navbar>\r\n`;\r\n","/* eslint-disable no-unused-vars */\r\nimport React from \"react\";\r\nimport {\r\n  Button,\r\n  Overlay,\r\n  Popover,\r\n  OverlayTrigger,\r\n  ButtonToolbar,\r\n  Tooltip\r\n} from \"react-bootstrap\";\r\nimport { Notice, KTCodeExample } from \"../../../_metronic/_partials/controls\";\r\n\r\nclass Example extends React.Component {\r\n  constructor(...args) {\r\n    super(...args);\r\n\r\n    this.attachRef = target => this.setState({ target });\r\n    this.state = {\r\n      show: false\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { show, target } = this.state;\r\n    return (\r\n      <>\r\n        <Button\r\n          variant=\"danger\"\r\n          ref={this.attachRef}\r\n          onClick={() => this.setState({ show: !show })}\r\n        >\r\n          Click me to see\r\n        </Button>\r\n        <Overlay target={target} show={show} placement=\"right\">\r\n          {({\r\n            placement,\r\n            scheduleUpdate,\r\n            arrowProps,\r\n            outOfBoundaries,\r\n            show: _show,\r\n            ...props\r\n          }) => (\r\n            <div\r\n              {...props}\r\n              style={{\r\n                backgroundColor: \"rgba(255, 100, 100, 0.85)\",\r\n                padding: \"2px 10px\",\r\n                color: \"white\",\r\n                borderRadius: 3,\r\n                ...props.style\r\n              }}\r\n            >\r\n              Simple tooltip\r\n            </div>\r\n          )}\r\n        </Overlay>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst renderTooltip = props => (\r\n  <div\r\n    {...props}\r\n    style={{\r\n      backgroundColor: \"rgba(0, 0, 0, 0.85)\",\r\n      padding: \"2px 10px\",\r\n      color: \"white\",\r\n      borderRadius: 3,\r\n      ...props.style\r\n    }}\r\n  >\r\n    Simple tooltip\r\n  </div>\r\n);\r\n\r\nconst Example1 = () => (\r\n  <OverlayTrigger\r\n    placement=\"right-start\"\r\n    delay={{ show: 250, hide: 400 }}\r\n    overlay={renderTooltip}\r\n  >\r\n    <Button variant=\"success\">Hover me to see</Button>\r\n  </OverlayTrigger>\r\n);\r\n\r\nclass Example4 extends React.Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.handleClick = ({ target }) => {\r\n      this.setState(s => ({ target, show: !s.show }));\r\n    };\r\n\r\n    this.state = {\r\n      show: false\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ButtonToolbar>\r\n        <Button onClick={this.handleClick}>Holy guacamole!</Button>\r\n\r\n        <Overlay\r\n          show={this.state.show}\r\n          target={this.state.target}\r\n          placement=\"bottom\"\r\n          container={this}\r\n          containerPadding={20}\r\n        >\r\n          <Popover id=\"popover-contained\" title=\"Popover bottom\">\r\n            <strong>Holy guacamole!</strong> Check this info.\r\n          </Popover>\r\n        </Overlay>\r\n      </ButtonToolbar>\r\n    );\r\n  }\r\n}\r\n\r\nclass UpdatingPopover extends React.Component {\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.children !== this.props.children) {\r\n      this.props.scheduleUpdate();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <Popover {...this.props} />;\r\n  }\r\n}\r\n\r\nconst longContent = `\r\n  Very long\r\n  Multiline content\r\n  that is engaging and what-not\r\n`;\r\nconst shortContent = \"Short and sweet!\";\r\n\r\nclass Example5 extends React.Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    this.state = { content: shortContent };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.timer = setInterval(() => {\r\n      this.setState(state => ({\r\n        content: state.content === shortContent ? longContent : shortContent\r\n      }));\r\n    }, 3000);\r\n  }\r\n\r\n  render() {\r\n    const { content } = this.state;\r\n\r\n    return (\r\n      <OverlayTrigger\r\n        trigger=\"click\"\r\n        overlay={\r\n          <UpdatingPopover id=\"popover-contained\">{content}</UpdatingPopover>\r\n        }\r\n      >\r\n        <Button onClick={this.handleClick}>Holy guacamole!</Button>\r\n      </OverlayTrigger>\r\n    );\r\n  }\r\n}\r\n\r\nexport default class OverlaysExamplesPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Notice icon=\"flaticon-warning font-primary\">\r\n          <span>\r\n            A set of components for positioning beautiful overlays, tooltips,\r\n            popovers, and anything else you need.\r\n          </span>{\" \"}\r\n          <span>\r\n            For more info please check the components's official{\" \"}\r\n            <a\r\n              target=\"_blank\"\r\n              className=\"font-weight-bold\"\r\n              rel=\"noopener noreferrer\"\r\n              href=\"https://react-bootstrap.github.io/components/overlays/\"\r\n            >\r\n              demos & documentation\r\n            </a>\r\n          </span>\r\n        </Notice>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <KTCodeExample\r\n              jsCode={jsCode1}\r\n              beforeCodeTitle=\"Creating an Overlay\"\r\n            >\r\n              <span>\r\n                Overlays consist of at least two elements, the \"overlay\", the\r\n                element to be positioned, as well as a \"target\", the element the\r\n                overlay is positioned in relation to. You can also also have an\r\n                \"arrow\" element, like the tooltips and popovers, but that is\r\n                optional.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <Example />\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode5} beforeCodeTitle=\"Disabled elements\">\r\n              <span>\r\n                Elements with the <code>disabled</code> attribute aren’t\r\n                interactive, meaning users cannot hover or click them to trigger\r\n                a popover (or tooltip).\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <OverlayTrigger\r\n                overlay={<Tooltip id=\"tooltip-disabled\">Tooltip!</Tooltip>}\r\n              >\r\n                <span className=\"d-inline-block\">\r\n                  <Button disabled style={{ pointerEvents: \"none\" }}>\r\n                    Disabled button\r\n                  </Button>\r\n                </span>\r\n              </OverlayTrigger>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample\r\n              jsCode={jsCode7}\r\n              beforeCodeTitle=\"Updating position dynamically\"\r\n            >\r\n              <span>\r\n                Since we can't know every time your overlay changes size, to\r\n                reposition it, you need to take manual action if you want to\r\n                update the position of an Overlay in response to a change.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <Example5 />\r\n            </KTCodeExample>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <KTCodeExample jsCode={jsCode2} beforeCodeTitle=\"OverlayTrigger\">\r\n              <span>\r\n                Since the above pattern is pretty common, but verbose, we've\r\n                included <code>&lt;OverlayTrigger&gt;</code> component to help\r\n                with common use-cases. It even has functionality to delayed show\r\n                or hides, and a few different \"trigger\" events you can mix and\r\n                match.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <Example1 />\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample\r\n              jsCode={jsCode6}\r\n              beforeCodeTitle=\"Changing containers\"\r\n            >\r\n              <span>\r\n                You can specify a <code>container</code> to control the DOM\r\n                element the overlay is appended to. This is especially useful\r\n                when styles conflict with your Overlay's.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <Example4 />\r\n            </KTCodeExample>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst jsCode1 = `\r\nclass Example extends React.Component {\r\n  constructor(...args) {\r\n    super(...args);\r\n\r\n    this.attachRef = target => this.setState({ target });\r\n    this.state = {\r\n      show: false,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { show, target } = this.state;\r\n    return (\r\n      <>\r\n        <Button\r\n          variant=\"danger\"\r\n          ref={this.attachRef}\r\n          onClick={() => this.setState({ show: !show })}\r\n        >\r\n          Click me to see\r\n        </Button>\r\n        <Overlay target={target} show={show} placement=\"right\">\r\n          {({\r\n            placement,\r\n            scheduleUpdate,\r\n            arrowProps,\r\n            outOfBoundaries,\r\n            show: _show,\r\n            ...props\r\n          }) => (\r\n            <div\r\n              {...props}\r\n              style={{\r\n                backgroundColor: 'rgba(255, 100, 100, 0.85)',\r\n                padding: '2px 10px',\r\n                color: 'white',\r\n                borderRadius: 3,\r\n                ...props.style,\r\n              }}\r\n            >\r\n              Simple tooltip\r\n            </div>\r\n          )}\r\n        </Overlay>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nrender(<Example />);\r\n`;\r\nconst jsCode2 = `\r\nconst renderTooltip = props => (\r\n  <div\r\n    {...props}\r\n    style={{\r\n      backgroundColor: 'rgba(0, 0, 0, 0.85)',\r\n      padding: '2px 10px',\r\n      color: 'white',\r\n      borderRadius: 3,\r\n      ...props.style,\r\n    }}\r\n  >\r\n    Simple tooltip\r\n  </div>\r\n);\r\n\r\nconst Example = () => (\r\n  <OverlayTrigger\r\n    placement=\"right-start\"\r\n    delay={{ show: 250, hide: 400 }}\r\n    overlay={renderTooltip}\r\n  >\r\n    <Button variant=\"success\">Hover me to see</Button>\r\n  </OverlayTrigger>\r\n);\r\n\r\nrender(<Example />);\r\n`;\r\nconst jsCode3 = `\r\nclass Example extends React.Component {\r\n  constructor(...args) {\r\n    super(...args);\r\n\r\n    this.attachRef = target => this.setState({ target });\r\n    this.state = { show: false };\r\n  }\r\n\r\n  render() {\r\n    const { show, target } = this.state;\r\n    return (\r\n      <>\r\n        <Button\r\n          ref={this.attachRef}\r\n          onClick={() => this.setState({ show: !show })}\r\n        >\r\n          Click me!\r\n        </Button>\r\n        <Overlay target={target} show={show} placement=\"right\">\r\n          {props => (\r\n            <Tooltip id=\"overlay-example\" {...props}>\r\n              My Tooltip\r\n            </Tooltip>\r\n          )}\r\n        </Overlay>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nrender(<Example />);\r\n`;\r\nconst jsCode4 = `\r\nconst popover = (\r\n  <Popover id=\"popover-basic\" title=\"Popover right\">\r\n    And here's some <strong>amazing</strong> content. It's very engaging. right?\r\n  </Popover>\r\n);\r\n\r\nconst Example = () => (\r\n  <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={popover}>\r\n    <Button variant=\"success\">Click me to see</Button>\r\n  </OverlayTrigger>\r\n);\r\n\r\nrender(<Example />);\r\n`;\r\nconst jsCode5 = `\r\n<OverlayTrigger overlay={<Tooltip id=\"tooltip-disabled\">Tooltip!</Tooltip>}>\r\n  <span className=\"d-inline-block\">\r\n    <Button disabled style={{ pointerEvents: 'none' }}>\r\n      Disabled button\r\n    </Button>\r\n  </span>\r\n</OverlayTrigger>\r\n`;\r\nconst jsCode6 = `\r\nclass Example extends React.Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.handleClick = ({ target }) => {\r\n      this.setState(s => ({ target, show: !s.show }));\r\n    };\r\n\r\n    this.state = {\r\n      show: false,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ButtonToolbar>\r\n        <Button onClick={this.handleClick}>Holy guacamole!</Button>\r\n\r\n        <Overlay\r\n          show={this.state.show}\r\n          target={this.state.target}\r\n          placement=\"bottom\"\r\n          container={this}\r\n          containerPadding={20}\r\n        >\r\n          <Popover id=\"popover-contained\" title=\"Popover bottom\">\r\n            <strong>Holy guacamole!</strong> Check this info.\r\n          </Popover>\r\n        </Overlay>\r\n      </ButtonToolbar>\r\n    );\r\n  }\r\n}\r\n\r\nrender(<Example />);\r\n`;\r\nconst jsCode7 = `\r\nclass UpdatingPopover extends React.Component {\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.children !== this.props.children) {\r\n      console.log('updating!');\r\n      this.props.scheduleUpdate();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <Popover {...this.props} />;\r\n  }\r\n}\r\n\r\nconst longContent = \\`\r\n  Very long\r\n  Multiline content\r\n  that is engaging and what-not\r\n\\`;\r\nconst shortContent = 'Short and sweet!';\r\n\r\nclass Example extends React.Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    this.state = { content: shortContent };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.timer = setInterval(() => {\r\n      this.setState(state => ({\r\n        content: state.content === shortContent ? longContent : shortContent,\r\n      }));\r\n    }, 3000);\r\n  }\r\n\r\n  render() {\r\n    const { content } = this.state;\r\n\r\n    return (\r\n      <OverlayTrigger\r\n        trigger=\"click\"\r\n        overlay={\r\n          <UpdatingPopover id=\"popover-contained\">{content}</UpdatingPopover>\r\n        }\r\n      >\r\n        <Button onClick={this.handleClick}>Holy guacamole!</Button>\r\n      </OverlayTrigger>\r\n    );\r\n  }\r\n}\r\n\r\nrender(<Example />);\r\n`;\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Popover,\r\n  OverlayTrigger,\r\n  ButtonToolbar\r\n} from \"react-bootstrap\";\r\nimport {Notice, KTCodeExample} from \"../../../_metronic/_partials/controls\";\r\n\r\nconst popover = (\r\n  <Popover id=\"popover-basic\" title=\"Popover right\">\r\n    And here's some <strong>amazing</strong> content. It's very engaging. right?\r\n  </Popover>\r\n);\r\n\r\nconst Example = () => (\r\n  <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={popover}>\r\n    <Button variant=\"success\">Click me to see</Button>\r\n  </OverlayTrigger>\r\n);\r\n\r\nexport default class PopoversExamplesPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Notice icon=\"flaticon-warning font-primary\">\r\n          <span>A popover component, like those found in iOS.</span>{\" \"}\r\n          <span>\r\n            For more info please check the components's official{\" \"}\r\n            <a\r\n              target=\"_blank\"\r\n              className=\"font-weight-bold\"\r\n              rel=\"noopener noreferrer\"\r\n              href=\"https://react-bootstrap.github.io/components/overlays/#popovers\"\r\n            >\r\n              demos & documentation\r\n            </a>\r\n          </span>\r\n        </Notice>\r\n\r\n        <KTCodeExample jsCode={jsCode1} beforeCodeTitle=\"Basic Example\">\r\n          <Example />\r\n        </KTCodeExample>\r\n\r\n        <KTCodeExample jsCode={jsCode2} beforeCodeTitle=\"Placement\">\r\n          <span>You can control the placement of the Popover.</span>\r\n          <div className=\"separator separator-dashed my-7\"></div>\r\n          <ButtonToolbar>\r\n            {[\"top\", \"right\", \"bottom\", \"left\"].map(placement => (\r\n              <span key={`sp ${placement}`}>\r\n                <OverlayTrigger\r\n                  trigger=\"click\"\r\n                  key={placement}\r\n                  placement={placement}\r\n                  overlay={\r\n                    <Popover\r\n                      id={`popover-positioned-${placement}`}\r\n                      title={`Popover ${placement}`}\r\n                    >\r\n                      <strong>Holy guacamole!</strong> Check this info.\r\n                    </Popover>\r\n                  }\r\n                >\r\n                  <Button variant=\"secondary\">Popover on {placement}</Button>\r\n                </OverlayTrigger>\r\n                <span>&nbsp;</span>\r\n              </span>\r\n            ))}\r\n          </ButtonToolbar>\r\n        </KTCodeExample>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst jsCode1 = `\r\nconst popover = (\r\n  <Popover id=\"popover-basic\" title=\"Popover right\">\r\n    And here's some <strong>amazing</strong> content. It's very engaging. right?\r\n  </Popover>\r\n);\r\n\r\nconst Example = () => (\r\n  <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={popover}>\r\n    <Button variant=\"success\">Click me to see</Button>\r\n  </OverlayTrigger>\r\n);\r\n\r\nrender(<Example />);\r\n`;\r\nconst jsCode2 = `\r\n<ButtonToolbar>\r\n  {['top', 'right', 'bottom', 'left'].map(placement => (\r\n    <OverlayTrigger\r\n      trigger=\"click\"\r\n      key={placement}\r\n      placement={placement}\r\n      overlay={\r\n        <Popover\r\n          id={\\`popover-positioned-\\${placement}\\`}\r\n          title={\\`Popover \\${placement}\\`}\r\n        >\r\n          <strong>Holy guacamole!</strong> Check this info.\r\n        </Popover>\r\n      }\r\n    >\r\n      <Button variant=\"secondary\">Popover on {placement}</Button>\r\n    </OverlayTrigger>\r\n  ))}\r\n</ButtonToolbar>\r\n`;\r\n","import React from \"react\";\r\nimport {ProgressBar} from \"react-bootstrap\";\r\nimport {Notice, KTCodeExample} from \"../../../_metronic/_partials/controls\";\r\n\r\nconst now = 60;\r\nconst progressInstance = <ProgressBar now={now} label={`${now}%`} />;\r\nconst progressInstance1 = <ProgressBar now={now} label={`${now}%`} srOnly />;\r\n\r\nexport default class ProgressExamplesPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Notice icon=\"flaticon-warning font-primary\">\r\n          <span>\r\n            Provide up-to-date feedback on the progress of a workflow or action\r\n            with simple yet flexible progress bars.\r\n          </span>{\" \"}\r\n          <span>\r\n            For more info please check the components's official{\" \"}\r\n            <a\r\n              target=\"_blank\"\r\n              className=\"font-weight-bold\"\r\n              rel=\"noopener noreferrer\"\r\n              href=\"https://react-bootstrap.github.io/components/progress/\"\r\n            >\r\n              demos & documentation\r\n            </a>\r\n          </span>\r\n        </Notice>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <KTCodeExample jsCode={jsCode1} beforeCodeTitle=\"Basic Example\">\r\n              <span>Default progress bar.</span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <ProgressBar now={60} />\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample\r\n              jsCode={jsCode3}\r\n              beforeCodeTitle=\"Screenreader only label\"\r\n            >\r\n              <span>\r\n                Add a <code>srOnly</code> prop to hide the label visually.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              {progressInstance1}\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode5} beforeCodeTitle=\"Striped\">\r\n              <span>\r\n                Uses a gradient to create a striped effect. Not available in\r\n                IE8.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <div>\r\n                <ProgressBar\r\n                  striped\r\n                  variant=\"success\"\r\n                  now={40}\r\n                  className=\"gutter-b\"\r\n                />\r\n                <ProgressBar\r\n                  striped\r\n                  variant=\"info\"\r\n                  now={20}\r\n                  className=\"gutter-b\"\r\n                />\r\n                <ProgressBar\r\n                  striped\r\n                  variant=\"warning\"\r\n                  now={60}\r\n                  className=\"gutter-b\"\r\n                />\r\n                <ProgressBar\r\n                  striped\r\n                  variant=\"danger\"\r\n                  now={80}\r\n                  className=\"gutter-b\"\r\n                />\r\n              </div>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode7} beforeCodeTitle=\"Stacked\">\r\n              <span>\r\n                Nest <code>&lt;ProgressBar /&gt;</code>s to stack them.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <div>\r\n                <ProgressBar\r\n                  striped\r\n                  variant=\"success\"\r\n                  now={40}\r\n                  className=\"gutter-b\"\r\n                />\r\n                <ProgressBar\r\n                  striped\r\n                  variant=\"info\"\r\n                  now={20}\r\n                  className=\"gutter-b\"\r\n                />\r\n                <ProgressBar\r\n                  striped\r\n                  variant=\"warning\"\r\n                  now={60}\r\n                  className=\"gutter-b\"\r\n                />\r\n                <ProgressBar\r\n                  striped\r\n                  variant=\"danger\"\r\n                  now={80}\r\n                  className=\"gutter-b\"\r\n                />\r\n              </div>\r\n            </KTCodeExample>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <KTCodeExample jsCode={jsCode2} beforeCodeTitle=\"With label\">\r\n              <span>\r\n                Add a <code>label</code> prop to show a visible percentage. For\r\n                low percentages, consider adding a min-width to ensure the\r\n                label's text is fully visible.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              {progressInstance}\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample\r\n              jsCode={jsCode4}\r\n              beforeCodeTitle=\"Contextual alternatives\"\r\n            >\r\n              <span>\r\n                Progress bars use some of the same button and alert classes for\r\n                consistent styles.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <div>\r\n                <ProgressBar variant=\"success\" now={40} className=\"gutter-b\" />\r\n                <ProgressBar variant=\"info\" now={20} className=\"gutter-b\" />\r\n                <ProgressBar variant=\"warning\" now={60} className=\"gutter-b\" />\r\n                <ProgressBar variant=\"danger\" now={80} className=\"gutter-b\" />\r\n              </div>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode6} beforeCodeTitle=\"Animated\">\r\n              <span>\r\n                Add <code>animated</code> prop to animate the stripes right to\r\n                left. Not available in IE9 and below.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <ProgressBar animated now={45} />\r\n            </KTCodeExample>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst jsCode1 = `\r\n<ProgressBar now={60} />\r\n`;\r\nconst jsCode2 = `\r\nconst now = 60;\r\n\r\nconst progressInstance = <ProgressBar now={now} label={\\`\\${now}%\\`} />;\r\n\r\nrender(progressInstance);\r\n`;\r\nconst jsCode3 = `\r\nconst now = 60;\r\n\r\nconst progressInstance = <ProgressBar now={now} label={\\`\\${now}%\\`} srOnly />;\r\n\r\nrender(progressInstance);\r\n`;\r\nconst jsCode4 = `\r\n<div>\r\n  <ProgressBar variant=\"success\" now={40} />\r\n  <ProgressBar variant=\"info\" now={20} />\r\n  <ProgressBar variant=\"warning\" now={60} />\r\n  <ProgressBar variant=\"danger\" now={80} />\r\n</div>\r\n`;\r\nconst jsCode5 = `\r\n<div>\r\n  <ProgressBar striped variant=\"success\" now={40} />\r\n  <ProgressBar striped variant=\"info\" now={20} />\r\n  <ProgressBar striped variant=\"warning\" now={60} />\r\n  <ProgressBar striped variant=\"danger\" now={80} />\r\n</div>\r\n`;\r\nconst jsCode6 = `\r\n<ProgressBar animated now={45} />\r\n`;\r\nconst jsCode7 = `\r\n<ProgressBar>\r\n  <ProgressBar striped variant=\"success\" now={35} key={1} />\r\n  <ProgressBar variant=\"warning\" now={20} key={2} />\r\n  <ProgressBar striped variant=\"danger\" now={10} key={3} />\r\n</ProgressBar>\r\n`;\r\n","import React from \"react\";\r\nimport {Spinner, Button, ButtonToolbar} from \"react-bootstrap\";\r\nimport {Notice, KTCodeExample} from \"../../../_metronic/_partials/controls\";\r\n\r\nexport default class SpinnersExamplesPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Notice icon=\"flaticon-warning font-primary\">\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"font-weight-bold\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://react-bootstrap.github.io/components/spinners/\"\r\n          >\r\n            demos & documentation.\r\n          </a>\r\n        </Notice>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <KTCodeExample jsCode={jsCode1} beforeCodeTitle=\"Spinners\">\r\n              <span>\r\n                Spinners can be used to show the loading state in your projects.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\" />\r\n              <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </Spinner>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode3} beforeCodeTitle=\"Variants\">\r\n              <span>\r\n                All standard visual variants are available for both animation\r\n                styles by setting the <code>variant</code> property.\r\n                Alternatively spinners can be custom sized with the{\" \"}\r\n                <code>style</code> property, or custom CSS classes.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\" />\r\n              <div>\r\n                <span className=\"pr-4\">\r\n                  <Spinner animation=\"border\" variant=\"primary\" />\r\n                </span>\r\n                <span className=\"pr-4\">\r\n                  <Spinner animation=\"border\" variant=\"secondary\" />\r\n                </span>\r\n                <span className=\"pr-4\">\r\n                  <Spinner animation=\"border\" variant=\"success\" />\r\n                </span>\r\n                <span className=\"pr-4\">\r\n                  <Spinner animation=\"border\" variant=\"danger\" />\r\n                </span>\r\n                <span className=\"pr-4\">\r\n                  <Spinner animation=\"border\" variant=\"warning\" />\r\n                </span>\r\n                <span className=\"pr-4\">\r\n                  <Spinner animation=\"border\" variant=\"info\" />\r\n                </span>\r\n                <span className=\"pr-4\">\r\n                  <Spinner animation=\"border\" variant=\"light\" />\r\n                </span>\r\n                <span className=\"pr-4\">\r\n                  <Spinner animation=\"border\" variant=\"dark\" />\r\n                </span>\r\n              </div>\r\n              <div>\r\n                <span className=\"pr-4\">\r\n                  <Spinner animation=\"grow\" variant=\"primary\" />\r\n                </span>\r\n                <span className=\"pr-4\">\r\n                  <Spinner animation=\"grow\" variant=\"secondary\" />\r\n                </span>\r\n                <span className=\"pr-4\">\r\n                  <Spinner animation=\"grow\" variant=\"success\" />\r\n                </span>\r\n                <span className=\"pr-4\">\r\n                  <Spinner animation=\"grow\" variant=\"danger\" />\r\n                </span>\r\n                <span className=\"pr-4\">\r\n                  <Spinner animation=\"grow\" variant=\"warning\" />\r\n                </span>\r\n                <span className=\"pr-4\">\r\n                  <Spinner animation=\"grow\" variant=\"info\" />\r\n                </span>\r\n                <span className=\"pr-4\">\r\n                  <Spinner animation=\"grow\" variant=\"light\" />\r\n                </span>\r\n                <span className=\"pr-4\">\r\n                  <Spinner animation=\"grow\" variant=\"dark\" />\r\n                </span>\r\n              </div>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode5} beforeCodeTitle=\"Buttons\">\r\n              <span>\r\n                Like the original Bootstrap spinners, these can also be used\r\n                with buttons. To use this component out-of-the-box it is\r\n                recommended you change the element type to <code>span</code> by\r\n                configuring the <code>as</code> property when using spinners\r\n                inside buttons.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\" />\r\n              <ButtonToolbar>\r\n                <Button variant=\"primary\" disabled>\r\n                  <Spinner\r\n                    as=\"span\"\r\n                    animation=\"border\"\r\n                    size=\"sm\"\r\n                    role=\"status\"\r\n                    aria-hidden=\"true\"\r\n                  />\r\n                  <span className=\"sr-only\">Loading...</span>\r\n                </Button>\r\n                &nbsp;\r\n                <Button variant=\"primary\" disabled>\r\n                  <Spinner\r\n                    as=\"span\"\r\n                    animation=\"grow\"\r\n                    size=\"sm\"\r\n                    role=\"status\"\r\n                    aria-hidden=\"true\"\r\n                  />\r\n                  Loading...\r\n                </Button>\r\n              </ButtonToolbar>\r\n            </KTCodeExample>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <KTCodeExample jsCode={jsCode2} beforeCodeTitle=\"Animations\">\r\n              <span>\r\n                Bootstrap offers two animation styles for spinners. The\r\n                animation style can be configured with the{\" \"}\r\n                <code>animation</code> property. An animation style must always\r\n                be provided when creating a spinner.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\" />\r\n              <Spinner animation=\"grow\" />\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode4} beforeCodeTitle=\"Sizing\">\r\n              <span>\r\n                In addition to the standard size, a smaller additional\r\n                preconfigured size is available by configuring the{\" \"}\r\n                <code>size</code> property to <code>sm</code>.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\" />\r\n              <>\r\n                <span className=\"pr-4\">\r\n                  <Spinner animation=\"border\" size=\"sm\" />\r\n                </span>\r\n                <span className=\"pr-4\">\r\n                  <Spinner animation=\"border\" />\r\n                </span>\r\n                <span className=\"pr-4\">\r\n                  <Spinner animation=\"grow\" size=\"sm\" />\r\n                </span>\r\n                <span className=\"pr-4\">\r\n                  <Spinner animation=\"grow\" />\r\n                </span>\r\n              </>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode6} beforeCodeTitle=\"Accessibility\">\r\n              <span>\r\n                To ensure the maximum accessibility for spinner components it is\r\n                recommended you provide a relevant ARIA <code>role</code>{\" \"}\r\n                property, and include screenreader-only readable text\r\n                representation of the spinner's meaning inside the component\r\n                using Bootstrap's <code>sr-only</code> class.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\" />\r\n              <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </Spinner>\r\n            </KTCodeExample>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst jsCode1 = `\r\n<Spinner animation=\"border\" role=\"status\">\r\n  <span className=\"sr-only\">Loading...</span>\r\n</Spinner>\r\n`;\r\nconst jsCode2 = `\r\n<Spinner animation=\"grow\" />\r\n`;\r\nconst jsCode3 = `\r\n<>\r\n  <Spinner animation=\"border\" variant=\"primary\" />\r\n  <Spinner animation=\"border\" variant=\"secondary\" />\r\n  <Spinner animation=\"border\" variant=\"success\" />\r\n  <Spinner animation=\"border\" variant=\"danger\" />\r\n  <Spinner animation=\"border\" variant=\"warning\" />\r\n  <Spinner animation=\"border\" variant=\"info\" />\r\n  <Spinner animation=\"border\" variant=\"light\" />\r\n  <Spinner animation=\"border\" variant=\"dark\" />\r\n  <Spinner animation=\"grow\" variant=\"primary\" />\r\n  <Spinner animation=\"grow\" variant=\"secondary\" />\r\n  <Spinner animation=\"grow\" variant=\"success\" />\r\n  <Spinner animation=\"grow\" variant=\"danger\" />\r\n  <Spinner animation=\"grow\" variant=\"warning\" />\r\n  <Spinner animation=\"grow\" variant=\"info\" />\r\n  <Spinner animation=\"grow\" variant=\"light\" />\r\n  <Spinner animation=\"grow\" variant=\"dark\" />\r\n</>\r\n`;\r\nconst jsCode4 = `\r\n<>\r\n  <Spinner animation=\"border\" size=\"sm\" />\r\n  <Spinner animation=\"border\" />\r\n  <Spinner animation=\"grow\" size=\"sm\" />\r\n  <Spinner animation=\"grow\" />\r\n</>\r\n`;\r\nconst jsCode5 = `\r\n<ButtonToolbar>\r\n  <Button variant=\"primary\" disabled>\r\n    <Spinner\r\n      as=\"span\"\r\n      animation=\"border\"\r\n      size=\"sm\"\r\n      role=\"status\"\r\n      aria-hidden=\"true\"\r\n    />\r\n    <span className=\"sr-only\">Loading...</span>\r\n  </Button>\r\n  <Button variant=\"primary\" disabled>\r\n    <Spinner\r\n      as=\"span\"\r\n      animation=\"grow\"\r\n      size=\"sm\"\r\n      role=\"status\"\r\n      aria-hidden=\"true\"\r\n    />\r\n    Loading...\r\n  </Button>\r\n</ButtonToolbar>\r\n`;\r\nconst jsCode6 = `\r\n<Spinner animation=\"border\" role=\"status\">\r\n  <span className=\"sr-only\">Loading...</span>\r\n</Spinner>\r\n`;\r\n","import React from \"react\";\r\nimport {Table} from \"react-bootstrap\";\r\nimport {Notice, KTCodeExample} from \"../../../_metronic/_partials/controls\";\r\n\r\nexport default class TableExamplesPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Notice icon=\"flaticon-warning font-primary\">\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"font-weight-bold\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://react-bootstrap.github.io/components/table/\"\r\n          >\r\n            demos & documentation.\r\n          </a>\r\n        </Notice>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <KTCodeExample\r\n              jsCode={jsCode1}\r\n              beforeCodeTitle=\"Basic Example\"\r\n              codeBlockHeight=\"400px\"\r\n            >\r\n              <span>\r\n                Use the <code>striped</code>, <code>bordered</code> and{\" \"}\r\n                <code>hover</code> props to customise the table.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <Table striped bordered hover>\r\n                <thead>\r\n                  <tr>\r\n                    <th>#</th>\r\n                    <th>First Name</th>\r\n                    <th>Last Name</th>\r\n                    <th>Username</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr>\r\n                    <td>1</td>\r\n                    <td>Mark</td>\r\n                    <td>Otto</td>\r\n                    <td>@mdo</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>2</td>\r\n                    <td>Jacob</td>\r\n                    <td>Thornton</td>\r\n                    <td>@fat</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>3</td>\r\n                    <td colSpan=\"2\">Larry the Bird</td>\r\n                    <td>@twitter</td>\r\n                  </tr>\r\n                </tbody>\r\n              </Table>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample\r\n              jsCode={jsCode3}\r\n              beforeCodeTitle=\"Dark Table\"\r\n              codeBlockHeight=\"400px\"\r\n            >\r\n              <span>\r\n                Use <code>variant=\"dark\"</code> to invert the colors of the\r\n                table and get light text on a dark background.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <Table striped bordered hover variant=\"dark\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>#</th>\r\n                    <th>First Name</th>\r\n                    <th>Last Name</th>\r\n                    <th>Username</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr>\r\n                    <td>1</td>\r\n                    <td>Mark</td>\r\n                    <td>Otto</td>\r\n                    <td>@mdo</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>2</td>\r\n                    <td>Jacob</td>\r\n                    <td>Thornton</td>\r\n                    <td>@fat</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>3</td>\r\n                    <td colSpan=\"2\">Larry the Bird</td>\r\n                    <td>@twitter</td>\r\n                  </tr>\r\n                </tbody>\r\n              </Table>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample\r\n              jsCode={jsCode5}\r\n              beforeCodeTitle=\"Breakpoint specific\"\r\n              codeBlockHeight=\"400px\"\r\n            >\r\n              <span>\r\n                Use <code>responsive=\"sm\"</code>, <code>responsive=\"md\"</code>,{\" \"}\r\n                <code>responsive=\"lg\"</code>, or <code>responsive=\"xl\"</code> as\r\n                needed to create responsive tables up to a particular\r\n                breakpoint. From that breakpoint and up, the table will behave\r\n                normally and not scroll horizontally.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <div>\r\n                <Table responsive=\"sm\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>#</th>\r\n                      <th>Table heading</th>\r\n                      <th>Table heading</th>\r\n                      <th>Table heading</th>\r\n                      <th>Table heading</th>\r\n                      <th>Table heading</th>\r\n                      <th>Table heading</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>1</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>2</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>3</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </Table>\r\n                <Table responsive=\"md\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>#</th>\r\n                      <th>Table heading</th>\r\n                      <th>Table heading</th>\r\n                      <th>Table heading</th>\r\n                      <th>Table heading</th>\r\n                      <th>Table heading</th>\r\n                      <th>Table heading</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>1</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>2</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>3</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </Table>\r\n                <Table responsive=\"lg\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>#</th>\r\n                      <th>Table heading</th>\r\n                      <th>Table heading</th>\r\n                      <th>Table heading</th>\r\n                      <th>Table heading</th>\r\n                      <th>Table heading</th>\r\n                      <th>Table heading</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>1</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>2</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>3</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </Table>\r\n                <Table responsive=\"xl\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>#</th>\r\n                      <th>Table heading</th>\r\n                      <th>Table heading</th>\r\n                      <th>Table heading</th>\r\n                      <th>Table heading</th>\r\n                      <th>Table heading</th>\r\n                      <th>Table heading</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>1</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>2</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>3</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </Table>\r\n              </div>\r\n            </KTCodeExample>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <KTCodeExample\r\n              jsCode={jsCode2}\r\n              beforeCodeTitle=\"Small Table\"\r\n              codeBlockHeight=\"400px\"\r\n            >\r\n              <span>\r\n                Use <code>size=\"sm\"</code> to make tables compact by cutting\r\n                cell padding in half.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <Table striped bordered hover size=\"sm\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>#</th>\r\n                    <th>First Name</th>\r\n                    <th>Last Name</th>\r\n                    <th>Username</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr>\r\n                    <td>1</td>\r\n                    <td>Mark</td>\r\n                    <td>Otto</td>\r\n                    <td>@mdo</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>2</td>\r\n                    <td>Jacob</td>\r\n                    <td>Thornton</td>\r\n                    <td>@fat</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>3</td>\r\n                    <td colSpan=\"2\">Larry the Bird</td>\r\n                    <td>@twitter</td>\r\n                  </tr>\r\n                </tbody>\r\n              </Table>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample\r\n              jsCode={jsCode4}\r\n              beforeCodeTitle=\"Always Responsive\"\r\n              codeBlockHeight=\"400px\"\r\n            >\r\n              <span>\r\n                Across every breakpoint, use <code>responsive</code> for\r\n                horizontally scrolling tables. Responsive tables are wrapped\r\n                automatically in a <code>div</code>.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <Table responsive>\r\n                <thead>\r\n                  <tr>\r\n                    <th>#</th>\r\n                    <th>Table heading</th>\r\n                    <th>Table heading</th>\r\n                    <th>Table heading</th>\r\n                    <th>Table heading</th>\r\n                    <th>Table heading</th>\r\n                    <th>Table heading</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr>\r\n                    <td>1</td>\r\n                    <td>Table cell</td>\r\n                    <td>Table cell</td>\r\n                    <td>Table cell</td>\r\n                    <td>Table cell</td>\r\n                    <td>Table cell</td>\r\n                    <td>Table cell</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>2</td>\r\n                    <td>Table cell</td>\r\n                    <td>Table cell</td>\r\n                    <td>Table cell</td>\r\n                    <td>Table cell</td>\r\n                    <td>Table cell</td>\r\n                    <td>Table cell</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>3</td>\r\n                    <td>Table cell</td>\r\n                    <td>Table cell</td>\r\n                    <td>Table cell</td>\r\n                    <td>Table cell</td>\r\n                    <td>Table cell</td>\r\n                    <td>Table cell</td>\r\n                  </tr>\r\n                </tbody>\r\n              </Table>\r\n            </KTCodeExample>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst jsCode1 = `\r\n<Table striped bordered hover>\r\n  <thead>\r\n    <tr>\r\n      <th>#</th>\r\n      <th>First Name</th>\r\n      <th>Last Name</th>\r\n      <th>Username</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr>\r\n      <td>1</td>\r\n      <td>Mark</td>\r\n      <td>Otto</td>\r\n      <td>@mdo</td>\r\n    </tr>\r\n    <tr>\r\n      <td>2</td>\r\n      <td>Jacob</td>\r\n      <td>Thornton</td>\r\n      <td>@fat</td>\r\n    </tr>\r\n    <tr>\r\n      <td>3</td>\r\n      <td colSpan=\"2\">Larry the Bird</td>\r\n      <td>@twitter</td>\r\n    </tr>\r\n  </tbody>\r\n</Table>\r\n`;\r\nconst jsCode2 = `\r\n<Table striped bordered hover size=\"sm\">\r\n  <thead>\r\n    <tr>\r\n      <th>#</th>\r\n      <th>First Name</th>\r\n      <th>Last Name</th>\r\n      <th>Username</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr>\r\n      <td>1</td>\r\n      <td>Mark</td>\r\n      <td>Otto</td>\r\n      <td>@mdo</td>\r\n    </tr>\r\n    <tr>\r\n      <td>2</td>\r\n      <td>Jacob</td>\r\n      <td>Thornton</td>\r\n      <td>@fat</td>\r\n    </tr>\r\n    <tr>\r\n      <td>3</td>\r\n      <td colSpan=\"2\">Larry the Bird</td>\r\n      <td>@twitter</td>\r\n    </tr>\r\n  </tbody>\r\n</Table>\r\n`;\r\nconst jsCode3 = `\r\n<Table striped bordered hover variant=\"dark\">\r\n  <thead>\r\n    <tr>\r\n      <th>#</th>\r\n      <th>First Name</th>\r\n      <th>Last Name</th>\r\n      <th>Username</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr>\r\n      <td>1</td>\r\n      <td>Mark</td>\r\n      <td>Otto</td>\r\n      <td>@mdo</td>\r\n    </tr>\r\n    <tr>\r\n      <td>2</td>\r\n      <td>Jacob</td>\r\n      <td>Thornton</td>\r\n      <td>@fat</td>\r\n    </tr>\r\n    <tr>\r\n      <td>3</td>\r\n      <td colSpan=\"2\">Larry the Bird</td>\r\n      <td>@twitter</td>\r\n    </tr>\r\n  </tbody>\r\n</Table>\r\n`;\r\nconst jsCode4 = `\r\n<Table responsive>\r\n  <thead>\r\n    <tr>\r\n      <th>#</th>\r\n      <th>Table heading</th>\r\n      <th>Table heading</th>\r\n      <th>Table heading</th>\r\n      <th>Table heading</th>\r\n      <th>Table heading</th>\r\n      <th>Table heading</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr>\r\n      <td>1</td>\r\n      <td>Table cell</td>\r\n      <td>Table cell</td>\r\n      <td>Table cell</td>\r\n      <td>Table cell</td>\r\n      <td>Table cell</td>\r\n      <td>Table cell</td>\r\n    </tr>\r\n    <tr>\r\n      <td>2</td>\r\n      <td>Table cell</td>\r\n      <td>Table cell</td>\r\n      <td>Table cell</td>\r\n      <td>Table cell</td>\r\n      <td>Table cell</td>\r\n      <td>Table cell</td>\r\n    </tr>\r\n    <tr>\r\n      <td>3</td>\r\n      <td>Table cell</td>\r\n      <td>Table cell</td>\r\n      <td>Table cell</td>\r\n      <td>Table cell</td>\r\n      <td>Table cell</td>\r\n      <td>Table cell</td>\r\n    </tr>\r\n  </tbody>\r\n</Table>\r\n`;\r\nconst jsCode5 = `\r\n<div>\r\n  <Table responsive=\"sm\">\r\n    <thead>\r\n      <tr>\r\n        <th>#</th>\r\n        <th>Table heading</th>\r\n        <th>Table heading</th>\r\n        <th>Table heading</th>\r\n        <th>Table heading</th>\r\n        <th>Table heading</th>\r\n        <th>Table heading</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td>1</td>\r\n        <td>Table cell</td>\r\n        <td>Table cell</td>\r\n        <td>Table cell</td>\r\n        <td>Table cell</td>\r\n        <td>Table cell</td>\r\n        <td>Table cell</td>\r\n      </tr>\r\n      <tr>\r\n        <td>2</td>\r\n        <td>Table cell</td>\r\n        <td>Table cell</td>\r\n        <td>Table cell</td>\r\n        <td>Table cell</td>\r\n        <td>Table cell</td>\r\n        <td>Table cell</td>\r\n      </tr>\r\n      <tr>\r\n        <td>3</td>\r\n        <td>Table cell</td>\r\n        <td>Table cell</td>\r\n        <td>Table cell</td>\r\n        <td>Table cell</td>\r\n        <td>Table cell</td>\r\n        <td>Table cell</td>\r\n      </tr>\r\n    </tbody>\r\n  </Table>\r\n  <Table responsive=\"md\">\r\n    <thead>\r\n      <tr>\r\n        <th>#</th>\r\n        <th>Table heading</th>\r\n        <th>Table heading</th>\r\n        <th>Table heading</th>\r\n        <th>Table heading</th>\r\n        <th>Table heading</th>\r\n        <th>Table heading</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td>1</td>\r\n        <td>Table cell</td>\r\n        <td>Table cell</td>\r\n        <td>Table cell</td>\r\n        <td>Table cell</td>\r\n        <td>Table cell</td>\r\n        <td>Table cell</td>\r\n      </tr>\r\n      <tr>\r\n        <td>2</td>\r\n        <td>Table cell</td>\r\n        <td>Table cell</td>\r\n        <td>Table cell</td>\r\n        <td>Table cell</td>\r\n        <td>Table cell</td>\r\n        <td>Table cell</td>\r\n      </tr>\r\n      <tr>\r\n        <td>3</td>\r\n        <td>Table cell</td>\r\n        <td>Table cell</td>\r\n        <td>Table cell</td>\r\n        <td>Table cell</td>\r\n        <td>Table cell</td>\r\n        <td>Table cell</td>\r\n      </tr>\r\n    </tbody>\r\n  </Table>\r\n  <Table responsive=\"lg\">\r\n    <thead>\r\n      <tr>\r\n        <th>#</th>\r\n        <th>Table heading</th>\r\n        <th>Table heading</th>\r\n        <th>Table heading</th>\r\n        <th>Table heading</th>\r\n        <th>Table heading</th>\r\n        <th>Table heading</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td>1</td>\r\n        <td>Table cell</td>\r\n        <td>Table cell</td>\r\n        <td>Table cell</td>\r\n        <td>Table cell</td>\r\n        <td>Table cell</td>\r\n        <td>Table cell</td>\r\n      </tr>\r\n      <tr>\r\n        <td>2</td>\r\n        <td>Table cell</td>\r\n        <td>Table cell</td>\r\n        <td>Table cell</td>\r\n        <td>Table cell</td>\r\n        <td>Table cell</td>\r\n        <td>Table cell</td>\r\n      </tr>\r\n      <tr>\r\n        <td>3</td>\r\n        <td>Table cell</td>\r\n        <td>Table cell</td>\r\n        <td>Table cell</td>\r\n        <td>Table cell</td>\r\n        <td>Table cell</td>\r\n        <td>Table cell</td>\r\n      </tr>\r\n    </tbody>\r\n  </Table>\r\n  <Table responsive=\"xl\">\r\n    <thead>\r\n      <tr>\r\n        <th>#</th>\r\n        <th>Table heading</th>\r\n        <th>Table heading</th>\r\n        <th>Table heading</th>\r\n        <th>Table heading</th>\r\n        <th>Table heading</th>\r\n        <th>Table heading</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td>1</td>\r\n        <td>Table cell</td>\r\n        <td>Table cell</td>\r\n        <td>Table cell</td>\r\n        <td>Table cell</td>\r\n        <td>Table cell</td>\r\n        <td>Table cell</td>\r\n      </tr>\r\n      <tr>\r\n        <td>2</td>\r\n        <td>Table cell</td>\r\n        <td>Table cell</td>\r\n        <td>Table cell</td>\r\n        <td>Table cell</td>\r\n        <td>Table cell</td>\r\n        <td>Table cell</td>\r\n      </tr>\r\n      <tr>\r\n        <td>3</td>\r\n        <td>Table cell</td>\r\n        <td>Table cell</td>\r\n        <td>Table cell</td>\r\n        <td>Table cell</td>\r\n        <td>Table cell</td>\r\n        <td>Table cell</td>\r\n      </tr>\r\n    </tbody>\r\n  </Table>\r\n</div>\r\n`;\r\n","import React from \"react\";\r\nimport {Tab, Tabs, Nav, Col, Row} from \"react-bootstrap\";\r\nimport {Notice, KTCodeExample} from \"../../../_metronic/_partials/controls\";\r\n\r\nclass ControlledTabs extends React.Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    this.state = {\r\n      key: \"home\"\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Tabs\r\n        id=\"controlled-tab-example\"\r\n        activeKey={this.state.key}\r\n        onSelect={key => this.setState({ key })}\r\n      >\r\n        <Tab eventKey=\"home\" title=\"Home\">\r\n          Be wise as thou art cruel; do not press My tongue-tied patience with\r\n          too much disdain; Lest sorrow lend me words, and words express The\r\n          manner of my pity-wanting pain. If I might teach thee wit, better it\r\n          were, Though not to love, yet, love to tell me so;-- As testy sick\r\n          men, when their deaths be near, No news but health from their\r\n          physicians know;-- For, if I should despair, I should grow mad, And in\r\n          my madness might speak ill of thee;\r\n        </Tab>\r\n        <Tab eventKey=\"profile\" title=\"Profile\">\r\n          For shame! deny that thou bear'st love to any, Who for thy self art so\r\n          unprovident. Grant, if thou wilt, thou art belov'd of many, But that\r\n          thou none lov'st is most evident: For thou art so possess'd with\r\n          murderous hate, That 'gainst thy self thou stick'st not to conspire,\r\n          Seeking that beauteous roof to ruinate Which to repair should be thy\r\n          chief desire. O! change thy thought, that I may change my mind: Shall\r\n          hate be fairer lodg'd than gentle love?\r\n        </Tab>\r\n        <Tab eventKey=\"contact\" title=\"Contact\" disabled></Tab>\r\n      </Tabs>\r\n    );\r\n  }\r\n}\r\n\r\nexport default class TabsExamplesPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Notice icon=\"flaticon-warning font-primary\">\r\n          <span>Dynamic tabbed interfaces.</span>\r\n          <span>\r\n            For more info please check the components's official{\" \"}\r\n            <a\r\n              target=\"_blank\"\r\n              className=\"font-weight-bold\"\r\n              rel=\"noopener noreferrer\"\r\n              href=\"https://react-bootstrap.github.io/components/tabs/\"\r\n            >\r\n              demos & documentation\r\n            </a>\r\n          </span>\r\n        </Notice>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <KTCodeExample jsCode={jsCode1} beforeCodeTitle=\"Basic Example\">\r\n              <span>\r\n                Create dynamic tabbed interfaces, as described in the WAI ARIA\r\n                Authoring Practices.\r\n                <code>Tabs</code> is a higher-level component for quickly\r\n                creating a <code>Nav</code> matched with a set of{\" \"}\r\n                <code>TabPane</code>s.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <Tabs defaultActiveKey=\"profile\" id=\"uncontrolled-tab-example\">\r\n                <Tab eventKey=\"home\" title=\"Home\">\r\n                  How can I then return in happy plight, That am debarre'd the\r\n                  benefit of rest? When day's oppression is not eas'd by night,\r\n                  But day by night and night by day oppress'd, And each, though\r\n                  enemies to either's reign, Do in consent shake hands to\r\n                  torture me, The one by toil, the other to complain How far I\r\n                  toil, still farther off from thee. I tell the day, to please\r\n                  him thou art bright, And dost him grace when clouds do blot\r\n                  the heaven:\r\n                </Tab>\r\n                <Tab eventKey=\"profile\" title=\"Profile\">\r\n                  How sweet and lovely dost thou make the shame Which, like a\r\n                  canker in the fragrant rose, Doth spot the beauty of thy\r\n                  budding name! O! in what sweets dost thou thy sins enclose.\r\n                  That tongue that tells the story of thy days, Making\r\n                  lascivious comments on thy sport, Cannot dispraise, but in a\r\n                  kind of praise; Naming thy name, blesses an ill report. O!\r\n                  what a mansion have those vices got Which for their habitation\r\n                  chose out thee,\r\n                </Tab>\r\n                <Tab eventKey=\"contact\" title=\"Contact\" disabled></Tab>\r\n              </Tabs>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode3} beforeCodeTitle=\"No animation\">\r\n              <span>\r\n                Set the <code>transition</code> prop to <code>false</code>\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <Tabs\r\n                defaultActiveKey=\"home\"\r\n                transition={false}\r\n                id=\"noanim-tab-example\"\r\n              >\r\n                <Tab eventKey=\"home\" title=\"Home\">\r\n                  Those parts of thee that the world's eye doth view Want\r\n                  nothing that the thought of hearts can mend; All tongues--the\r\n                  voice of souls--give thee that due, Uttering bare truth, even\r\n                  so as foes commend. Thy outward thus with outward praise is\r\n                  crown'd; But those same tongues, that give thee so thine own,\r\n                  In other accents do this praise confound By seeing farther\r\n                  than the eye hath shown. They look into the beauty of thy\r\n                  mind, And that in guess they measure by thy deeds;\r\n                </Tab>\r\n                <Tab eventKey=\"profile\" title=\"Profile\">\r\n                  Being your slave what should I do but tend, Upon the hours,\r\n                  and times of your desire? I have no precious time at all to\r\n                  spend; Nor services to do, till you require. Nor dare I chide\r\n                  the world-without-end hour, Whilst I, my sovereign, watch the\r\n                  clock for you, Nor think the bitterness of absence sour, When\r\n                  you have bid your servant once adieu; Nor dare I question with\r\n                  my jealous thought Where you may be, or your affairs suppose,\r\n                </Tab>\r\n                <Tab eventKey=\"contact\" title=\"Contact\" disabled></Tab>\r\n              </Tabs>\r\n            </KTCodeExample>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <KTCodeExample jsCode={jsCode2} beforeCodeTitle=\"Controlled\">\r\n              <span>\r\n                <code>Tabs</code> can be controlled directly when you want to\r\n                handle the selection logic personally.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <ControlledTabs />\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode4} beforeCodeTitle=\"Custom Tab Layout\">\r\n              <span>\r\n                For more complex layouts the flexible <code>TabContainer</code>,{\" \"}\r\n                <code>TabContent</code>, and <code>TabPane</code> components\r\n                along with any style of <code>Nav</code> allow you to quickly\r\n                piece together your own Tabs component with additional markup\r\n                needed.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\r\n                <Row>\r\n                  <Col sm={3}>\r\n                    <Nav variant=\"pills\" className=\"flex-column\">\r\n                      <Nav.Item>\r\n                        <Nav.Link eventKey=\"first\">Tab 1</Nav.Link>\r\n                      </Nav.Item>\r\n                      <Nav.Item>\r\n                        <Nav.Link eventKey=\"second\">Tab 2</Nav.Link>\r\n                      </Nav.Item>\r\n                    </Nav>\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <Tab.Content>\r\n                      <Tab.Pane eventKey=\"first\">\r\n                        Let those who are in favour with their stars Of public\r\n                        honour and proud titles boast, Whilst I, whom fortune of\r\n                        such triumph bars Unlook'd for joy in that I honour\r\n                        most. Great princes' favourites their fair leaves spread\r\n                        But as the marigold at the sun's eye, And in themselves\r\n                        their pride lies buried, For at a frown they in their\r\n                        glory die. The painful warrior famoused for fight, After\r\n                        a thousand victories once foil'd,\r\n                      </Tab.Pane>\r\n                      <Tab.Pane eventKey=\"second\">\r\n                        Thy gift, thy tables, are within my brain Full\r\n                        character'd with lasting memory, Which shall above that\r\n                        idle rank remain, Beyond all date; even to eternity: Or,\r\n                        at the least, so long as brain and heart Have faculty by\r\n                        nature to subsist; Till each to raz'd oblivion yield his\r\n                        part Of thee, thy record never can be miss'd. That poor\r\n                        retention could not so much hold, Nor need I tallies thy\r\n                        dear love to score;\r\n                      </Tab.Pane>\r\n                    </Tab.Content>\r\n                  </Col>\r\n                </Row>\r\n              </Tab.Container>\r\n            </KTCodeExample>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst jsCode1 = `\r\n<Tabs defaultActiveKey=\"profile\" id=\"uncontrolled-tab-example\">\r\n  <Tab eventKey=\"home\" title=\"Home\">\r\n    <Sonnet />\r\n  </Tab>\r\n  <Tab eventKey=\"profile\" title=\"Profile\">\r\n    <Sonnet />\r\n  </Tab>\r\n  <Tab eventKey=\"contact\" title=\"Contact\" disabled>\r\n    <Sonnet />\r\n  </Tab>\r\n</Tabs>\r\n`;\r\nconst jsCode2 = `\r\nclass ControlledTabs extends React.Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    this.state = {\r\n      key: 'home',\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Tabs\r\n        id=\"controlled-tab-example\"\r\n        activeKey={this.state.key}\r\n        onSelect={key => this.setState({ key })}\r\n      >\r\n        <Tab eventKey=\"home\" title=\"Home\">\r\n          <Sonnet />\r\n        </Tab>\r\n        <Tab eventKey=\"profile\" title=\"Profile\">\r\n          <Sonnet />\r\n        </Tab>\r\n        <Tab eventKey=\"contact\" title=\"Contact\" disabled>\r\n          <Sonnet />\r\n        </Tab>\r\n      </Tabs>\r\n    );\r\n  }\r\n}\r\n\r\nrender(<ControlledTabs />);\r\n`;\r\nconst jsCode3 = `\r\n<Tabs defaultActiveKey=\"home\" transition={false} id=\"noanim-tab-example\">\r\n  <Tab eventKey=\"home\" title=\"Home\">\r\n    <Sonnet />\r\n  </Tab>\r\n  <Tab eventKey=\"profile\" title=\"Profile\">\r\n    <Sonnet />\r\n  </Tab>\r\n  <Tab eventKey=\"contact\" title=\"Contact\" disabled>\r\n    <Sonnet />\r\n  </Tab>\r\n</Tabs>\r\n`;\r\nconst jsCode4 = `\r\n<Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\r\n  <Row>\r\n    <Col sm={3}>\r\n      <Nav variant=\"pills\" className=\"flex-column\">\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"first\">Tab 1</Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"second\">Tab 2</Nav.Link>\r\n        </Nav.Item>\r\n      </Nav>\r\n    </Col>\r\n    <Col sm={9}>\r\n      <Tab.Content>\r\n        <Tab.Pane eventKey=\"first\">\r\n          <Sonnet />\r\n        </Tab.Pane>\r\n        <Tab.Pane eventKey=\"second\">\r\n          <Sonnet />\r\n        </Tab.Pane>\r\n      </Tab.Content>\r\n    </Col>\r\n  </Row>\r\n</Tab.Container>\r\n`;\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Overlay,\r\n  Tooltip,\r\n  OverlayTrigger,\r\n  ButtonToolbar\r\n} from \"react-bootstrap\";\r\nimport {Notice, KTCodeExample} from \"../../../_metronic/_partials/controls\";\r\n\r\nclass Example extends React.Component {\r\n  constructor(...args) {\r\n    super(...args);\r\n\r\n    this.attachRef = target => this.setState({ target });\r\n    this.state = { show: false };\r\n  }\r\n\r\n  render() {\r\n    const { show, target } = this.state;\r\n    return (\r\n      <>\r\n        <Button\r\n          ref={this.attachRef}\r\n          onClick={() => this.setState({ show: !show })}\r\n        >\r\n          Click me!\r\n        </Button>\r\n        <Overlay target={target} show={show} placement=\"right\">\r\n          {props => (\r\n            <Tooltip id=\"overlay-example\" {...props}>\r\n              My Tooltip\r\n            </Tooltip>\r\n          )}\r\n        </Overlay>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default class TooltipsExamplesPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Notice icon=\"flaticon-warning font-primary\">\r\n          <span>\r\n            A tooltip component for a more stylish alternative to that anchor\r\n            tag <code>title</code> attribute.\r\n          </span>{\" \"}\r\n          <span>\r\n            For more info please check the components's official{\" \"}\r\n            <a\r\n              target=\"_blank\"\r\n              className=\"font-weight-bold\"\r\n              rel=\"noopener noreferrer\"\r\n              href=\"https://react-bootstrap.github.io/components/overlays/#tooltips\"\r\n            >\r\n              demos & documentation\r\n            </a>\r\n          </span>\r\n        </Notice>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <KTCodeExample jsCode={jsCode1} beforeCodeTitle=\"Basic Example\">\r\n              <span>\r\n                You can pass the <code>Overlay</code> injected props directly to\r\n                the Tooltip component.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <Example />\r\n            </KTCodeExample>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <KTCodeExample jsCode={jsCode2} beforeCodeTitle=\"Trigger\">\r\n              <span>\r\n                Or pass a Tooltip element to <code>OverlayTrigger</code>{\" \"}\r\n                instead.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <ButtonToolbar>\r\n                {[\"top\", \"right\", \"bottom\", \"left\"].map(placement => (\r\n                  <span key={placement}>\r\n                    <OverlayTrigger\r\n                      placement={placement}\r\n                      overlay={\r\n                        <Tooltip id={`tooltip-${placement}`}>\r\n                          Tooltip on <strong>{placement}</strong>.\r\n                        </Tooltip>\r\n                      }\r\n                    >\r\n                      <Button variant=\"secondary\">\r\n                        Tooltip on {placement}\r\n                      </Button>\r\n                    </OverlayTrigger>\r\n                    <span>&nbsp;</span>\r\n                  </span>\r\n                ))}\r\n              </ButtonToolbar>\r\n            </KTCodeExample>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst jsCode1 = `\r\nclass Example extends React.Component {\r\n  constructor(...args) {\r\n    super(...args);\r\n\r\n    this.attachRef = target => this.setState({ target });\r\n    this.state = { show: false };\r\n  }\r\n\r\n  render() {\r\n    const { show, target } = this.state;\r\n    return (\r\n      <>\r\n        <Button\r\n          ref={this.attachRef}\r\n          onClick={() => this.setState({ show: !show })}\r\n        >\r\n          Click me!\r\n        </Button>\r\n        <Overlay target={target} show={show} placement=\"right\">\r\n          {props => (\r\n            <Tooltip id=\"overlay-example\" {...props}>\r\n              My Tooltip\r\n            </Tooltip>\r\n          )}\r\n        </Overlay>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nrender(<Example />);\r\n`;\r\nconst jsCode2 = `\r\n<ButtonToolbar>\r\n  {['top', 'right', 'bottom', 'left'].map(placement => (\r\n    <OverlayTrigger\r\n      key={placement}\r\n      placement={placement}\r\n      overlay={\r\n        <Tooltip id={\\`tooltip-\\${placement}\\`}>\r\n          Tooltip on <strong>{placement}</strong>.\r\n        </Tooltip>\r\n      }\r\n    >\r\n      <Button variant=\"secondary\">Tooltip on {placement}</Button>\r\n    </OverlayTrigger>\r\n  ))}\r\n</ButtonToolbar>\r\n`;\r\n","import React from \"react\";\r\nimport {Button, Toast, Col, Row} from \"react-bootstrap\";\r\nimport {Notice, KTCodeExample} from \"../../../_metronic/_partials/controls\";\r\n\r\nclass Example extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showA: true,\r\n      showB: true\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { showA, showB } = this.state;\r\n    const toggleShowA = () => this.setState({ showA: !showA });\r\n    const toggleShowB = () => this.setState({ showB: !showB });\r\n    return (\r\n      <Row>\r\n        <Col xs={6}>\r\n          <Toast show={showA} onClose={toggleShowA}>\r\n            <Toast.Header>\r\n              <img\r\n                src=\"holder.js/20x20?text=%20\"\r\n                className=\"rounded mr-2\"\r\n                alt=\"\"\r\n              />\r\n              <strong className=\"mr-auto\">Bootstrap</strong>\r\n              <small>11 mins ago</small>\r\n            </Toast.Header>\r\n            <Toast.Body>\r\n              Woohoo, you're reading this text in a Toast!\r\n            </Toast.Body>\r\n          </Toast>\r\n        </Col>\r\n        <Col xs={6}>\r\n          <Button onClick={toggleShowA}>\r\n            Toggle Toast <strong>with</strong> Animation\r\n          </Button>\r\n        </Col>\r\n        <Col xs={6} className=\"my-1\">\r\n          <Toast onClose={toggleShowB} show={showB} animation={false}>\r\n            <Toast.Header>\r\n              <img\r\n                src=\"holder.js/20x20?text=%20\"\r\n                className=\"rounded mr-2\"\r\n                alt=\"\"\r\n              />\r\n              <strong className=\"mr-auto\">Bootstrap</strong>\r\n              <small>11 mins ago</small>\r\n            </Toast.Header>\r\n            <Toast.Body>\r\n              Woohoo, you're reading this text in a Toast!\r\n            </Toast.Body>\r\n          </Toast>\r\n        </Col>\r\n        <Col xs={6}>\r\n          <Button onClick={toggleShowB}>\r\n            Toggle Toast <strong>without</strong> Animation\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nclass Example1 extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      show: false\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { show } = this.state;\r\n    const handleShow = () => this.setState({ show: true });\r\n    const handleClose = () => this.setState({ show: false });\r\n    return (\r\n      <Row>\r\n        <Col xs={6}>\r\n          <Toast onClose={handleClose} show={show} delay={3000} autohide>\r\n            <Toast.Header>\r\n              <img\r\n                src=\"holder.js/20x20?text=%20\"\r\n                className=\"rounded mr-2\"\r\n                alt=\"\"\r\n              />\r\n              <strong className=\"mr-auto\">Bootstrap</strong>\r\n              <small>11 mins ago</small>\r\n            </Toast.Header>\r\n            <Toast.Body>\r\n              Woohoo, you're reading this text in a Toast!\r\n            </Toast.Body>\r\n          </Toast>\r\n        </Col>\r\n        <Col xs={6}>\r\n          <Button onClick={handleShow}>Show Toast</Button>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default class ToastsExamplesPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Notice icon=\"flaticon-warning font-primary\">\r\n          <span>\r\n            Push notifications to your visitors with a toast, a lightweight and\r\n            easily customizable alert message.\r\n          </span>{\" \"}\r\n          <span>\r\n            For more info please check the components's official{\" \"}\r\n            <a\r\n              target=\"_blank\"\r\n              className=\"font-weight-bold\"\r\n              rel=\"noopener noreferrer\"\r\n              href=\"https://react-bootstrap.github.io/components/toasts/\"\r\n            >\r\n              demos & documentation\r\n            </a>\r\n          </span>\r\n        </Notice>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <KTCodeExample jsCode={jsCode1} beforeCodeTitle=\"Basic\">\r\n              <div className=\"section\">\r\n                <span className=\"section-sub\">\r\n                  To encourage extensible and predictable toasts, we recommend a\r\n                  header and body. Toast headers use display: flex, allowing\r\n                  easy alignment of content thanks to our margin and flexbox\r\n                  utilities.\r\n                </span>\r\n                <p className=\"section-sub\">\r\n                  Toasts are as flexible as you need and have very little\r\n                  required markup. At a minimum, we require a single element to\r\n                  contain your “toasted” content and strongly encourage a\r\n                  dismiss button.\r\n                </p>\r\n                <div className=\"separator separator-dashed my-7\"></div>\r\n                <Toast>\r\n                  <Toast.Header>\r\n                    <img\r\n                      src=\"holder.js/20x20?text=%20\"\r\n                      className=\"rounded mr-2\"\r\n                      alt=\"\"\r\n                    />\r\n                    <strong className=\"mr-auto\">Bootstrap</strong>\r\n                    <small>11 mins ago</small>\r\n                  </Toast.Header>\r\n                  <Toast.Body>\r\n                    Hello, world! This is a toast message.\r\n                  </Toast.Body>\r\n                </Toast>\r\n              </div>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode3} beforeCodeTitle=\"Stacking\">\r\n              <span>\r\n                When you have multiple toasts, we default to vertically stacking\r\n                them in a readable manner.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <>\r\n                <Toast>\r\n                  <Toast.Header>\r\n                    <img\r\n                      src=\"holder.js/20x20?text=%20\"\r\n                      className=\"rounded mr-2\"\r\n                      alt=\"\"\r\n                    />\r\n                    <strong className=\"mr-auto\">Bootstrap</strong>\r\n                    <small>just now</small>\r\n                  </Toast.Header>\r\n                  <Toast.Body>See? Just like this.</Toast.Body>\r\n                </Toast>\r\n                <Toast>\r\n                  <Toast.Header>\r\n                    <img\r\n                      src=\"holder.js/20x20?text=%20\"\r\n                      className=\"rounded mr-2\"\r\n                      alt=\"\"\r\n                    />\r\n                    <strong className=\"mr-auto\">Bootstrap</strong>\r\n                    <small>2 seconds ago</small>\r\n                  </Toast.Header>\r\n                  <Toast.Body>\r\n                    Heads up, toasts will stack automatically\r\n                  </Toast.Body>\r\n                </Toast>\r\n              </>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample\r\n              jsCode={jsCode5}\r\n              beforeCodeTitle=\"Autohide\"\r\n              codeBlockHeight=\"400px\"\r\n            >\r\n              <span>\r\n                A Toast can also automatically hide after X milliseconds. For\r\n                that, use the <code>autohide</code> prop in combination with{\" \"}\r\n                <code>delay</code> the prop to sepecify the delay. But be aware,\r\n                that it will only trigger the <code>onClose</code> function, you\r\n                have to set manually the show property.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <Example1 />\r\n            </KTCodeExample>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <KTCodeExample\r\n              jsCode={jsCode2}\r\n              beforeCodeTitle=\"Dismissible\"\r\n              codeBlockHeight=\"400px\"\r\n            >\r\n              <Example />\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample\r\n              jsCode={jsCode4}\r\n              beforeCodeTitle=\"Placement\"\r\n              codeBlockHeight=\"400px\"\r\n            >\r\n              <span>\r\n                Place toasts with custom CSS as you need them. The top right is\r\n                often used for notifications, as is the top middle.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <div\r\n                aria-live=\"polite\"\r\n                aria-atomic=\"true\"\r\n                style={{\r\n                  position: \"relative\",\r\n                  minHeight: \"200px\"\r\n                }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    right: 0\r\n                  }}\r\n                >\r\n                  <Toast>\r\n                    <Toast.Header>\r\n                      <img\r\n                        src=\"holder.js/20x20?text=%20\"\r\n                        className=\"rounded mr-2\"\r\n                        alt=\"\"\r\n                      />\r\n                      <strong className=\"mr-auto\">Bootstrap</strong>\r\n                      <small>just now</small>\r\n                    </Toast.Header>\r\n                    <Toast.Body>See? Just like this.</Toast.Body>\r\n                  </Toast>\r\n                  <Toast>\r\n                    <Toast.Header>\r\n                      <img\r\n                        src=\"holder.js/20x20?text=%20\"\r\n                        className=\"rounded mr-2\"\r\n                        alt=\"\"\r\n                      />\r\n                      <strong className=\"mr-auto\">Bootstrap</strong>\r\n                      <small>2 seconds ago</small>\r\n                    </Toast.Header>\r\n                    <Toast.Body>\r\n                      Heads up, toasts will stack automatically\r\n                    </Toast.Body>\r\n                  </Toast>\r\n                </div>\r\n              </div>\r\n            </KTCodeExample>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst jsCode1 = `\r\n<Toast>\r\n  <Toast.Header>\r\n    <img src=\"holder.js/20x20?text=%20\" className=\"rounded mr-2\" alt=\"\" />\r\n    <strong className=\"mr-auto\">Bootstrap</strong>\r\n    <small>11 mins ago</small>\r\n  </Toast.Header>\r\n  <Toast.Body>Hello, world! This is a toast message.</Toast.Body>\r\n</Toast>\r\n`;\r\nconst jsCode2 = `\r\nclass Example extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showA: true,\r\n      showB: true,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { showA, showB } = this.state;\r\n    const toggleShowA = () => this.setState({ showA: !showA });\r\n    const toggleShowB = () => this.setState({ showB: !showB });\r\n    return (\r\n      <Row>\r\n        <Col xs={6}>\r\n          <Toast show={showA} onClose={toggleShowA}>\r\n            <Toast.Header>\r\n              <img\r\n                src=\"holder.js/20x20?text=%20\"\r\n                className=\"rounded mr-2\"\r\n                alt=\"\"\r\n              />\r\n              <strong className=\"mr-auto\">Bootstrap</strong>\r\n              <small>11 mins ago</small>\r\n            </Toast.Header>\r\n            <Toast.Body>\r\n              Woohoo, you're reading this text in a Toast!\r\n            </Toast.Body>\r\n          </Toast>\r\n        </Col>\r\n        <Col xs={6}>\r\n          <Button onClick={toggleShowA}>\r\n            Toggle Toast <strong>with</strong> Animation\r\n          </Button>\r\n        </Col>\r\n        <Col xs={6} className=\"my-1\">\r\n          <Toast onClose={toggleShowB} show={showB} animation={false}>\r\n            <Toast.Header>\r\n              <img\r\n                src=\"holder.js/20x20?text=%20\"\r\n                className=\"rounded mr-2\"\r\n                alt=\"\"\r\n              />\r\n              <strong className=\"mr-auto\">Bootstrap</strong>\r\n              <small>11 mins ago</small>\r\n            </Toast.Header>\r\n            <Toast.Body>\r\n              Woohoo, you're reading this text in a Toast!\r\n            </Toast.Body>\r\n          </Toast>\r\n        </Col>\r\n        <Col xs={6}>\r\n          <Button onClick={toggleShowB}>\r\n            Toggle Toast <strong>without</strong> Animation\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nrender(<Example />);\r\n`;\r\nconst jsCode3 = `\r\n<>\r\n  <Toast>\r\n    <Toast.Header>\r\n      <img src=\"holder.js/20x20?text=%20\" className=\"rounded mr-2\" alt=\"\" />\r\n      <strong className=\"mr-auto\">Bootstrap</strong>\r\n      <small>just now</small>\r\n    </Toast.Header>\r\n    <Toast.Body>See? Just like this.</Toast.Body>\r\n  </Toast>\r\n  <Toast>\r\n    <Toast.Header>\r\n      <img src=\"holder.js/20x20?text=%20\" className=\"rounded mr-2\" alt=\"\" />\r\n      <strong className=\"mr-auto\">Bootstrap</strong>\r\n      <small>2 seconds ago</small>\r\n    </Toast.Header>\r\n    <Toast.Body>Heads up, toasts will stack automatically</Toast.Body>\r\n  </Toast>\r\n</>\r\n`;\r\nconst jsCode4 = `\r\n<div\r\n  aria-live=\"polite\"\r\n  aria-atomic=\"true\"\r\n  style={{\r\n    position: 'relative',\r\n    minHeight: '200px',\r\n  }}\r\n>\r\n  <div\r\n    style={{\r\n      position: 'absolute',\r\n      top: 0,\r\n      right: 0,\r\n    }}\r\n  >\r\n    <Toast>\r\n      <Toast.Header>\r\n        <img src=\"holder.js/20x20?text=%20\" className=\"rounded mr-2\" alt=\"\" />\r\n        <strong className=\"mr-auto\">Bootstrap</strong>\r\n        <small>just now</small>\r\n      </Toast.Header>\r\n      <Toast.Body>See? Just like this.</Toast.Body>\r\n    </Toast>\r\n    <Toast>\r\n      <Toast.Header>\r\n        <img src=\"holder.js/20x20?text=%20\" className=\"rounded mr-2\" alt=\"\" />\r\n        <strong className=\"mr-auto\">Bootstrap</strong>\r\n        <small>2 seconds ago</small>\r\n      </Toast.Header>\r\n      <Toast.Body>Heads up, toasts will stack automatically</Toast.Body>\r\n    </Toast>\r\n  </div>\r\n</div>\r\n`;\r\nconst jsCode5 = `\r\nclass Example extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      show: false,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { show } = this.state;\r\n    const handleShow = () => this.setState({ show: true });\r\n    const handleClose = () => this.setState({ show: false });\r\n    return (\r\n      <Row>\r\n        <Col xs={6}>\r\n          <Toast onClose={handleClose} show={show} delay={3000} autohide>\r\n            <Toast.Header>\r\n              <img\r\n                src=\"holder.js/20x20?text=%20\"\r\n                className=\"rounded mr-2\"\r\n                alt=\"\"\r\n              />\r\n              <strong className=\"mr-auto\">Bootstrap</strong>\r\n              <small>11 mins ago</small>\r\n            </Toast.Header>\r\n            <Toast.Body>\r\n              Woohoo, you're reading this text in a Toast!\r\n            </Toast.Body>\r\n          </Toast>\r\n        </Col>\r\n        <Col xs={6}>\r\n          <Button onClick={handleShow}>Show Toast</Button>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nrender(<Example />);\r\n`;\r\n","import React from \"react\";\r\nimport {Redirect, Switch} from \"react-router-dom\";\r\nimport AccordionExamplesPage from \"./AccordionExamplesPage\";\r\nimport AlertExamplesPage from \"./AlertExamplesPage\";\r\nimport BadgeExamplesPage from \"./BadgeExamplesPage\";\r\nimport BreadcrumbExamplesPage from \"./BreadcrumbExamplesPage\";\r\nimport ButtonsExamplesPage from \"./ButtonsExamplesPage\";\r\nimport ButtonGroupExamplesPage from \"./ButtonGroupExamplesPage\";\r\nimport CardsExamplesPage from \"./CardsExamplesPage\";\r\nimport CarouselExamplesPage from \"./CarouselExamplesPage\";\r\nimport DropdownsExamplesPage from \"./DropdownsExamplesPage\";\r\nimport FormsExamplesPage from \"./FormsExamplesPage\";\r\nimport InputGroupExamplesPage from \"./InputGroupExamplesPage\";\r\nimport ImagesExamplesPage from \"./ImagesExamplesPage\";\r\nimport FiguresExamplesPage from \"./FiguresExamplesPage\";\r\nimport JumbotronExamplesPage from \"./JumbotronExamplesPage\";\r\nimport ListGroupExamplesPage from \"./ListGroupExamplesPage\";\r\nimport ModalExamplesPage from \"./ModalExamplesPage\";\r\nimport NavsExamplesPage from \"./NavsExamplesPage\";\r\nimport NavbarExamplesPage from \"./NavbarExamplesPage\";\r\nimport OverlaysExamplesPage from \"./OverlaysExamplesPage\";\r\nimport PaginationExamplesPage from \"./PaginationExamplesPage\";\r\nimport PopoversExamplesPage from \"./PopoversExamplesPage\";\r\nimport ProgressExamplesPage from \"./ProgressExamplesPage\";\r\nimport SpinnersExamplesPage from \"./SpinnersExamplesPage\";\r\nimport TableExamplesPage from \"./TableExamplesPage\";\r\nimport TabsExamplesPage from \"./TabsExamplesPage\";\r\nimport TooltipsExamplesPage from \"./TooltipsExamplesPage\";\r\nimport ToastsExamplesPage from \"./ToastsExamplesPage\";\r\nimport {ContentRoute} from \"../../../_metronic/layout\";\r\n\r\nexport default function ReactBootstrapPage() {\r\n  return (\r\n    <Switch>\r\n      <Redirect\r\n        exact={true}\r\n        from=\"/react-bootstrap\"\r\n        to=\"/react-bootstrap/accordion\"\r\n      />\r\n\r\n      <ContentRoute\r\n        path=\"/react-bootstrap/accordion\" \r\n        component={AccordionExamplesPage} \r\n      />\r\n      <ContentRoute\r\n        path=\"/react-bootstrap/alert\" \r\n        component={AlertExamplesPage} \r\n      />\r\n      <ContentRoute\r\n        path=\"/react-bootstrap/badge\" \r\n        component={BadgeExamplesPage} \r\n      />\r\n      <ContentRoute\r\n        path=\"/react-bootstrap/breadcrumb\" \r\n        component={BreadcrumbExamplesPage} \r\n      />\r\n      <ContentRoute\r\n        path=\"/react-bootstrap/buttons\" \r\n        component={ButtonsExamplesPage} \r\n      />\r\n      <ContentRoute\r\n        path=\"/react-bootstrap/button-group\" \r\n        component={ButtonGroupExamplesPage} \r\n      />\r\n      <ContentRoute\r\n        path=\"/react-bootstrap/cards\" \r\n        component={CardsExamplesPage} \r\n      />\r\n      <ContentRoute\r\n        path=\"/react-bootstrap/carousel\" \r\n        component={CarouselExamplesPage} \r\n      />\r\n      <ContentRoute\r\n        path=\"/react-bootstrap/dropdowns\" \r\n        component={DropdownsExamplesPage} \r\n      />\r\n      <ContentRoute\r\n        path=\"/react-bootstrap/forms\" \r\n        component={FormsExamplesPage} \r\n      />\r\n      <ContentRoute\r\n        path=\"/react-bootstrap/input-group\" \r\n        component={InputGroupExamplesPage} \r\n      />\r\n      <ContentRoute\r\n        path=\"/react-bootstrap/images\" \r\n        component={ImagesExamplesPage} \r\n      />\r\n      <ContentRoute\r\n        path=\"/react-bootstrap/figures\" \r\n        component={FiguresExamplesPage} \r\n      />\r\n      <ContentRoute\r\n        path=\"/react-bootstrap/jumbotron\" \r\n        component={JumbotronExamplesPage} \r\n      />\r\n      <ContentRoute\r\n        path=\"/react-bootstrap/list-group\" \r\n        component={ListGroupExamplesPage} \r\n      />\r\n      <ContentRoute\r\n        path=\"/react-bootstrap/modal\" \r\n        component={ModalExamplesPage} \r\n      />\r\n      <ContentRoute\r\n        path=\"/react-bootstrap/navs\" \r\n        component={NavsExamplesPage} \r\n      />\r\n      <ContentRoute\r\n        path=\"/react-bootstrap/navbar\" \r\n        component={NavbarExamplesPage} \r\n      />\r\n      <ContentRoute\r\n        path=\"/react-bootstrap/overlays\" \r\n        component={OverlaysExamplesPage} \r\n      />\r\n      <ContentRoute\r\n        path=\"/react-bootstrap/pagination\" \r\n        component={PaginationExamplesPage} \r\n      />\r\n      <ContentRoute\r\n        path=\"/react-bootstrap/popovers\" \r\n        component={PopoversExamplesPage} \r\n      />\r\n      <ContentRoute\r\n        path=\"/react-bootstrap/progress\" \r\n        component={ProgressExamplesPage} \r\n      />\r\n      <ContentRoute\r\n        path=\"/react-bootstrap/spinners\" \r\n        component={SpinnersExamplesPage} \r\n      />\r\n      <ContentRoute\r\n        path=\"/react-bootstrap/table\" \r\n        component={TableExamplesPage} \r\n      />\r\n      <ContentRoute\r\n        path=\"/react-bootstrap/tabs\" \r\n        component={TabsExamplesPage} \r\n      />\r\n      <ContentRoute\r\n        path=\"/react-bootstrap/tooltips\" \r\n        component={TooltipsExamplesPage} \r\n      />\r\n      <ContentRoute\r\n        path=\"/react-bootstrap/toasts\" \r\n        component={ToastsExamplesPage} \r\n      />\r\n\r\n    </Switch>\r\n  );\r\n}\r\n"],"sourceRoot":""}